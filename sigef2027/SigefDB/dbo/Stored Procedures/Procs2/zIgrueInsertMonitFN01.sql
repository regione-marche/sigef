CREATE PROCEDURE [dbo].[zIgrueInsertMonitFN01]
( 
 @DataDa DATETIME,
 @DataA DATETIME,
 @IdInvio INT,
 @rNumber INT
)
AS
BEGIN

WITH CLG AS 
(
	SELECT 
	COD_LIV_GERARCHICO,
	VALORE_DATI_RILEVATI,
	DESCRIZIONE_CODICE_LIVELLO_GERARCHICO,
	COD_STRUTTURA_PROT
	FROM 
	IGRUE_MONIT.dbo.IGRUE_T_TC36 
	WHERE 
	DESCRIZIONE_CODICE_LIVELLO_GERARCHICO LIKE '%POR Marche FESR%' 
	AND 
	COD_STRUTTURA_PROT LIKE '%FN01%'
)

INSERT INTO IGRUE_MONIT.dbo.IGRUE_FN01
(
COD_LOCALE_PROGETTO,
COD_PROGRAMMA,
COD_LIV_GERARCHICO,
IMPORTO_AMMESSO,
FLG_CANCELLAZIONE,
--OPERAZIONE,
ID_INVIO,
NR_RIGA_INVIO,
--NR_RIGA_CANCELLAZIONE
CODICE_FONDO
)

--Programma#Fondo#M#Asse#OB. Tematico#Pr. Inv#Ob. Spec

SELECT 
P.ID_PROGETTO AS COD_LOCALE_PROGETTO,
'2014IT16RFOP013' AS COD_PROGRAMMA, --VERIFICARE CON TC4
CLG.COD_LIV_GERARCHICO AS COD_LIV_GERARCHICO,  --VERIFICARE CON TC36 
ROUND(CONVERT(DECIMAL(13,2),VP.IMPORTO),2) AS IMPORTO_AMMESSO, --INDIVIDUARE CAMPO SIGEF PER COSTO AMMESSO
NULL AS FLG_CANCELLAZIONE ,
@IdInvio AS ID_INVIO,
ISNULL(@rNumber,0) + ROW_NUMBER() OVER(ORDER BY P.ID_PROGETTO ASC) AS NR_RIGA_INVIO,
'FESR20142020' AS CODICE_FONDO  
FROM vPROGETTO P 
INNER JOIN vBANDO B ON
P.ID_BANDO = B.ID_BANDO
INNER JOIN BANDO_PROGRAMMAZIONE BP ON
B.ID_BANDO = BP.ID_BANDO
INNER JOIN zPROGRAMMAZIONE PRG ON
BP.ID_PROGRAMMAZIONE = PRG.ID
INNER JOIN zPSR_ALBERO PA ON
PRG.COD_TIPO = PA.CODICE
INNER JOIN zPSR PSR ON
PA.COD_PSR = PSR.CODICE
INNER JOIN zOB_MISURA OS ON
B.ID_PROGRAMMAZIONE = OS.ID_PROGRAMMAZIONE
INNER JOIN zPROGRAMMAZIONE AZIONI ON
B.ID_PROGRAMMAZIONE = AZIONI.ID
INNER JOIN zPROGRAMMAZIONE ASSI ON 
AZIONI.ID_PADRE = ASSI.ID
LEFT OUTER JOIN 
(
	SELECT 
	D.CODICE AS COD_PI,
	DP.ID_PROGRAMMAZIONE,
	PPI.CODICE,
	PPI.COD_TIPO 
	FROM zDIMENSIONI D 
	INNER JOIN zDIMENSIONI_X_PROGRAMMAZIONE DP ON
	D.ID = DP.ID_DIMENSIONE 
	INNER JOIN zPROGRAMMAZIONE PPI ON
	DP.ID_PROGRAMMAZIONE = PPI.ID
	WHERE D.COD_DIM = 'PI'
) AS PRI ON
AZIONI.ID = PRI.ID_PROGRAMMAZIONE
LEFT OUTER JOIN 
(
	SELECT 
	D.CODICE AS COD_OT,
	DP.ID_PROGRAMMAZIONE,
	DP.ID_DIM_X_PROGRAMMAZIONE,
	DP.ID_DIMENSIONE,
	PPI.CODICE,
	PPI.COD_TIPO 
	FROM zDIMENSIONI D 
	INNER JOIN zDIMENSIONI_X_PROGRAMMAZIONE DP ON
	D.ID = DP.ID_DIMENSIONE 
	INNER JOIN zPROGRAMMAZIONE PPI ON
	DP.ID_PROGRAMMAZIONE = PPI.ID
	WHERE D.COD_DIM = 'OT'
) AS OT ON
ASSI.ID = OT.ID_PROGRAMMAZIONE
LEFT OUTER JOIN 
(
	SELECT 
	D.CODICE AS COD_OT,
	DP.ID_PROGRAMMAZIONE,
	DP.ID_DIM_X_PROGRAMMAZIONE,
	DP.ID_DIMENSIONE,
	PPI.CODICE,
	PPI.COD_TIPO 
	FROM zDIMENSIONI D 
	INNER JOIN zDIMENSIONI_X_PROGRAMMAZIONE DP ON
	D.ID = DP.ID_DIMENSIONE 
	INNER JOIN zPROGRAMMAZIONE PPI ON
	DP.ID_PROGRAMMAZIONE = PPI.ID
	WHERE D.COD_DIM = 'OT'
) AS OT2 ON
AZIONI.ID = OT2.ID_PROGRAMMAZIONE
LEFT OUTER JOIN  CLG ON
--'2014IT16RFOP013#ERDF#M#'+ASSI.CODICE + CASE WHEN OT.CODICE IS NULL THEN '' ELSE '#0' END + ISNULL(OT.CODICE,'#N.A.') + '#' + ISNULL(PRI.COD_PI,'N.A.') + '#' + REPLACE(OS.CODICE, 'OS ','') = CLG.VALORE_DATI_RILEVATI
'2014IT16RFOP013#ERDF#M#'+ASSI.CODICE + CASE WHEN COALESCE(OT.CODICE, OT2.CODICE) IS NULL THEN '' ELSE '#0' END + ISNULL(COALESCE(OT.CODICE, OT2.CODICE),'#N.A.') + '#' + ISNULL(PRI.COD_PI,'N.A.') + '#' + REPLACE(OS.CODICE, 'OS ','') = CLG.VALORE_DATI_RILEVATI
INNER JOIN 
(
	SELECT 
	VPI.ID_PROGETTO,
	SUM(ISNULL(VPI.CONTRIBUTO_RICHIESTO,0)) AS IMPORTO 
	FROM 
	vPIANO_INVESTIMENTI VPI
	WHERE 
	VPI.ID_INVESTIMENTO_ORIGINALE IS NOT NULL
	AND
	VPI.ID_VARIANTE IS NULL
	--AND VPI.AMMESSO = 1 --VERIFICARE VALIDITA' CONDIZIONE SE AMMESSO = 1
	GROUP BY VPI.ID_PROGETTO
) AS VP ON
P.ID_PROGETTO = VP.ID_PROGETTO
WHERE 
P.COD_STATO IN ('F','V','S','O','T','X','C','Y','E','R') 
AND 
PSR.CODICE = 'POR20142020'
AND PRG.ID NOT IN (17,18,19)
AND 
BP.ID_PROGRAMMAZIONE NOT IN (17,18,19)
AND
P.COD_AGEA IS NOT NULL
--26/01/2018
--CLAUSOLA TEMPORANEA PER ESCLUDERE PROGETTO STRUMENTI FINANZIARI ARTIGIANCASSA
AND P.ID_PROGETTO <> 13301

SELECT ISNULL(MAX(NR_RIGA_INVIO),0) FROM IGRUE_MONIT.dbo.IGRUE_FN01 WHERE ID_INVIO = @IdInvio

END
