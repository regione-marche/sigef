CREATE PROCEDURE [dbo].[zIgrueInsertMonitFN00]
( 
 @DataDa DATETIME,
 @DataA DATETIME,
 @IdInvio INT,
 @rNumber INT
)
AS
BEGIN

WITH TREE AS 
(
	SELECT 
	PRG.ID,
	PRG.CODICE,
	PRG.DESCRIZIONE,
	PRG.ID_PADRE,
	PRG.ID AS ID_ROOT,
	PSA.LIVELLO
	FROM 
	ZPROGRAMMAZIONE PRG 
	INNER JOIN 
	ZPSR_ALBERO PSA ON 
	PRG.COD_TIPO = PSA.CODICE
	WHERE 
	PSA.COD_PSR = 'POR20142020'
	AND 
	PSA.LIVELLO = 1
	UNION ALL
	SELECT 
	PRGN.ID,
	PRGN.CODICE,
	PRGN.DESCRIZIONE,
	PRGN.ID_PADRE,
	TREE.ID_ROOT,
	PSA.LIVELLO
	FROM 
	ZPROGRAMMAZIONE PRGN
	INNER JOIN 
	ZPSR_ALBERO PSA ON 
	PRGN.COD_TIPO = PSA.CODICE
	INNER JOIN TREE ON 
	PRGN.ID_PADRE = TREE.ID
	WHERE 
	--PRGN.COD_TIPO LIKE 'POR20142020%'
	PSA.COD_PSR = 'POR20142020'
)

INSERT INTO IGRUE_MONIT.dbo.IGRUE_FN00
(
COD_LOCALE_PROGETTO,
COD_FONDO,
COD_NORMA,
COD_DEL_CIPE,
COD_LOCALIZZAZIONE,
CF_COFINANZ,
IMPORTO,
FLG_CANCELLAZIONE,
--OPERAZIONE,
ID_INVIO,
NR_RIGA_INVIO,
--NR_RIGA_CANCELLAZIONE
CODICE_FONDO
)


SELECT 
N.COD_LOCALE_PROGETTO,
N.COD_FONTE,
N.COD_NORMA,
N.COD_DEL_CIPE,
N.COD_LOCALIZZAZIONE,
N.CF_COFINANZ,
N.IMPORTO,
N.FLG_CANCELLAZIONE,
@IdInvio AS ID_INVIO,
ISNULL(@rNumber,0) + ROW_NUMBER() OVER(ORDER BY N.COD_LOCALE_PROGETTO ASC) AS NR_RIGA_INVIO,
N.CODICE_FONDO
FROM 
(
SELECT 
P.ID_PROGETTO AS COD_LOCALE_PROGETTO,
--'ERDF' AS COD_FONDO, --VERIFICARE CON TC33
FF.COD_FONTE,
--'99999' AS COD_NORMA,  --VERIFICARE CON TC33
FF.COD_NORMA,
'99999' AS COD_DEL_CIPE, --VERIFICARE TC33
--'999999999' AS COD_LOCALIZZAZIONE,
FF.COD_LOCALIZZAZIONE, 
CASE WHEN FF.COD_FONTE = 'PRT' THEN I.CUAA ELSE
'99999' END AS CF_COFINANZ,
CASE 
--WHEN FF.COD_FONTE = 'PRT' THEN VP.IMPORTO_PRIV 
----WHEN FF.COD_FONTE = 'PRT' THEN ROUND((VP.COSTO_AMMESSO - VP.IMPORTO_UE - VP.IMPORTO_NAZ - VP.IMPORTO_REG),2)
--WHEN FF.COD_FONTE = 'FPREG' THEN ROUND((VP.IMPORTO -((VP.IMPORTO*0.5) + (VP.IMPORTO*0.35))),2)
--ELSE 
--ROUND(CONVERT(DECIMAL(13,2),((VP.IMPORTO*FF.PERCENTUALE)/100)),2) END AS IMPORTO,
WHEN FF.COD_FONTE = 'PRT' THEN VP.COSTO_AMMESSO - VP.IMPORTO_UE - VP.IMPORTO_NAZ - VP.IMPORTO_REG
WHEN FF.COD_FONTE = 'FPREG' THEN VP.IMPORTO_REG
ELSE 
ROUND(CONVERT(DECIMAL(13,2),((VP.IMPORTO_CONTRIBUTO*FF.PERCENTUALE)/100)),2) END AS IMPORTO,
NULL AS FLG_CANCELLAZIONE,
--@IdInvio AS ID_INVIO,
--ISNULL(@rNumber,0) + ROW_NUMBER() OVER(ORDER BY P.ID_PROGETTO ASC) AS NR_RIGA_INVIO,
'FESR20142020' AS CODICE_FONDO  
FROM vPROGETTO P
INNER JOIN vBANDO B ON
P.ID_BANDO = B.ID_BANDO
--INNER JOIN PROGETTO_STORICO PS ON
--P.ID_PROGETTO = PS.ID_PROGETTO
INNER JOIN BANDO_PROGRAMMAZIONE BP ON
B.ID_BANDO = BP.ID_BANDO
INNER JOIN zPROGRAMMAZIONE PRG ON
BP.ID_PROGRAMMAZIONE = PRG.ID
INNER JOIN zPSR_ALBERO PA ON
PRG.COD_TIPO = PA.CODICE
INNER JOIN zPSR PSR ON
PA.COD_PSR = PSR.CODICE
--INNER JOIN BANDO_RESPONSABILI BR ON
--B.ID_BANDO = BR.ID_BANDO
INNER JOIN 
(
	SELECT 
	VPI.ID_PROGETTO,
	--SUM(VPI.CONTRIBUTO_RICHIESTO) AS IMPORTO,
	--SUM(ISNULL(VPI.COSTO_INVESTIMENTO,0)) AS COSTO_AMMESSO,
	--SUM(ISNULL(VPI.COSTO_INVESTIMENTO,0)) - SUM(VPI.CONTRIBUTO_RICHIESTO) AS IMPORTO_PRIV,
	--SUM(VPI.CONTRIBUTO_RICHIESTO*0.5) AS IMPORTO_UE,
	--SUM(VPI.CONTRIBUTO_RICHIESTO*0.35) AS IMPORTO_NAZ,
	--SUM((VPI.CONTRIBUTO_RICHIESTO -((VPI.CONTRIBUTO_RICHIESTO*0.5) + (VPI.CONTRIBUTO_RICHIESTO*0.35)))) AS IMPORTO_REG
	SUM(VPI.CONTRIBUTO_RICHIESTO) AS IMPORTO_CONTRIBUTO,
	SUM(ISNULL(VPI.COSTO_INVESTIMENTO,0)) AS COSTO_AMMESSO,
	SUM(ISNULL(VPI.COSTO_INVESTIMENTO,0)) - SUM(VPI.CONTRIBUTO_RICHIESTO) AS IMPORTO_PRIV,
	ROUND(SUM((VPI.CONTRIBUTO_RICHIESTO*50)/100),2) AS IMPORTO_UE,
	ROUND(SUM((VPI.CONTRIBUTO_RICHIESTO*35)/100),2) AS IMPORTO_NAZ,
	ROUND(SUM(VPI.CONTRIBUTO_RICHIESTO) - SUM((VPI.CONTRIBUTO_RICHIESTO*50)/100) - SUM((VPI.CONTRIBUTO_RICHIESTO*35)/100),2) AS IMPORTO_REG 
	FROM 
	vPIANO_INVESTIMENTI VPI
	WHERE 
	VPI.ID_INVESTIMENTO_ORIGINALE IS NOT NULL
	AND
	VPI.ID_VARIANTE IS NULL
	--AND
	--VPI.AMMESSO = 1
	GROUP BY VPI.ID_PROGETTO
) AS VP ON
P.ID_PROGETTO = VP.ID_PROGETTO
INNER JOIN TREE ON
TREE.ID = BP.ID_PROGRAMMAZIONE
INNER JOIN 
(
	SELECT 
	F.ID_PROGRAMMAZIONE,
	'POR20142020' AS PSR_CODICE,
	CASE F.ID_FONTE 
	WHEN 1 THEN 'ERDF'
	WHEN 2 THEN 'FDR'
	WHEN 21 THEN 'FPREG' END AS COD_FONTE,
	CASE F.ID_FONTE 
	WHEN 1 THEN '99999'
	WHEN 2 THEN '202'
	WHEN 21 THEN '99999' END AS COD_NORMA,
	CASE F.ID_FONTE 
	WHEN 1 THEN '999999999'
	WHEN 2 THEN '999999999'
	--WHEN 21 THEN '011P11000' END AS COD_LOCALIZZAZIONE,
	WHEN 21 THEN '11P11000' END AS COD_LOCALIZZAZIONE,
	F.PERCENTUALE 
	FROM
	--FONTI_FINANZIARIE F
	zPROGRAMMAZIONE_FONTI F
	UNION
	SELECT
	F2.ID_PROGRAMMAZIONE,
	'POR20142020' AS PSR_CODICE,
	'PRT' AS COD_FONTE,
	'99999' AS COD_NORMA,
	'999999999' AS COD_LOCALIZZAZIONE,
	100 AS PERCENTUALE
	FROM
	--FONTI_FINANZIARIE F
	zPROGRAMMAZIONE_FONTI F2
) AS FF ON
--PSR.CODICE = FF.PSR_CODICE
tree.ID_ROOT = FF.ID_PROGRAMMAZIONE
LEFT OUTER JOIN vIMPRESA I ON
P.ID_IMPRESA = I.ID_IMPRESA
WHERE 
P.COD_STATO IN ('F','V','S','O','T','X','C','Y','E','R') 
AND 
PSR.CODICE = 'POR20142020'
AND
P.COD_AGEA IS NOT NULL
AND 
PRG.ID NOT IN (17,18,19)
AND 
BP.ID_PROGRAMMAZIONE NOT IN (17,18,19)
--AND VP.IMPORTO_PRIV <> 0
--26/01/2018
--CLAUSOLA TEMPORANEA PER ESCLUDERE PROGETTO STRUMENTI FINANZIARI ARTIGIANCASSA
AND P.ID_PROGETTO <> 13301
) AS N
WHERE N.IMPORTO <> 0

SELECT ISNULL(MAX(NR_RIGA_INVIO),0) FROM IGRUE_MONIT.dbo.IGRUE_FN00 WHERE ID_INVIO = @IdInvio

END


--SELECT 
--P.ID_PROGETTO AS COD_LOCALE_PROGETTO,
----'ERDF' AS COD_FONDO, --VERIFICARE CON TC33
--FF.COD_FONTE,
----'99999' AS COD_NORMA,  --VERIFICARE CON TC33
--FF.COD_NORMA,
--'99999' AS COD_DEL_CIPE, --VERIFICARE TC33
----'999999999' AS COD_LOCALIZZAZIONE,
--FF.COD_LOCALIZZAZIONE, 
--'99999' AS CF_COFINANZ,
--ROUND(CONVERT(DECIMAL(13,2),((VP.IMPORTO*FF.PERCENTUALE)/100)),2) AS IMPORTO,
--NULL AS FLG_CANCELLAZIONE,
--@IdInvio AS ID_INVIO,
--ISNULL(@rNumber,0) + ROW_NUMBER() OVER(ORDER BY P.ID_PROGETTO ASC) AS NR_RIGA_INVIO,
--'FESR20142020' AS CODICE_FONDO  
--FROM vPROGETTO P
--INNER JOIN vBANDO B ON
--P.ID_BANDO = B.ID_BANDO
----INNER JOIN PROGETTO_STORICO PS ON
----P.ID_PROGETTO = PS.ID_PROGETTO
--INNER JOIN BANDO_PROGRAMMAZIONE BP ON
--B.ID_BANDO = BP.ID_BANDO
--INNER JOIN zPROGRAMMAZIONE PRG ON
--BP.ID_PROGRAMMAZIONE = PRG.ID
--INNER JOIN zPSR_ALBERO PA ON
--PRG.COD_TIPO = PA.CODICE
--INNER JOIN zPSR PSR ON
--PA.COD_PSR = PSR.CODICE
----INNER JOIN BANDO_RESPONSABILI BR ON
----B.ID_BANDO = BR.ID_BANDO
--INNER JOIN 
--(
--	SELECT 
--	VPI.ID_PROGETTO,
--	SUM(VPI.CONTRIBUTO_RICHIESTO) AS IMPORTO 
--	FROM 
--	vPIANO_INVESTIMENTI VPI
--	WHERE 
--	VPI.ID_INVESTIMENTO_ORIGINALE IS NOT NULL
--	AND
--	VPI.ID_VARIANTE IS NULL
--	--AND
--	--VPI.AMMESSO = 1
--	GROUP BY VPI.ID_PROGETTO
--) AS VP ON
--P.ID_PROGETTO = VP.ID_PROGETTO
--INNER JOIN TREE ON
--TREE.ID = BP.ID_PROGRAMMAZIONE
--INNER JOIN 
--(
--	SELECT 
--	F.ID_PROGRAMMAZIONE,
--	'POR20142020' AS PSR_CODICE,
--	CASE F.ID_FONTE 
--	WHEN 1 THEN 'ERDF'
--	WHEN 2 THEN 'FDR'
--	WHEN 21 THEN 'FPREG' END AS COD_FONTE,
--	CASE F.ID_FONTE 
--	WHEN 1 THEN '99999'
--	WHEN 2 THEN '202'
--	WHEN 21 THEN '99999' END AS COD_NORMA,
--	CASE F.ID_FONTE 
--	WHEN 1 THEN '999999999'
--	WHEN 2 THEN '999999999'
--	--WHEN 21 THEN '011P11000' END AS COD_LOCALIZZAZIONE,
--	WHEN 21 THEN '11P11000' END AS COD_LOCALIZZAZIONE,
--	F.PERCENTUALE 
--	FROM
--	--FONTI_FINANZIARIE F
--	zPROGRAMMAZIONE_FONTI F
--) AS FF ON
----PSR.CODICE = FF.PSR_CODICE
--tree.ID_ROOT = FF.ID_PROGRAMMAZIONE
--WHERE 
--P.COD_STATO IN ('F','V','S','O','T','X','C','Y','E','R') 
--AND 
--PSR.CODICE = 'POR20142020'
--AND
--P.COD_AGEA IS NOT NULL
--AND 
--PRG.ID NOT IN (17,18,19)
--AND 
--BP.ID_PROGRAMMAZIONE NOT IN (17,18,19)
----26/01/2018
----CLAUSOLA TEMPORANEA PER ESCLUDERE PROGETTO STRUMENTI FINANZIARI ARTIGIANCASSA
--AND P.ID_PROGETTO <> 13301

----AND
----BR.ATTIVO = 1 AND BR.PROVINCIA IS NULL
----AND
----B.DATA_SCADENZA BETWEEN @DataDa AND @DataA


