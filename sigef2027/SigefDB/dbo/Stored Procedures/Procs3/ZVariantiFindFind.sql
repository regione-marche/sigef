CREATE PROCEDURE [dbo].[ZVariantiFindFind]
(
	@IdVarianteequalthis INT, 
	@IdProgettoequalthis INT, 
	@CodTipoequalthis VARCHAR(255)
)
AS
	declare @sql nvarchar(4000);
	declare @lensql int;
	set @lensql=0;
	SET @sql = 'SELECT ID_VARIANTE, ID_PROGETTO, COD_TIPO, DATA_INSERIMENTO, COD_ENTE, OPERATORE, DATA_MODIFICA, SEGNATURA, SEGNATURA_ALLEGATI, SEGNATURA_APPROVAZIONE, APPROVATA, ISTRUTTORE, NOTE_ISTRUTTORE, TIPO_VARIANTE, NOMINATIVO, PROFILO, ENTE, DATA_APPROVAZIONE, PROVINCIA, DESCRIZIONE, ANNULLATA, SEGNATURA_ANNULLAMENTO, CF_OPERATORE_ANNULLAMENTO, DATA_ANNULLAMENTO, NOMINATIVO_OPERATORE_ANNULLAMENTO, NOMINATIVO_ISTRUTTORE, CUAA_ENTRANTE, ID_FASCICOLO_ENTRANTE, CUAA_USCENTE, ID_FASCICOLO_USCENTE, RAGSOC_USCENTE, ID_ATTO_APPROVAZIONE, AW_DOCNUMBER, COD_DEFINIZIONE, AW_DOCNUMBER_NUOVO FROM vVARIANTI WHERE 1=1';
	IF (@IdVarianteequalthis IS NOT NULL) BEGIN SET @sql = @sql + ' AND (ID_VARIANTE = @IdVarianteequalthis)'; set @lensql=@lensql+len(@IdVarianteequalthis);end;
	IF (@IdProgettoequalthis IS NOT NULL) BEGIN SET @sql = @sql + ' AND (ID_PROGETTO = @IdProgettoequalthis)'; set @lensql=@lensql+len(@IdProgettoequalthis);end;
	IF (@CodTipoequalthis IS NOT NULL) BEGIN SET @sql = @sql + ' AND (COD_TIPO = @CodTipoequalthis)'; set @lensql=@lensql+len(@CodTipoequalthis);end;
	set @sql = @sql + 'ORDER BY ID_VARIANTE DESC';
	set @lensql=@lensql+len(@sql);
	if (@lensql<3000)
	exec sp_executesql @sql,N'@IdVarianteequalthis INT, @IdProgettoequalthis INT, @CodTipoequalthis VARCHAR(255)',@IdVarianteequalthis , @IdProgettoequalthis , @CodTipoequalthis ;
	else
		SELECT ID_VARIANTE, ID_PROGETTO, COD_TIPO, DATA_INSERIMENTO, COD_ENTE, OPERATORE, DATA_MODIFICA, SEGNATURA, SEGNATURA_ALLEGATI, SEGNATURA_APPROVAZIONE, APPROVATA, ISTRUTTORE, NOTE_ISTRUTTORE, TIPO_VARIANTE, NOMINATIVO, PROFILO, ENTE, DATA_APPROVAZIONE, PROVINCIA, DESCRIZIONE, ANNULLATA, SEGNATURA_ANNULLAMENTO, CF_OPERATORE_ANNULLAMENTO, DATA_ANNULLAMENTO, NOMINATIVO_OPERATORE_ANNULLAMENTO, NOMINATIVO_ISTRUTTORE, CUAA_ENTRANTE, ID_FASCICOLO_ENTRANTE, CUAA_USCENTE, ID_FASCICOLO_USCENTE, RAGSOC_USCENTE, ID_ATTO_APPROVAZIONE, AW_DOCNUMBER, COD_DEFINIZIONE, AW_DOCNUMBER_NUOVO
		FROM vVARIANTI
		WHERE 
			((@IdVarianteequalthis IS NULL) OR ID_VARIANTE = @IdVarianteequalthis) AND 
			((@IdProgettoequalthis IS NULL) OR ID_PROGETTO = @IdProgettoequalthis) AND 
			((@CodTipoequalthis IS NULL) OR COD_TIPO = @CodTipoequalthis)
		ORDER BY ID_VARIANTE DESC

GO
EXECUTE sp_addextendedproperty @name = N'backup', @value = N'CREATE PROCEDURE [dbo].[ZVariantiFindFind]
(
	@IdVarianteequalthis INT, 
	@IdProgettoequalthis INT, 
	@CodTipoequalthis CHAR(2)
)
AS
	declare @sql nvarchar(4000);
	declare @lensql int;
	set @lensql=0;
	SET @sql = ''SELECT ID_VARIANTE, ID_PROGETTO, COD_TIPO, DATA_INSERIMENTO, COD_ENTE, OPERATORE, DATA_MODIFICA, SEGNATURA, SEGNATURA_ALLEGATI, SEGNATURA_APPROVAZIONE, APPROVATA, ISTRUTTORE, NOTE_ISTRUTTORE, TIPO_VARIANTE, NOMINATIVO, PROFILO, ENTE, DATA_APPROVAZIONE, PROVINCIA, DESCRIZIONE, ANNULLATA, SEGNATURA_ANNULLAMENTO, CF_OPERATORE_ANNULLAMENTO, DATA_ANNULLAMENTO, NOMINATIVO_OPERATORE_ANNULLAMENTO, NOMINATIVO_ISTRUTTORE, CUAA_ENTRANTE, ID_FASCICOLO_ENTRANTE, CUAA_USCENTE, ID_FASCICOLO_USCENTE, RAGSOC_USCENTE, ID_ATTO_APPROVAZIONE, AW_DOCNUMBER, ID_DEFINIZIONE_ATTO FROM vVARIANTI WHERE 1=1'';
	IF (@IdVarianteequalthis IS NOT NULL) BEGIN SET @sql = @sql + '' AND (ID_VARIANTE = @IdVarianteequalthis)''; set @lensql=@lensql+len(@IdVarianteequalthis);end;
	IF (@IdProgettoequalthis IS NOT NULL) BEGIN SET @sql = @sql + '' AND (ID_PROGETTO = @IdProgettoequalthis)''; set @lensql=@lensql+len(@IdProgettoequalthis);end;
	IF (@CodTipoequalthis IS NOT NULL) BEGIN SET @sql = @sql + '' AND (COD_TIPO = @CodTipoequalthis)''; set @lensql=@lensql+len(@CodTipoequalthis);end;
	set @sql = @sql + ''ORDER BY ID_VARIANTE DESC'';
	set @lensql=@lensql+len(@sql);
	if (@lensql<3000)
	exec sp_executesql @sql,N''@IdVarianteequalthis INT, @IdProgettoequalthis INT, @CodTipoequalthis CHAR(2)'',@IdVarianteequalthis , @IdProgettoequalthis , @CodTipoequalthis ;
	else
		SELECT ID_VARIANTE, ID_PROGETTO, COD_TIPO, DATA_INSERIMENTO, COD_ENTE, OPERATORE, DATA_MODIFICA, SEGNATURA, SEGNATURA_ALLEGATI, SEGNATURA_APPROVAZIONE, APPROVATA, ISTRUTTORE, NOTE_ISTRUTTORE, TIPO_VARIANTE, NOMINATIVO, PROFILO, ENTE, DATA_APPROVAZIONE, PROVINCIA, DESCRIZIONE, ANNULLATA, SEGNATURA_ANNULLAMENTO, CF_OPERATORE_ANNULLAMENTO, DATA_ANNULLAMENTO, NOMINATIVO_OPERATORE_ANNULLAMENTO, NOMINATIVO_ISTRUTTORE, CUAA_ENTRANTE, ID_FASCICOLO_ENTRANTE, CUAA_USCENTE, ID_FASCICOLO_USCENTE, RAGSOC_USCENTE, ID_ATTO_APPROVAZIONE, AW_DOCNUMBER, ID_DEFINIZIONE_ATTO
		FROM vVARIANTI
		WHERE 
			((@IdVarianteequalthis IS NULL) OR ID_VARIANTE = @IdVarianteequalthis) AND 
			((@IdProgettoequalthis IS NULL) OR ID_PROGETTO = @IdProgettoequalthis) AND 
			((@CodTipoequalthis IS NULL) OR COD_TIPO = @CodTipoequalthis)
		ORDER BY ID_VARIANTE DESC

', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE', @level1name = N'ZVariantiFindFind';

