CREATE PROCEDURE RnaInvioRichiestaAiuto
@ID_PROGETTO INT,
@ID_IMPRESA INT = NULL
AS

--DECLARE @ID_PROGETTO INT
--SET @ID_PROGETTO=17241--16951
--DECLARE @ID_IMPRESA INT = 9523

DECLARE @IMPRESE_COINVOLTE TABLE (
ID_IMPRESA INT,
COD_RUOLO VARCHAR(10),
CODICE_FISCALE VARCHAR(16))


IF @ID_IMPRESA IS NULL
	INSERT INTO @IMPRESE_COINVOLTE
		SELECT 
			IA.ID_IMPRESA, 
			COD_RUOLO,
			I.CODICE_FISCALE
		FROM 
			IMPRESA_AGGREGAZIONE IA INNER JOIN 
			PROGETTO_NATURA_SOGGETTO NAT ON NAT.ID_AGGREGAZIONE = IA.ID_AGGREGAZIONE INNER JOIN
			IMPRESA I ON I.ID_IMPRESA = IA.ID_IMPRESA
			WHERE NAT.ID_PROGETTO = @ID_PROGETTO
	UNION SELECT P.ID_IMPRESA, 'C', I.CODICE_FISCALE
	FROM PROGETTO P INNER JOIN IMPRESA I ON I.ID_IMPRESA = P.ID_IMPRESA
	WHERE ID_PROGETTO = @ID_PROGETTO
ELSE
	INSERT INTO @IMPRESE_COINVOLTE
		SELECT
			ID_IMPRESA,
			'C',
			CODICE_FISCALE
		FROM
			IMPRESA
		WHERE
			ID_IMPRESA = @ID_IMPRESA

--INVIO - TABLE
SELECT
	RNA_B.COD_BANDO_RNA AS COD_BANDO,
	'NO' AS NOTIFICA_ELABORAZIONE_RICHIESTA
FROM
	PROGETTO P INNER JOIN
	BANDO B ON B.ID_BANDO = P.ID_BANDO INNER JOIN
	RNA_BANDO_CONFIG RNA_B ON B.ID_BANDO = RNA_B.ID_BANDO
WHERE P.ID_PROGETTO=@ID_PROGETTO;


--CONCESSIONI -> CONCESSIONE  -  TABLE 1
WITH BRT AS
(
	SELECT
	dbo.PROGETTO.ID_PROGETTO,
	dbo.PROGETTO.ID_BANDO,
	dbo.BANDO_RELAZIONE_TECNICA.ORDINE,
	ROW_NUMBER() OVER(PARTITION BY PROGETTO.ID_PROGETTO, dbo.BANDO_RELAZIONE_TECNICA.ORDINE ORDER BY PROGETTO.ID_PROGETTO, dbo.BANDO_RELAZIONE_TECNICA.ORDINE ASC) AS ORDER_ROW,
	dbo.PROGETTO_RELAZIONE_TECNICA.TESTO
	FROM
	dbo.BANDO_RELAZIONE_TECNICA INNER JOIN
	dbo.PROGETTO_RELAZIONE_TECNICA ON dbo.BANDO_RELAZIONE_TECNICA.ID_PARAGRAFO = dbo.PROGETTO_RELAZIONE_TECNICA.ID_PARAGRAFO INNER JOIN
	dbo.PROGETTO ON dbo.PROGETTO_RELAZIONE_TECNICA.ID_PROGETTO = dbo.PROGETTO.ID_PROGETTO 
	WHERE
	dbo.BANDO_RELAZIONE_TECNICA.ORDINE IN (1,2) AND dbo.PROGETTO.ID_PROGETTO=@ID_PROGETTO
)
SELECT
 P.ID_PROGETTO,
 IC.ID_IMPRESA,
 B.ID_BANDO AS INVIO_COD_BANDO,
 ISNULL(REPLACE(REPLACE(REPLACE(REPLACE(SUBSTRING(BRT1.TESTO,1,500),CHAR(10),' '),CHAR(13),' '),'#',' '),'|',' '), I.RAGIONE_SOCIALE) AS TITOLO_PROGETTO,
 ISNULL(REPLACE(REPLACE(REPLACE(REPLACE(SUBSTRING(BRT2.TESTO,1,1300),CHAR(10),' '),CHAR(13),' '),'#',' '),'|',' '),I.RAGIONE_SOCIALE) AS DESCRIZIONE_PROGETTO,
 SUBSTRING(FSR.CUP_CATEGORIA_TIPOOPER,1,2) + '.' + SUBSTRING(FSR.CUP_CATEGORIA_TIPOOPER,3,2) AS COD_TIPO_INIZIATIVA,
 1 AS CUP_CHECK_RICHIESTA,-- 1 non applicabile, 2 lo fa generare all'RNA, 3 fornito
 --COD_AGEA AS CUP,
 CONVERT(DATE,PS_RILASCIO.DATA) AS DATA_DOMANDA,
 CONVERT(DATE,(DATEADD(DD,1,BI.DATA_SCADENZA))) AS DATA_INIZIO_PROGETTO,
 --CONVERT(DATE,(DATEADD(DD,1,PS_RILASCIO.DATA))) AS DATA_INIZIO_PROGETTO,
 CONVERT(DATE,'2020-12-31') AS DATA_FINE_PROGETTO,
 'http://www.regione.marche.it' AS LINK_TRASPARENZA,
 CONVERT(VARCHAR,P.ID_PROGETTO) + '_' + CONVERT(VARCHAR,IC.CODICE_FISCALE) AS ID_CONCESSIONE_GEST,
 'SI' AS FLAG_ATTO_CONCESSIONE,
 RNA_B.DATA_PREVISTA_CONCESSIONE AS DATA_CONCESSIONE,
 CONVERT(VARCHAR,P.ID_PROGETTO) AS CODICE_LOCALE_PROGETTO,
 CONVERT(VARCHAR, IC.ID_IMPRESA) AS NOTE_CONCESSIONE,
 '5' AS COD_STATO_CONCESSIONE
 FROM
 PROGETTO P INNER JOIN
 BANDO B ON B.ID_BANDO = P.ID_BANDO INNER JOIN
 PROGETTO_STORICO PS ON PS.ID = P.ID_STORICO_ULTIMO INNER JOIN
 PROGETTO_STORICO PS_RILASCIO ON PS_RILASCIO.ID_PROGETTO = P.ID_PROGETTO AND PS_RILASCIO.COD_STATO = 'L' INNER JOIN
 BANDO_INTEGRAZIONI BI ON BI.ID = B.ID_INTEGRAZIONE_ULTIMA INNER JOIN
 DATI_MONITORAGGIO_FESR FSR ON FSR.ID_PROGETTO = P.ID_PROGETTO INNER JOIN
 vIMPRESA I ON P.ID_IMPRESA = I.ID_IMPRESA INNER JOIN
 RNA_BANDO_CONFIG RNA_B ON RNA_B.ID_BANDO = B.ID_BANDO RIGHT JOIN
 @IMPRESE_COINVOLTE IC ON 1=1
 LEFT OUTER JOIN
(
SELECT BRT.ID_PROGETTO, BRT.TESTO FROM BRT
WHERE ORDINE = 2 AND ORDER_ROW = 1) AS BRT2
ON
P.ID_PROGETTO = BRT2.ID_PROGETTO
LEFT OUTER JOIN
(
SELECT BRT.ID_PROGETTO, BRT.TESTO FROM BRT
WHERE ORDINE = 1 AND ORDER_ROW = 1) AS BRT1
ON
P.ID_PROGETTO = BRT1.ID_PROGETTO
WHERE P.ID_PROGETTO = @ID_PROGETTO


--BENEFICIARIO - TABLE 2
SELECT
CONVERT(VARCHAR,@ID_PROGETTO) AS ID_PROGETTO,
IC.ID_IMPRESA,
CASE SUBSTRING(I.COD_FORMA_GIURIDICA,1,1)
	WHEN '1' THEN '1' --Impresa iscritta al registro delle imprese
	WHEN '2' THEN '4' --Soggetto pubblico
	ELSE '1'
END AS COD_TIPO_SOGGETTO,
I.CODICE_FISCALE AS CODICE_FISCALE,
I_ST.RAGIONE_SOCIALE AS DENOMINAZIONE,
'3112' AS FINE_ESERCIZIO_FINANZIARIO,
CASE I_ST.ID_DIMENSIONE
    WHEN 1 THEN 4
    WHEN 2 THEN 3
    WHEN 3 THEN 2
    WHEN 4 THEN 1
    ELSE 3
END AS COD_DIMENSIONE_IMPRESA,
SUBSTRING(I_ST.COD_ATECO2007,2,LEN(I_ST.COD_ATECO2007)-1) AS COD_TIPO_ATTIVITA_PREVALENTE,
ISNULL(RNA_FGM.COD_FORMA_GIURIDICA_RNA,'SR') AS COD_FORMA_GIURIDICA,
IND2.VIA AS INDIRIZZO,
'000' AS COD_NAZIONE,--ITALIA
C.COD_PROVINCIA + C.ISTAT AS COD_COMUNE,
C.DENOMINAZIONE AS COMUNE,
C.CAP
FROM
vIMPRESA I INNER JOIN
IMPRESA_STORICO I_ST ON I.ID_STORICO_ULTIMO = I_ST.ID_STORICO_IMPRESA INNER JOIN 
@IMPRESE_COINVOLTE IC ON IC.ID_IMPRESA = I.ID_IMPRESA INNER JOIN
INDIRIZZARIO IND1 ON IND1.ID_INDIRIZZARIO = I.ID_SEDELEGALE_ULTIMO INNER JOIN
INDIRIZZO IND2 ON IND1.ID_INDIRIZZO = IND2.ID_INDIRIZZO INNER JOIN
COMUNI C ON C.ID_COMUNE = IND2.ID_COMUNE LEFT JOIN
RNA_FORMA_GIURIDICA_MATCH RNA_FGM ON RNA_FGM.COD_ISTAT = I_ST.COD_FORMA_GIURIDICA


--LOCALIZZAZIONI -> LOCALIZZAZIONE - TABLE 3
SELECT
CONVERT(VARCHAR,P.ID_PROGETTO) AS ID_PROGETTO,
IC.ID_IMPRESA,
CONVERT(VARCHAR,P.ID_PROGETTO) + '_' + CONVERT(VARCHAR,(Row_number() OVER(ORDER BY (SELECT 0)))) AS ID_LOCA_GEST,
RR.COD_REGIONE_RNA AS COD_REGIONE,
'SI' AS CHECK_LOCALIZZAZIONE, 
COD_PROVINCIA + ISTAT AS COD_COMUNE,
C.DENOMINAZIONE AS COMUNE,
C.CAP,
LP.VIA + ' ' + LP.NUM AS INDIRIZZO
FROM COMUNI C INNER JOIN
LOCALIZZAZIONE_PROGETTO LP ON C.ID_COMUNE = LP.ID_COMUNE INNER JOIN
PROGETTO P ON P.ID_PROGETTO = LP.ID_PROGETTO INNER JOIN
PROVINCE PR ON PR.CODICE = COD_PROVINCIA INNER JOIN
RNA_REGIONI RR ON RR.COD_REGIONE = PR.COD_REGIONE INNER JOIN
@IMPRESE_COINVOLTE IC_CAPOFILA ON IC_CAPOFILA.COD_RUOLO = 'C' RIGHT JOIN
@IMPRESE_COINVOLTE IC ON 1=1
WHERE P.ID_PROGETTO=@ID_PROGETTO AND LP.ID_IMPRESA = IC_CAPOFILA.ID_IMPRESA

DECLARE @ID_VARIANTE INT
SELECT @ID_VARIANTE=MAX(ID_VARIANTE) FROM VARIANTI WHERE ID_PROGETTO=@ID_PROGETTO AND APPROVATA=1 AND ANNULLATA=0


--COSTI -> COSTO - TABLE 4
SELECT
	CONVERT(VARCHAR,P.ID_PROGETTO) AS ID_PROGETTO,
	ISNULL(I.ID_IMPRESA_AGGREGAZIONE, P.ID_IMPRESA) AS ID_IMPRESA,
	CONVERT(VARCHAR,P.ID_PROGETTO) + '_' + CONVERT(VARCHAR,(Row_number() OVER(ORDER BY (SELECT 0)))) AS ID_COSTO_GEST,
	CONVERT(VARCHAR,RNA_C.COD_TIPO_SPESA) AS COD_TIPO_COSTO,
	SUM(I.COSTO_INVESTIMENTO) AS IMPORTO_AMMESSO
		FROM vPIANO_INVESTIMENTI I INNER JOIN
		vPROGETTO P ON P.ID_PROGETTO = I.ID_PROGETTO INNER JOIN
		CODIFICA_INVESTIMENTO C ON C.ID_CODIFICA_INVESTIMENTO = I.ID_CODIFICA_INVESTIMENTO INNER JOIN
		RNA_COSTI_X_CODIFICA RNA_C ON RNA_C.ID_CODIFICA_INVESTIMENTO = I.ID_CODIFICA_INVESTIMENTO
		WHERE
			I.ID_PROGETTO=@ID_PROGETTO AND ISNULL(I.COD_VARIAZIONE,'')!='A' AND
			((P.ORDINE_FASE IS NULL AND I.ID_INVESTIMENTO_ORIGINALE IS NULL AND I.ID_VARIANTE IS NULL) OR
			(P.ORDINE_FASE<4 AND I.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND I.ID_VARIANTE IS NULL) OR
			(P.ORDINE_FASE>=4  AND ((@ID_VARIANTE IS NULL AND I.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND I.ID_VARIANTE IS NULL) OR
			 I.ID_VARIANTE=@ID_VARIANTE)))
		GROUP BY P.ID_PROGETTO, P.ID_IMPRESA, I.ID_IMPRESA_AGGREGAZIONE, RNA_C.COD_TIPO_SPESA


DECLARE @tmp_inv_x_tipo_contributo TABLE(ID_INVESTIMENTO INT, TIPO_CONTRIBUTO VARCHAR(20))
DECLARE @ID_BANDO INT = (SELECT TOP 1 ID_BANDO FROM PROGETTO WHERE ID_PROGETTO = @ID_PROGETTO)

IF @ID_BANDO IN (SELECT DISTINCT ID_BANDO FROM 
VALORI_PRIORITA VP INNER JOIN
PRIORITA_X_PROGETTO PXP 
ON VP.ID_PRIORITA = PXP.ID_PRIORITA INNER JOIN
PROGETTO P ON P.ID_PROGETTO = PXP.ID_PROGETTO
WHERE DESCRIZIONE LIKE '%MINIMIS%' OR DESCRIZIONE LIKE '%ESENZIONE%')
INSERT INTO @tmp_inv_x_tipo_contributo
	SELECT NULL,CASE  
				WHEN VP.DESCRIZIONE LIKE '%minimis%' THEN 'De Minimis'
				WHEN VP.DESCRIZIONE LIKE '%esenzione%' THEN 'Esenzione'
			END AS TIPO_CONTRIBUTO FROM 
VALORI_PRIORITA VP INNER JOIN
PRIORITA_X_PROGETTO PXP 
ON VP.ID_VALORE = PXP.ID_VALORE INNER JOIN
PROGETTO P ON P.ID_PROGETTO = PXP.ID_PROGETTO
WHERE (DESCRIZIONE LIKE '%MINIMIS%' OR DESCRIZIONE LIKE '%ESENZIONE%') AND PXP.ID_PROGETTO = @ID_PROGETTO
ELSE 
	IF @ID_BANDO IN ( SELECT DISTINCT B.ID_BANDO FROM 
		VALORI_PRIORITA VP INNER JOIN
		SCHEDA_X_PRIORITA SXP 
		ON VP.ID_PRIORITA = SXP.ID_PRIORITA INNER JOIN
		BANDO B ON B.ID_SCHEDA_VALUTAZIONE = SXP.ID_SCHEDA_VALUTAZIONE
		WHERE VP.DESCRIZIONE LIKE '%MINIMIS%' OR VP.DESCRIZIONE LIKE '%ESENZIONE%')
		--Caso voci nel piano investimento
		INSERT INTO @tmp_inv_x_tipo_contributo
			SELECT 
			P_INV.ID_INVESTIMENTO,
			CASE
				WHEN VP.DESCRIZIONE LIKE '%minimis%' THEN 'De Minimis'
				WHEN VP.DESCRIZIONE LIKE '%esenzione%' THEN 'Esenzione'
			END AS TIPO_CONTRIBUTO FROM
			PIANO_INVESTIMENTI P_INV INNER JOIN
			PRIORITA_X_INVESTIMENTI PRI_INV
			ON P_INV.ID_INVESTIMENTO = PRI_INV.ID_INVESTIMENTO INNER JOIN
			VALORI_PRIORITA VP ON VP.ID_VALORE = PRI_INV.ID_VALORE
			WHERE ID_PROGETTO = @ID_PROGETTO AND PRI_INV.ID_PRIORITA = (SELECT DISTINCT top 1 sxp.ID_PRIORITA FROM 
			VALORI_PRIORITA VP INNER JOIN
			SCHEDA_X_PRIORITA SXP 
			ON VP.ID_PRIORITA = SXP.ID_PRIORITA INNER JOIN
			BANDO B ON B.ID_SCHEDA_VALUTAZIONE = SXP.ID_SCHEDA_VALUTAZIONE
			WHERE (VP.DESCRIZIONE LIKE '%MINIMIS%' OR VP.DESCRIZIONE LIKE '%ESENZIONE%') AND B.ID_BANDO = @ID_BANDO)
	ELSE
		INSERT INTO @tmp_inv_x_tipo_contributo SELECT NULL, NULL
		
--COMPONENTI_AIUTI -> COMPONENTE_AIUTO - TABLE 5 
SELECT
	CONVERT(VARCHAR,P.ID_PROGETTO) AS ID_PROGETTO,
	ISNULL(P_INV.ID_IMPRESA_AGGREGAZIONE, P.ID_IMPRESA) AS ID_IMPRESA,
	CONVERT(VARCHAR,P.ID_PROGETTO) + '_' + CONVERT(VARCHAR,(Row_number() OVER(ORDER BY (SELECT 0)))) AS ID_COMP_AIUTO_GEST,
	RNA_PROC_REG.DESCRIZIONE AS DESCR_BREVE,
	RNA_PROC_REG.COD_TIPO_PROCEDIMENTO AS COD_TIPO_PROCEDIMENTO, 
	RNA_PROC_REG.CODICE_REGOLAMENTO AS CODICE_REGOLAMENTO,
	RNA_O.COD_OBIETTIVO AS COD_OBIETTIVO,
	RNA_PROC_REG.CODICE_SETTORE AS CODICE_SETTORE, 
	RNA_B.CUMULABILITA AS CUMULABILITA,
	'NO' AS FLAG_CE
FROM
PIANO_INVESTIMENTI P_INV INNER JOIN
vPROGETTO P 
ON P.ID_PROGETTO = P_INV.ID_PROGETTO INNER JOIN
DETTAGLIO_INVESTIMENTI DT 
ON DT.ID_DETTAGLIO_INVESTIMENTO = P_INV.ID_DETTAGLIO_INVESTIMENTO INNER JOIN
RNA_BANDO_CONFIG RNA_B 
ON RNA_B.ID_BANDO = P.ID_BANDO  INNER JOIN
RNA_COMPONENTI_X_CODIFICA RNA_C 
ON RNA_C.ID_CODIFICA_INVESTIMENTO = P_INV.ID_CODIFICA_INVESTIMENTO INNER JOIN
RNA_PROCEDIMENTI_E_REGOLAMENTI RNA_PROC_REG 
ON RNA_PROC_REG.ID_PROCEDIMENTI_REGOLAMENTI = RNA_C.ID_RNA_PROCEDIMENTI_E_REGOLAMENTI INNER JOIN
RNA_OBIETTIVI RNA_O 
ON RNA_O.ID_OBIETTIVO = RNA_C.ID_RNA_OBIETTIVO INNER JOIN
@tmp_inv_x_tipo_contributo INV_X_TIPO_CONTR ON P_INV.ID_INVESTIMENTO = ISNULL(INV_X_TIPO_CONTR.ID_INVESTIMENTO, P_INV.ID_INVESTIMENTO)
AND RNA_PROC_REG.DESCRIZIONE_PROCEDURA = ISNULL(INV_X_TIPO_CONTR.TIPO_CONTRIBUTO, RNA_PROC_REG.DESCRIZIONE_PROCEDURA)
WHERE P_INV.ID_PROGETTO=@ID_PROGETTO AND ISNULL(P_INV.COD_VARIAZIONE,'')!='A' AND
			((P.ORDINE_FASE IS NULL AND P_INV.ID_INVESTIMENTO_ORIGINALE IS NULL AND P_INV.ID_VARIANTE IS NULL) OR
			(P.ORDINE_FASE<4 AND P_INV.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND P_INV.ID_VARIANTE IS NULL) OR
			(P.ORDINE_FASE>=4  AND ((@ID_VARIANTE IS NULL AND P_INV.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND P_INV.ID_VARIANTE IS NULL) OR
			 P_INV.ID_VARIANTE=@ID_VARIANTE)))
GROUP BY P.ID_PROGETTO, RNA_PROC_REG.DESCRIZIONE, P.ID_IMPRESA, P_INV.ID_IMPRESA_AGGREGAZIONE, RNA_PROC_REG.COD_TIPO_PROCEDIMENTO, 
RNA_PROC_REG.CODICE_REGOLAMENTO, RNA_O.COD_OBIETTIVO, RNA_PROC_REG.CODICE_SETTORE, RNA_B.CUMULABILITA


--COD_ATECO_LIST - TABLE 6
SELECT
	ID_PROGETTO,
	IC.ID_IMPRESA,
	SUBSTRING(ID_ATECO,2,LEN(ID_ATECO)-1) AS COD_ATECO
FROM
	DATI_MONITORAGGIO_FESR RIGHT JOIN
	@IMPRESE_COINVOLTE IC ON 1=1
WHERE
	ID_PROGETTO=@ID_PROGETTO



--STRUMENTI_AIUTO -> STRUMENTO_AIUTO - TABLE 7
	SELECT
	CONVERT(VARCHAR,P.ID_PROGETTO) AS ID_PROGETTO,
	RNA_O.COD_OBIETTIVO,
	ISNULL(P_INV.ID_IMPRESA_AGGREGAZIONE, P.ID_IMPRESA) AS ID_IMPRESA,
	CONVERT(VARCHAR,P.ID_PROGETTO) + '_' + CONVERT(VARCHAR,(Row_number() OVER(ORDER BY (SELECT 0)))) AS ID_STRUM_AIUTO_GEST,
	RNA_S.COD_TIPO_STRUMENTO_AIUTO AS COD_TIPO_STRUMENTO_AIUTO,
	SUM(P_INV.CONTRIBUTO_RICHIESTO * RNA_S.INTENSITA_STRUMENTO/100) AS IMPORTO_NOMINALE,
	SUM(P_INV.CONTRIBUTO_RICHIESTO * RNA_S.INTENSITA_STRUMENTO/100) AS IMPORTO_AGEVOLAZIONE,
	--(P_INV.QUOTA_CONTRIBUTO_RICHIESTO * (ISNULL(RNA_S.INTENSITA_STRUMENTO,0)/100)) AS INTENSITA_AIUTO
	CONVERT(decimal(15,12),(P_INV.QUOTA_CONTRIBUTO_RICHIESTO * (RNA_S.INTENSITA_STRUMENTO/100))) AS INTENSITA_AIUTO
	FROM 
	vPROGETTO P INNER JOIN 
	VPIANO_INVESTIMENTI P_INV 
	ON P.ID_PROGETTO=P_INV.ID_PROGETTO INNER JOIN
	RNA_COMPONENTI_X_CODIFICA RNA_COMP 
	ON RNA_COMP.ID_CODIFICA_INVESTIMENTO = P_INV.ID_CODIFICA_INVESTIMENTO INNER JOIN
	RNA_PROCEDIMENTI_E_REGOLAMENTI RNA_PROC_REG 
	ON RNA_PROC_REG.ID_PROCEDIMENTI_REGOLAMENTI = RNA_COMP.ID_RNA_PROCEDIMENTI_E_REGOLAMENTI INNER JOIN
	RNA_OBIETTIVI RNA_O 
	ON RNA_O.ID_OBIETTIVO = RNA_COMP.ID_RNA_OBIETTIVO INNER JOIN
	RNA_STRUMENTI_X_COMPONENTI RNA_S 
	ON RNA_S.ID_COMPONENTI_X_CODIFICA = RNA_COMP.ID_COMPONENTI_X_CODIFICA INNER JOIN
	@tmp_inv_x_tipo_contributo INV_X_TIPO_CONTR 
	ON P_INV.ID_INVESTIMENTO = ISNULL(INV_X_TIPO_CONTR.ID_INVESTIMENTO, P_INV.ID_INVESTIMENTO)
	AND RNA_PROC_REG.DESCRIZIONE_PROCEDURA = ISNULL(INV_X_TIPO_CONTR.TIPO_CONTRIBUTO, RNA_PROC_REG.DESCRIZIONE_PROCEDURA)
	WHERE ISNULL(P.ID_PROG_INTEGRATO,P.ID_PROGETTO)=@ID_PROGETTO AND ISNULL(P_INV.COD_VARIAZIONE,'')!='A' AND
		((ORDINE_FASE IS NULL AND P_INV.ID_INVESTIMENTO_ORIGINALE IS NULL AND P_INV.ID_VARIANTE IS NULL) OR
		(ORDINE_FASE<4 AND P_INV.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND P_INV.ID_VARIANTE IS NULL) OR
		(ORDINE_FASE>=4  AND ((@ID_VARIANTE IS NULL AND P_INV.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND P_INV.ID_VARIANTE IS NULL) OR
		 P_INV.ID_VARIANTE=@ID_VARIANTE)))
	GROUP BY RNA_O.COD_OBIETTIVO, P_INV.ID_IMPRESA_AGGREGAZIONE, P.ID_IMPRESA, P.ID_PROGETTO, RNA_S.COD_TIPO_STRUMENTO_AIUTO,RNA_S.INTENSITA_STRUMENTO,
	P_INV.QUOTA_CONTRIBUTO_RICHIESTO
GO