CREATE PROCEDURE SpGetDomandePagamentoPerDecreti
(
	@ID_BANDO INT,
	@ID_PROGETTO INT = NULL,
	@ID_DOMANDA INT=NULL,
	@NASCONDI_DECRETI BIT,
	@NASCONDI_LIQUIDATI BIT,
	@dettaglioDecreti bit,  -- METTO 0  QUANDO VOGLIO RAGGRUPPARE PER ID_DOMANDA PAGAMENTO, 1 QUANDO VOLGIO IL DETTAGLIO PER DECRETO
    @dettaglioMandati bit -- METTO 0  QUANDO VOGLIO RAGGRUPPARE PER ID_DOMANDA PAGAMENTO, 1 QUANDO VOGLIO IL DETTAGLIO PER MANDATO
)
AS

if @dettaglioMandati =0
begin
SELECT	DECXPAG2.ID_DOMANDA_PAGAMENTO, 
			DECXPAG2.ID_PROGETTO, DESCRIZIONE, 
			datamodifica as DATA_MODIFICA, 
			CONTRIBUTO_AMMESSO, 
			IMPORTO_DECRETI,
			IMPORTO_RICHIESTE_LIQUIDAZIONE, 
			IMPORTO_LIQUIDATO,
			IMPORTO_QUIETANZA, 
			STATO_LIQUIDAZIONE,
			rdp.DATA_VALIDAZIONE,
			case when rdp.SEGNATURA_REVISIONE is null then 'NO' else 'SI' end as [checklist validita]

	FROM
		(SELECT DECXPAG.ID_DOMANDA_PAGAMENTO, 
			DECXPAG.ID_PROGETTO,
			DESCRIZIONE, 
			DATA_MODIFICA as datamodifica, 
			CONTRIBUTO_AMMESSO, 
			IMPORTO_DECRETI,
			SUM(ISNULL(Q.RICHIESTA_MANDATO_IMPORTO, 0)) AS IMPORTO_RICHIESTE_LIQUIDAZIONE, 
			SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) AS IMPORTO_LIQUIDATO,
			SUM(ISNULL(Q.QUIETANZA_IMPORTO , 0)) AS IMPORTO_QUIETANZA,
			--NUMERO_DECRETI_ASSOCIATI,
			--COUNT(DISTINCT Q.ID) AS NUMERO_MANDATI_ASSOCIATI,
			--SUM(CASE WHEN Q.LIQUIDATO IS NULL OR Q.LIQUIDATO = 0 THEN 0 ELSE 1 END) AS NUMERO_MANDATI_LIQUIDATI,
			CASE
				/* Se IMPORTO_DECRETI = CONTRIBUTO_AMMESSO = IMPORTO_RICHIESTE_LIQUIDAZIONE = IMPORTO_LIQUIDATO 
				   e tutte le richieste sono liquidate 
				   -> Liquidato */
				WHEN SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) = SUM(ISNULL(Q.QUIETANZA_IMPORTO, 0)) 
						AND SUM(CASE WHEN Q.LIQUIDATO IS NULL OR Q.LIQUIDATO = 0 THEN 0 ELSE 1 END) = COUNT(DISTINCT Q.ID) 
						AND SUM(ISNULL(Q.QUIETANZA_IMPORTO, 0)) = IMPORTO_DECRETI  
						AND IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
					THEN 'Liquidato'
				/* Se IMPORTO_RICHIESTE_LIQUIDAZIONE != IMPORTO_LIQUIDATO o non tutte le richieste sono liquidate
				   e IMPORTO_LIQUIDATO != 0, IMPORTO_DECRETI = CONTRIBUTO_AMMESSO = IMPORTO_RICHIESTE_LIQUIDAZIONE
				   -> Parzialmente liquidato */
				WHEN (SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) != SUM(ISNULL(Q.QUIETANZA_IMPORTO, 0))
						OR SUM(CASE WHEN Q.LIQUIDATO IS NULL OR Q.LIQUIDATO = 0 THEN 0 ELSE 1 END) != COUNT(DISTINCT Q.ID))
						AND SUM(ISNULL(Q.QUIETANZA_IMPORTO, 0)) != 0
						AND SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) = IMPORTO_DECRETI 
						AND IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
					THEN 'Parzialmente liquidato'	
				/* Se IMPORTO_DECRETI != IMPORTO_RICHIESTE_LIQUIDAZIONE 
				   e IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
				   -> Richiesta/e di pagamento emessa/e */
				WHEN SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) != IMPORTO_DECRETI
						AND IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
					THEN 'Mandato/i di pagamento emesso/i'
				/* Se IMPORTO_DECRETI = 0
				   e IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
				   -> Richiesta/e di pagamento emessa/e */
				WHEN SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) = 0 
						AND IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
					THEN 'Decreto/i di pagamento emesso/i'
				ELSE 'In attesa del decreto'
			END AS STATO_LIQUIDAZIONE
		FROM 
		(SELECT D.ID_DOMANDA_PAGAMENTO, 
				D.ID_PROGETTO, 
				D.DESCRIZIONE, 
				D.DATA_MODIFICA,
				Q1.CONTRIBUTO_AMMESSO,
				COUNT(DISTINCT DECXDOM.ID_DECRETO) AS NUMERO_DECRETI_ASSOCIATI,
				SUM(ISNULL(DECXDOM.IMPORTO, 0)) AS IMPORTO_DECRETI
			FROM vDOMANDA_DI_PAGAMENTO D 
			INNER JOIN PROGETTO P ON D.ID_PROGETTO = P.ID_PROGETTO
			INNER JOIN (SELECT	ID_DOMANDA_PAGAMENTO, 
								SUM(ISNULL(IMPORTO_AMMESSO, 0)) AS CONTRIBUTO_AMMESSO 
						FROM DOMANDA_DI_PAGAMENTO_ESPORTAZIONE
						WHERE @ID_DOMANDA IS NULL OR ID_DOMANDA_PAGAMENTO = @ID_DOMANDA
						GROUP BY ID_DOMANDA_PAGAMENTO) Q1 ON D.ID_DOMANDA_PAGAMENTO = Q1.ID_DOMANDA_PAGAMENTO
			/* modifica del 08/09/2017: i controlli di primo livello non sono piu' bloccanti ai fini del decreto di pagamento */
			--INNER JOIN CTE_TESTATA_VALIDAZIONE R ON D.ID_DOMANDA_PAGAMENTO=R.ID_DOMANDA_PAGAMENTO
			--INNER JOIN LOTTO_DI_REVISIONE L ON R.ID_LOTTO=L.ID_LOTTO AND L.REVISIONE_CONCLUSA=1
			INNER JOIN DOMANDA_DI_PAGAMENTO_ESPORTAZIONE E 
				ON D.ID_DOMANDA_PAGAMENTO = E.ID_DOMANDA_PAGAMENTO
				AND D.ID_PROGETTO = E.ID_PROGETTO AND E.MISURA_PREVALENTE = 1
			LEFT JOIN DECRETI_X_DOM_PAG_ESPORTAZIONE DECXDOM 
			ON D.ID_DOMANDA_PAGAMENTO = DECXDOM.ID_DOMANDA_PAGAMENTO
			AND D.ID_PROGETTO = DECXDOM.ID_PROGETTO
			WHERE 1 = 1 
				AND P.ID_BANDO = @ID_BANDO 
				AND D.APPROVATA = 1 
				AND (@ID_PROGETTO IS NULL OR D.ID_PROGETTO = @ID_PROGETTO)
				AND (@ID_DOMANDA IS NULL OR D.ID_DOMANDA_PAGAMENTO = @ID_DOMANDA)
			GROUP BY	D.ID_DOMANDA_PAGAMENTO, 
						D.ID_PROGETTO, 
						D.DESCRIZIONE, 
						D.DATA_MODIFICA, 
						Q1.CONTRIBUTO_AMMESSO) DECXPAG
	LEFT JOIN DOMANDA_PAGAMENTO_LIQUIDAZIONE Q 
	ON DECXPAG.ID_DOMANDA_PAGAMENTO = Q.ID_DOMANDA_PAGAMENTO
			AND DECXPAG.ID_PROGETTO = Q.ID_PROGETTO 
	GROUP BY	DECXPAG.ID_DOMANDA_PAGAMENTO, 
				DECXPAG.ID_PROGETTO, 
				DESCRIZIONE, 
				DATA_MODIFICA, 
				CONTRIBUTO_AMMESSO, 
				IMPORTO_DECRETI, 
				NUMERO_DECRETI_ASSOCIATI) DECXPAG2
	left join CTE_TESTATA_VALIDAZIONE rdp
	on DECXPAG2.ID_DOMANDA_PAGAMENTO = rdp.ID_DOMANDA_PAGAMENTO
WHERE 1 = 1
	AND (@NASCONDI_LIQUIDATI = 0 OR STATO_LIQUIDAZIONE != 'Liquidato')
	AND (@NASCONDI_DECRETI = 0 or STATO_LIQUIDAZIONE = 'In attesa del decreto')
ORDER BY DATA_MODIFICA
end
else
begin
select 
		kk.ID_DOMANDA_PAGAMENTO,
		kk.ID_PROGETTO, 
		kk.DESCRIZIONE, 
		kk.DATA_MODIFICA, 
		kk.CONTRIBUTO_AMMESSO, 
		kk.IMPORTO_DECRETI, 
		kk.IMPORTO_RICHIESTE_LIQUIDAZIONE,
		kk.IMPORTO_LIQUIDATO, 
		dpl1.QUIETANZA_IMPORTO as IMPORTO_QUIETANZA,  
		kk.STATO_LIQUIDAZIONE,
		kk.DATA_VALIDAZIONE,
		kk.[checklist validita],
		atti.NUMERO as NumeroDecreto, 
		atti.DATA as DataDecreto,
		dpl1.MANDATO_NUMERO,
		dpl1.MANDATO_DATA as DataMandato,
		dpl1.QUIETANZA_DATA as DataQuietanza,
		dpl1.MANDATO_IMPORTO AS MANDATO_IMPORTO,
		DXDPE.IMPORTO as ImportoDecreto


		from (
SELECT	DECXPAG2.ID_DOMANDA_PAGAMENTO, 
			DECXPAG2.ID_PROGETTO, DESCRIZIONE, 

			datamodifica as DATA_MODIFICA, 
			CONTRIBUTO_AMMESSO, 
			IMPORTO_DECRETI,
			IMPORTO_RICHIESTE_LIQUIDAZIONE, 
			IMPORTO_LIQUIDATO,
			IMPORTO_QUIETANZA, 
			STATO_LIQUIDAZIONE,
			rdp.DATA_VALIDAZIONE,
			case when rdp.SEGNATURA_REVISIONE is null then 'NO' else 'SI' end as [checklist validita]

	FROM
		(SELECT DECXPAG.ID_DOMANDA_PAGAMENTO, 
			DECXPAG.ID_PROGETTO,
			DESCRIZIONE, 
			DATA_MODIFICA as datamodifica, 
			CONTRIBUTO_AMMESSO, 
			IMPORTO_DECRETI,
			SUM(ISNULL(Q.RICHIESTA_MANDATO_IMPORTO, 0)) AS IMPORTO_RICHIESTE_LIQUIDAZIONE, 
			SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) AS IMPORTO_LIQUIDATO,
			SUM(ISNULL(Q.QUIETANZA_IMPORTO , 0)) AS IMPORTO_QUIETANZA,
			--NUMERO_DECRETI_ASSOCIATI,
			--COUNT(DISTINCT Q.ID) AS NUMERO_MANDATI_ASSOCIATI,
			--SUM(CASE WHEN Q.LIQUIDATO IS NULL OR Q.LIQUIDATO = 0 THEN 0 ELSE 1 END) AS NUMERO_MANDATI_LIQUIDATI,
			CASE
				/* Se IMPORTO_DECRETI = CONTRIBUTO_AMMESSO = IMPORTO_RICHIESTE_LIQUIDAZIONE = IMPORTO_LIQUIDATO 
				   e tutte le richieste sono liquidate 
				   -> Liquidato */
				WHEN SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) = SUM(ISNULL(Q.QUIETANZA_IMPORTO, 0)) 
						AND SUM(CASE WHEN Q.LIQUIDATO IS NULL OR Q.LIQUIDATO = 0 THEN 0 ELSE 1 END) = COUNT(DISTINCT Q.ID) 
						AND SUM(ISNULL(Q.QUIETANZA_IMPORTO, 0)) = IMPORTO_DECRETI  
						AND IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
					THEN 'Liquidato'
				/* Se IMPORTO_RICHIESTE_LIQUIDAZIONE != IMPORTO_LIQUIDATO o non tutte le richieste sono liquidate
				   e IMPORTO_LIQUIDATO != 0, IMPORTO_DECRETI = CONTRIBUTO_AMMESSO = IMPORTO_RICHIESTE_LIQUIDAZIONE
				   -> Parzialmente liquidato */
				WHEN (SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) != SUM(ISNULL(Q.QUIETANZA_IMPORTO, 0))
						OR SUM(CASE WHEN Q.LIQUIDATO IS NULL OR Q.LIQUIDATO = 0 THEN 0 ELSE 1 END) != COUNT(DISTINCT Q.ID))
						AND SUM(ISNULL(Q.QUIETANZA_IMPORTO, 0)) != 0
						AND SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) = IMPORTO_DECRETI 
						AND IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
					THEN 'Parzialmente liquidato'	
				/* Se IMPORTO_DECRETI != IMPORTO_RICHIESTE_LIQUIDAZIONE 
				   e IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
				   -> Richiesta/e di pagamento emessa/e */
				WHEN SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) != IMPORTO_DECRETI
						AND IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
					THEN 'Mandato/i di pagamento emesso/i'
				/* Se IMPORTO_DECRETI = 0
				   e IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
				   -> Richiesta/e di pagamento emessa/e */
				WHEN SUM(ISNULL(Q.MANDATO_IMPORTO, 0)) = 0 
						AND IMPORTO_DECRETI = CONTRIBUTO_AMMESSO
					THEN 'Decreto/i di pagamento emesso/i'
				ELSE 'In attesa del decreto'
			END AS STATO_LIQUIDAZIONE
		FROM 
		(SELECT D.ID_DOMANDA_PAGAMENTO, 
				D.ID_PROGETTO, 
				D.DESCRIZIONE, 
				D.DATA_MODIFICA,
				Q1.CONTRIBUTO_AMMESSO,
				COUNT(DISTINCT DECXDOM.ID_DECRETO) AS NUMERO_DECRETI_ASSOCIATI,
				SUM(ISNULL(DECXDOM.IMPORTO, 0)) AS IMPORTO_DECRETI
			FROM vDOMANDA_DI_PAGAMENTO D 
			INNER JOIN PROGETTO P ON D.ID_PROGETTO = P.ID_PROGETTO
			INNER JOIN (SELECT	ID_DOMANDA_PAGAMENTO, 
								SUM(ISNULL(IMPORTO_AMMESSO, 0)) AS CONTRIBUTO_AMMESSO 
						FROM DOMANDA_DI_PAGAMENTO_ESPORTAZIONE
						WHERE @ID_DOMANDA IS NULL OR ID_DOMANDA_PAGAMENTO = @ID_DOMANDA
						GROUP BY ID_DOMANDA_PAGAMENTO) Q1 ON D.ID_DOMANDA_PAGAMENTO = Q1.ID_DOMANDA_PAGAMENTO
			/* modifica del 08/09/2017: i controlli di primo livello non sono piu' bloccanti ai fini del decreto di pagamento */
			--INNER JOIN CTE_TESTATA_VALIDAZIONE R ON D.ID_DOMANDA_PAGAMENTO=R.ID_DOMANDA_PAGAMENTO
			--INNER JOIN LOTTO_DI_REVISIONE L ON R.ID_LOTTO=L.ID_LOTTO AND L.REVISIONE_CONCLUSA=1
			INNER JOIN DOMANDA_DI_PAGAMENTO_ESPORTAZIONE E 
				ON D.ID_DOMANDA_PAGAMENTO = E.ID_DOMANDA_PAGAMENTO
				AND D.ID_PROGETTO = E.ID_PROGETTO AND E.MISURA_PREVALENTE = 1
			LEFT JOIN DECRETI_X_DOM_PAG_ESPORTAZIONE DECXDOM 
			ON D.ID_DOMANDA_PAGAMENTO = DECXDOM.ID_DOMANDA_PAGAMENTO
			AND D.ID_PROGETTO = DECXDOM.ID_PROGETTO
			WHERE 1 = 1 
				AND P.ID_BANDO = @ID_BANDO 
				AND D.APPROVATA = 1 
				AND (@ID_PROGETTO IS NULL OR D.ID_PROGETTO = @ID_PROGETTO)
				AND (@ID_DOMANDA IS NULL OR D.ID_DOMANDA_PAGAMENTO = @ID_DOMANDA)
			GROUP BY	D.ID_DOMANDA_PAGAMENTO, 
						D.ID_PROGETTO, 
						D.DESCRIZIONE, 
						D.DATA_MODIFICA, 
						Q1.CONTRIBUTO_AMMESSO) DECXPAG
	LEFT JOIN DOMANDA_PAGAMENTO_LIQUIDAZIONE Q 
	ON DECXPAG.ID_DOMANDA_PAGAMENTO = Q.ID_DOMANDA_PAGAMENTO
			AND DECXPAG.ID_PROGETTO = Q.ID_PROGETTO 
	GROUP BY	DECXPAG.ID_DOMANDA_PAGAMENTO, 
				DECXPAG.ID_PROGETTO, 
				DESCRIZIONE, 
				DATA_MODIFICA, 
				CONTRIBUTO_AMMESSO, 
				IMPORTO_DECRETI, 
				NUMERO_DECRETI_ASSOCIATI) DECXPAG2
	left join CTE_TESTATA_VALIDAZIONE rdp
	on DECXPAG2.ID_DOMANDA_PAGAMENTO = rdp.ID_DOMANDA_PAGAMENTO
	
WHERE 1 = 1
	AND (@NASCONDI_LIQUIDATI = 0 OR STATO_LIQUIDAZIONE != 'Liquidato')
	AND (@NASCONDI_DECRETI = 0 or STATO_LIQUIDAZIONE = 'In attesa del decreto')) kk
	left join DOMANDA_PAGAMENTO_LIQUIDAZIONE dpl1
	on kk.ID_PROGETTO = dpl1.ID_PROGETTO and kk.ID_DOMANDA_PAGAMENTO = dpl1.ID_DOMANDA_PAGAMENTO
	left join atti
	on dpl1.ID_DECRETO = atti.ID_ATTO
	left join DECRETI_X_DOM_PAG_ESPORTAZIONE DXDPE 
	ON atti.ID_ATTO = DXDPE.ID_DECRETO and dpl1.ID_DOMANDA_PAGAMENTO = DXDPE.ID_DOMANDA_PAGAMENTO
ORDER BY DATA_MODIFICA
end
GO