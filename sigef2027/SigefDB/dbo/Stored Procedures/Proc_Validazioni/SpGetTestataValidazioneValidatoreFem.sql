-- DROP PROCEDURE SpGetTestataValidazioneValidatoreFem
/* BACKUP
CREATE PROCEDURE SpGetTestataValidazioneValidatoreFem
(
	@CF_VALIDATORE VARCHAR(16),
	@ID_BANDO INT = NULL,
	@ID_PROGETTO INT = NULL,
	@ID_DOMANDA_PAGAMENTO INT = NULL
)
AS
	
	SELECT R.*, 
		B.DESCRIZIONE 
	FROM VTESTATA_VALIDAZIONE R
		JOIN BANDO B ON B.ID_BANDO = R.ID_BANDO
	WHERE 1 = 1
		AND (@ID_BANDO IS NULL OR R.ID_BANDO = @ID_BANDO) 
		AND (@ID_PROGETTO IS NULL OR R.ID_PROGETTO = @ID_PROGETTO) 
		AND (@ID_DOMANDA_PAGAMENTO IS NULL OR R.ID_DOMANDA_PAGAMENTO = @ID_DOMANDA_PAGAMENTO) 
		AND ID_LOTTO IS NOT NULL 
		AND CF_VALIDATORE = @CF_VALIDATORE
		AND R.ID_BANDO IN (SELECT DISTINCT ID_BANDO 
							FROM vBando_Config BG 
							WHERE BG.Cod_Tipo = 'TPAPPALTO' 
							AND BG.VALORE_DESCRIZIONE = 'Strumenti finanziari')
	ORDER BY R.APPROVATA ASC, 
		R.ID_PROGETTO, 
		R.ID_DOMANDA_PAGAMENTO
GO
*/

CREATE PROCEDURE SpGetTestataValidazioneValidatoreFem
(
	@CF_VALIDATORE VARCHAR(16),
	@ID_BANDO INT = NULL,
	@ID_PROGETTO INT = NULL,
	@ID_DOMANDA_PAGAMENTO INT = NULL
)
AS
	
	WITH CTE AS 
	(
		SELECT R.*, 
			B.DESCRIZIONE,
			ROW_NUMBER() OVER (PARTITION BY R.ID_DOMANDA_PAGAMENTO ORDER BY R.DATA_INSERIMENTO DESC) AS RN 
		FROM VTESTATA_VALIDAZIONE R
			JOIN BANDO B ON B.ID_BANDO = R.ID_BANDO
		WHERE 1 = 1
			AND (@ID_BANDO IS NULL OR R.ID_BANDO = @ID_BANDO) 
			AND (@ID_PROGETTO IS NULL OR R.ID_PROGETTO = @ID_PROGETTO) 
			AND (@ID_DOMANDA_PAGAMENTO IS NULL OR R.ID_DOMANDA_PAGAMENTO = @ID_DOMANDA_PAGAMENTO)
			AND R.SEGNATURA_APPROVAZIONE_DOMANDA IS NOT NULL 
			AND ID_LOTTO IS NOT NULL 
			AND CF_VALIDATORE = @CF_VALIDATORE
			AND R.ID_BANDO IN (SELECT DISTINCT ID_BANDO 
								FROM vBando_Config BG 
								WHERE BG.Cod_Tipo = 'TPAPPALTO' 
								AND BG.VALORE_DESCRIZIONE = 'Strumenti finanziari')
	)

	SELECT *
	FROM CTE 
	WHERE RN = 1
	ORDER BY APPROVATA ASC, 
		ID_PROGETTO, 
		ID_DOMANDA_PAGAMENTO
	
GO