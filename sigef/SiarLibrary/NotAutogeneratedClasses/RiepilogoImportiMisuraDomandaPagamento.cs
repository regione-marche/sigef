using System;
using System.Collections.Generic;
using System.Text;
using SiarLibrary.NullTypes;

namespace SiarLibrary.NotAutogeneratedClasses
{
    public class RiepilogoImportiDomandaPagamentoCollectionProvider
    {
        public RiepilogoImportiDomandaPagamentoCollectionProvider() { }

        public RiepilogoImportiDomandaPagamentoCollection GetRiepilogoImportiXMisura(int id_domanda_pagamento)
        {
            RiepilogoImportiDomandaPagamentoCollection ret_collection = new RiepilogoImportiDomandaPagamentoCollection();
            DbProvider db = new DbProvider();
            System.Data.IDbCommand cmd = db.GetCommand();
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.CommandText = "SpPsrRiepilogoImportiDPXProgrammazione";
            cmd.Parameters.Add(new System.Data.SqlClient.SqlParameter("ID_DOMANDA_PAGAMENTO", id_domanda_pagamento));
            db.InitDatareader(cmd);
            while (db.DataReader.Read())
                ret_collection.Add(new RiepilogoImportiDomandaPagamento(db, false));            
            db.Close();
            return ret_collection;
        }
    }

    public class RiepilogoImportiDomandaPagamento : BaseObject
    {
        //campi x riepilogo importi
        private IntNT _IdBando;
        private BoolNT _MisuraPrevalente;        
        private DecimalNT _ImportoRichiesto;
        private DecimalNT _ContributoRichiesto;
        private DecimalNT _ContributoAmmissibile;
        private DecimalNT _RecuperoAnticipo;
        private DecimalNT _ContributoAmmesso;

        //campi comuni
        private StringNT _Misura;
        private DecimalNT _AmmontareSanzione;

        //campi per riepilogo sanzioni
        private DatetimeNT _DataApplicazione;
        private StringNT _Titolo;
        private DecimalNT _ImportoAmmissibile;
        private DecimalNT _ImportoSanzione;
        private DecimalNT _ImportoAmmesso;
        private DecimalNT _CostoTotaleProgettoCorrelato;
        private DecimalNT _ContributoTotaleProgettoCorrelato;


        public RiepilogoImportiDomandaPagamento() { }

        public RiepilogoImportiDomandaPagamento(DbProvider db, bool riepilogo_sanzioni)
        {
            if (riepilogo_sanzioni)
            {
                _Misura = new StringNT(db.DataReader["MISURA"]);
                _AmmontareSanzione = new DecimalNT(db.DataReader["AMMONTARE"]);
                _DataApplicazione = new DatetimeNT(db.DataReader["DATA_APPLICAZIONE"]);
                _Titolo = new StringNT(db.DataReader["TITOLO"]);
                _ImportoAmmissibile = new DecimalNT(db.DataReader["IMPORTO_AMMISSIBILE"]);
                _ImportoSanzione = new DecimalNT(db.DataReader["IMPORTO_SANZIONE"]);
                _ImportoAmmesso = new DecimalNT(db.DataReader["IMPORTO_AMMESSO"]);
            }
            else
            {
                _IdBando = new IntNT(db.DataReader["ID_BANDO"]);
                _MisuraPrevalente = new BoolNT(db.DataReader["MISURA_PREVALENTE"]);
                _Misura = new StringNT(db.DataReader["MISURA"]);
                _ImportoRichiesto = new DecimalNT(db.DataReader["IMPORTO_RICHIESTO"]);
                _ContributoRichiesto = new DecimalNT(db.DataReader["CONTRIBUTO_RICHIESTO"]);
                _ContributoAmmissibile = new DecimalNT(db.DataReader["CONTRIBUTO_AMMISSIBILE"]);
                _AmmontareSanzione = new DecimalNT(db.DataReader["AMMONTARE_SANZIONE"]);
                _RecuperoAnticipo = new DecimalNT(db.DataReader["RECUPERO_ANTICIPO"]);
                _ContributoAmmesso = new DecimalNT(db.DataReader["CONTRIBUTO_AMMESSO"]);
                _CostoTotaleProgettoCorrelato = new DecimalNT(db.DataReader["COSTO_TOTALE_PROGETTO_CORRELATO"]);
                _ContributoTotaleProgettoCorrelato = new DecimalNT(db.DataReader["CONTRIBUTO_TOTALE_PROGETTO_CORRELATO"]);

            }
        }

        public IntNT IdBando
        {
            get { return _IdBando; }
            set
            {
                _IdBando = value;
            }
        }
        public BoolNT MisuraPrevalente
        {
            get { return _MisuraPrevalente; }
            set
            {
                _MisuraPrevalente = value;
            }
        }
        public StringNT Misura
        {
            get { return _Misura; }
            set
            {
                _Misura = value;
            }
        }
        public DecimalNT ImportoRichiesto
        {
            get { return _ImportoRichiesto; }
            set
            {
                _ImportoRichiesto = value;
            }
        }
        public DecimalNT ContributoRichiesto
        {
            get { return _ContributoRichiesto; }
            set
            {
                _ContributoRichiesto = value;
            }
        }
        public DecimalNT ContributoAmmissibile
        {
            get { return _ContributoAmmissibile; }
            set
            {
                _ContributoAmmissibile = value;
            }
        }
        public DecimalNT AmmontareSanzione
        {
            get { return _AmmontareSanzione; }
            set
            {
                _AmmontareSanzione = value;
            }
        }
        public DecimalNT RecuperoAnticipo
        {
            get { return _RecuperoAnticipo; }
            set
            {
                _RecuperoAnticipo = value;
            }
        }
        public DecimalNT ContributoAmmesso
        {
            get { return _ContributoAmmesso; }
            set
            {
                _ContributoAmmesso = value;
            }
        }
        public DatetimeNT DataApplicazione
        {
            get { return _DataApplicazione; }
            set
            {
                _DataApplicazione = value;
            }
        }
        public StringNT Titolo
        {
            get { return _Titolo; }
            set
            {
                _Titolo = value;
            }
        }
        public DecimalNT ImportoAmmissibile
        {
            get { return _ImportoAmmissibile; }
            set
            {
                _ImportoAmmissibile = value;
            }
        }
        public DecimalNT ImportoSanzione
        {
            get { return _ImportoSanzione; }
            set
            {
                _ImportoSanzione = value;
            }
        }
        public DecimalNT ImportoAmmesso
        {
            get { return _ImportoAmmesso; }
            set
            {
                _ImportoAmmesso = value;
            }
        }
        public DecimalNT CostoTotaleProgettoCorrelato
        {
            get { return _CostoTotaleProgettoCorrelato; }
            set
            {
                _CostoTotaleProgettoCorrelato = value;
            }
        }
        public DecimalNT ContributoTotaleProgettoCorrelato
        {
            get { return _ContributoTotaleProgettoCorrelato; }
            set
            {
                _ContributoTotaleProgettoCorrelato = value;
            }
        }
        
    }

    public class RiepilogoImportiDomandaPagamentoCollection : CustomCollection
    {
        private RiepilogoImportiDomandaPagamentoCollection(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
            : this()
        {
            int c = info.GetInt32("_count");
            for (int i = 0; i < c; i++)
            {
                this.Add((RiepilogoImportiDomandaPagamento)info.GetValue(i.ToString(), typeof(RiepilogoImportiDomandaPagamento)));
            }
        }

        //Costruttore
        public RiepilogoImportiDomandaPagamentoCollection()
        {
            this.ItemType = typeof(RiepilogoImportiDomandaPagamento);
        }

        //Get e Set
        public new RiepilogoImportiDomandaPagamento this[int index]
        {
            get { return (RiepilogoImportiDomandaPagamento)(base[index]); }
            set
            {
                base[index] = value;
            }
        }

        public new RiepilogoImportiDomandaPagamentoCollection GetChanges()
        {
            return (RiepilogoImportiDomandaPagamentoCollection)base.GetChanges();
        }

        //Add
        public int Add(RiepilogoImportiDomandaPagamento RiepilogoImportiDomandaPagamentoObj)
        {
            return base.Add(RiepilogoImportiDomandaPagamentoObj);
        }

        //AddCollection
        public void AddCollection(RiepilogoImportiDomandaPagamentoCollection RiepilogoImportiDomandaPagamentoCollectionObj)
        {
            foreach (RiepilogoImportiDomandaPagamento RiepilogoImportiDomandaPagamento in RiepilogoImportiDomandaPagamentoCollectionObj)
                this.Add(RiepilogoImportiDomandaPagamento);
        }

        public void Insert(int index, RiepilogoImportiDomandaPagamento RiepilogoImportiDomandaPagamentoObj)
        {
            base.Insert(index, RiepilogoImportiDomandaPagamentoObj);
        }
    }
}
