// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.4.0.7
//    <NameSpace>SiarBLL</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>Net35</CodeBaseTag><InitializeFields>All</InitializeFields><GenerateUnusedComplexTypes>False</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>False</GenerateUnusedSimpleTypes><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>False</AutomaticProperties><PropNameSpecified>None</PropNameSpecified><PrivateFieldName>StartWithUnderscore</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>False</EnableExternalSchemasCache><EnableDebug>False</EnableDebug><EnableWarn>False</EnableWarn><ExcludeImportedTypes>False</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>False</CleanupCode><EnableXmlSerialization>True</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>True</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings></CustomUsings><AttributesToExlude></AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SiarBLL
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Xml;
    using System.Collections.Generic;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class GRADUATORIA
    {

        #region Private fields
        private GRADUATORIAGRADUATORIA_PROGETTI _gRADUATORIA_PROGETTI;

        private static XmlSerializer serializer;
        #endregion

        public GRADUATORIA()
        {
            this._gRADUATORIA_PROGETTI = new GRADUATORIAGRADUATORIA_PROGETTI();
        }

        public GRADUATORIA(int IdBando)
        {
            this._gRADUATORIA_PROGETTI = new GRADUATORIAGRADUATORIA_PROGETTI();

            SiarBLL.GraduatoriaProgettiCollectionProvider grad_prov = new GraduatoriaProgettiCollectionProvider();
            foreach (SiarLibrary.GraduatoriaProgetti grad_progetto in grad_prov.Find(IdBando, null, null))
            {
                GRADUATORIA_PROGETTOType graduatoria_progettoType = new GRADUATORIA_PROGETTOType();
                graduatoria_progettoType.Carica(grad_progetto);
                GRADUATORIA_PROGETTI.GRADUATORIA_PROGETTO.Add(graduatoria_progettoType);
            }
        }

        public GRADUATORIAGRADUATORIA_PROGETTI GRADUATORIA_PROGETTI
        {
            get
            {
                return this._gRADUATORIA_PROGETTI;
            }
            set
            {
                this._gRADUATORIA_PROGETTI = value;
            }
        }

        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(GRADUATORIA));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current GRADUATORIA object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.OmitXmlDeclaration = true;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes workflow markup into an GRADUATORIA object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output GRADUATORIA object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out GRADUATORIA obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIA);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string input, out GRADUATORIA obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }

        public static GRADUATORIA Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((GRADUATORIA)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        public static GRADUATORIA Deserialize(System.IO.Stream s)
        {
            return ((GRADUATORIA)(Serializer.Deserialize(s)));
        }
        #endregion

        /// <summary>
        /// Serializes current GRADUATORIA object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an GRADUATORIA object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output GRADUATORIA object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out GRADUATORIA obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIA);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out GRADUATORIA obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static GRADUATORIA LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this GRADUATORIA object
        /// </summary>
        public virtual GRADUATORIA Clone()
        {
            return ((GRADUATORIA)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class GRADUATORIAGRADUATORIA_PROGETTI
    {

        #region Private fields
        private List<GRADUATORIA_PROGETTOType> _gRADUATORIA_PROGETTO;

        private static XmlSerializer serializer;
        #endregion

        public GRADUATORIAGRADUATORIA_PROGETTI()
        {
            this._gRADUATORIA_PROGETTO = new List<GRADUATORIA_PROGETTOType>();
        }

        [System.Xml.Serialization.XmlElementAttribute("GRADUATORIA_PROGETTO")]
        public List<GRADUATORIA_PROGETTOType> GRADUATORIA_PROGETTO
        {
            get
            {
                return this._gRADUATORIA_PROGETTO;
            }
            set
            {
                this._gRADUATORIA_PROGETTO = value;
            }
        }

        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(GRADUATORIAGRADUATORIA_PROGETTI));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current GRADUATORIAGRADUATORIA_PROGETTI object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.OmitXmlDeclaration = true;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes workflow markup into an GRADUATORIAGRADUATORIA_PROGETTI object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output GRADUATORIAGRADUATORIA_PROGETTI object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out GRADUATORIAGRADUATORIA_PROGETTI obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIAGRADUATORIA_PROGETTI);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string input, out GRADUATORIAGRADUATORIA_PROGETTI obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }

        public static GRADUATORIAGRADUATORIA_PROGETTI Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((GRADUATORIAGRADUATORIA_PROGETTI)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        public static GRADUATORIAGRADUATORIA_PROGETTI Deserialize(System.IO.Stream s)
        {
            return ((GRADUATORIAGRADUATORIA_PROGETTI)(Serializer.Deserialize(s)));
        }
        #endregion

        /// <summary>
        /// Serializes current GRADUATORIAGRADUATORIA_PROGETTI object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an GRADUATORIAGRADUATORIA_PROGETTI object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output GRADUATORIAGRADUATORIA_PROGETTI object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out GRADUATORIAGRADUATORIA_PROGETTI obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIAGRADUATORIA_PROGETTI);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out GRADUATORIAGRADUATORIA_PROGETTI obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static GRADUATORIAGRADUATORIA_PROGETTI LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this GRADUATORIAGRADUATORIA_PROGETTI object
        /// </summary>
        public virtual GRADUATORIAGRADUATORIA_PROGETTI Clone()
        {
            return ((GRADUATORIAGRADUATORIA_PROGETTI)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GRADUATORIA_PROGETTOType
    {

        #region Private fields
        private int _iD_BANDO;

        private int _iD_PROGETTO;

        private decimal _pUNTEGGIO;

        private System.DateTime _dATA_VALUTAZIONE;

        private string _oPERATORE;

        private System.Nullable<int> _oRDINE;

        private System.Nullable<decimal> _cOSTO_TOTALE;

        private System.Nullable<decimal> _cONTRIBUTO_TOTALE;

        private System.Nullable<decimal> _cONTRIBUTO_RIMANENTE;

        private string _fINANZIABILITA;

        private bool _uTILIZZA_FONDI_RISERVA;

        private System.Nullable<decimal> _aMMONTARE_FONDI_RISERVA_UTILIZZATO;

        private GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO _gRADUATORIA_PROGETTI_DETTAGLIO;

        private static XmlSerializer serializer;
        #endregion

        public void Carica(SiarLibrary.GraduatoriaProgetti Grad)
        {
            ID_BANDO = Grad.IdBando;
            ID_PROGETTO = Grad.IdProgetto;
            PUNTEGGIO = Grad.Punteggio;
            DATA_VALUTAZIONE = Grad.DataValutazione;
            OPERATORE = Grad.Operatore;
            ORDINE = Grad.Ordine;
            COSTO_TOTALE = Grad.CostoTotale;
            CONTRIBUTO_TOTALE = Grad.ContributoTotale;
            CONTRIBUTO_RIMANENTE = Grad.ContributoRimanente;
            FINANZIABILITA = Grad.Finanziabilita;
            UTILIZZA_FONDI_RISERVA = Grad.UtilizzaFondiRiserva;
            AMMONTARE_FONDI_RISERVA_UTILIZZATO = Grad.AmmontareFondiRiservaUtilizzato;

            SiarBLL.GraduatoriaProgettiDettaglioCollectionProvider grad_det_prov = new GraduatoriaProgettiDettaglioCollectionProvider();
            foreach (SiarLibrary.GraduatoriaProgettiDettaglio dett_grad in grad_det_prov.Find(null, Grad.IdProgetto, null))
            {
                GRADUATORIA_PROGETTO_DETTAGLIOType dett_grad_type = new GRADUATORIA_PROGETTO_DETTAGLIOType();
                dett_grad_type.Carica(dett_grad);
                GRADUATORIA_PROGETTI_DETTAGLIO.GRADUATORIA_PROGETTO_DETTAGLIO.Add(dett_grad_type);
            }
        }

        public GRADUATORIA_PROGETTOType()
        {
            this._gRADUATORIA_PROGETTI_DETTAGLIO = new GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO();
        }

        public int ID_BANDO
        {
            get
            {
                return this._iD_BANDO;
            }
            set
            {
                this._iD_BANDO = value;
            }
        }

        public int ID_PROGETTO
        {
            get
            {
                return this._iD_PROGETTO;
            }
            set
            {
                this._iD_PROGETTO = value;
            }
        }

        public decimal PUNTEGGIO
        {
            get
            {
                return this._pUNTEGGIO;
            }
            set
            {
                this._pUNTEGGIO = value;
            }
        }

        public System.DateTime DATA_VALUTAZIONE
        {
            get
            {
                return this._dATA_VALUTAZIONE;
            }
            set
            {
                this._dATA_VALUTAZIONE = value;
            }
        }

        public string OPERATORE
        {
            get
            {
                return this._oPERATORE;
            }
            set
            {
                this._oPERATORE = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<int> ORDINE
        {
            get
            {
                return this._oRDINE;
            }
            set
            {
                this._oRDINE = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> COSTO_TOTALE
        {
            get
            {
                return this._cOSTO_TOTALE;
            }
            set
            {
                this._cOSTO_TOTALE = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> CONTRIBUTO_TOTALE
        {
            get
            {
                return this._cONTRIBUTO_TOTALE;
            }
            set
            {
                this._cONTRIBUTO_TOTALE = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> CONTRIBUTO_RIMANENTE
        {
            get
            {
                return this._cONTRIBUTO_RIMANENTE;
            }
            set
            {
                this._cONTRIBUTO_RIMANENTE = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string FINANZIABILITA
        {
            get
            {
                return this._fINANZIABILITA;
            }
            set
            {
                this._fINANZIABILITA = value;
            }
        }

        public bool UTILIZZA_FONDI_RISERVA
        {
            get
            {
                return this._uTILIZZA_FONDI_RISERVA;
            }
            set
            {
                this._uTILIZZA_FONDI_RISERVA = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Nullable<decimal> AMMONTARE_FONDI_RISERVA_UTILIZZATO
        {
            get
            {
                return this._aMMONTARE_FONDI_RISERVA_UTILIZZATO;
            }
            set
            {
                this._aMMONTARE_FONDI_RISERVA_UTILIZZATO = value;
            }
        }

        public GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO GRADUATORIA_PROGETTI_DETTAGLIO
        {
            get
            {
                return this._gRADUATORIA_PROGETTI_DETTAGLIO;
            }
            set
            {
                this._gRADUATORIA_PROGETTI_DETTAGLIO = value;
            }
        }

        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(GRADUATORIA_PROGETTOType));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current GRADUATORIA_PROGETTOType object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.OmitXmlDeclaration = true;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes workflow markup into an GRADUATORIA_PROGETTOType object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output GRADUATORIA_PROGETTOType object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out GRADUATORIA_PROGETTOType obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIA_PROGETTOType);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string input, out GRADUATORIA_PROGETTOType obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }

        public static GRADUATORIA_PROGETTOType Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((GRADUATORIA_PROGETTOType)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        public static GRADUATORIA_PROGETTOType Deserialize(System.IO.Stream s)
        {
            return ((GRADUATORIA_PROGETTOType)(Serializer.Deserialize(s)));
        }
        #endregion

        /// <summary>
        /// Serializes current GRADUATORIA_PROGETTOType object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an GRADUATORIA_PROGETTOType object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output GRADUATORIA_PROGETTOType object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out GRADUATORIA_PROGETTOType obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIA_PROGETTOType);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out GRADUATORIA_PROGETTOType obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static GRADUATORIA_PROGETTOType LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this GRADUATORIA_PROGETTOType object
        /// </summary>
        public virtual GRADUATORIA_PROGETTOType Clone()
        {
            return ((GRADUATORIA_PROGETTOType)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO
    {

        #region Private fields
        private List<GRADUATORIA_PROGETTO_DETTAGLIOType> _gRADUATORIA_PROGETTO_DETTAGLIO;

        private static XmlSerializer serializer;
        #endregion

        public GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO()
        {
            this._gRADUATORIA_PROGETTO_DETTAGLIO = new List<GRADUATORIA_PROGETTO_DETTAGLIOType>();
        }

        [System.Xml.Serialization.XmlElementAttribute("GRADUATORIA_PROGETTO_DETTAGLIO")]
        public List<GRADUATORIA_PROGETTO_DETTAGLIOType> GRADUATORIA_PROGETTO_DETTAGLIO
        {
            get
            {
                return this._gRADUATORIA_PROGETTO_DETTAGLIO;
            }
            set
            {
                this._gRADUATORIA_PROGETTO_DETTAGLIO = value;
            }
        }

        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.OmitXmlDeclaration = true;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes workflow markup into an GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string input, out GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }

        public static GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        public static GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO Deserialize(System.IO.Stream s)
        {
            return ((GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO)(Serializer.Deserialize(s)));
        }
        #endregion

        /// <summary>
        /// Serializes current GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO object
        /// </summary>
        public virtual GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO Clone()
        {
            return ((GRADUATORIA_PROGETTOTypeGRADUATORIA_PROGETTI_DETTAGLIO)(this.MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GRADUATORIA_PROGETTO_DETTAGLIOType
    {

        #region Private fields
        private int _iD_PRIORITA;

        private int _iD_PROGETTO;

        private decimal _pUNTEGGIO;

        private System.DateTime _dATA_VALUTAZIONE;

        private string _oPERATORE;

        private bool _mODIFICA_MANUALE;

        private static XmlSerializer serializer;
        #endregion

        public void Carica(SiarLibrary.GraduatoriaProgettiDettaglio Dett)
        {
            ID_PRIORITA = Dett.IdPriorita;
            ID_PROGETTO = Dett.IdProgetto;
            PUNTEGGIO = Dett.Punteggio;
            DATA_VALUTAZIONE = Dett.DataValutazione;
            OPERATORE = Dett.Operatore;
            MODIFICA_MANUALE = Dett.ModificaManuale;
        }


        public int ID_PRIORITA
        {
            get
            {
                return this._iD_PRIORITA;
            }
            set
            {
                this._iD_PRIORITA = value;
            }
        }

        public int ID_PROGETTO
        {
            get
            {
                return this._iD_PROGETTO;
            }
            set
            {
                this._iD_PROGETTO = value;
            }
        }

        public decimal PUNTEGGIO
        {
            get
            {
                return this._pUNTEGGIO;
            }
            set
            {
                this._pUNTEGGIO = value;
            }
        }

        public System.DateTime DATA_VALUTAZIONE
        {
            get
            {
                return this._dATA_VALUTAZIONE;
            }
            set
            {
                this._dATA_VALUTAZIONE = value;
            }
        }

        public string OPERATORE
        {
            get
            {
                return this._oPERATORE;
            }
            set
            {
                this._oPERATORE = value;
            }
        }

        public bool MODIFICA_MANUALE
        {
            get
            {
                return this._mODIFICA_MANUALE;
            }
            set
            {
                this._mODIFICA_MANUALE = value;
            }
        }

        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(GRADUATORIA_PROGETTO_DETTAGLIOType));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current GRADUATORIA_PROGETTO_DETTAGLIOType object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.OmitXmlDeclaration = true;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes workflow markup into an GRADUATORIA_PROGETTO_DETTAGLIOType object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output GRADUATORIA_PROGETTO_DETTAGLIOType object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out GRADUATORIA_PROGETTO_DETTAGLIOType obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIA_PROGETTO_DETTAGLIOType);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string input, out GRADUATORIA_PROGETTO_DETTAGLIOType obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }

        public static GRADUATORIA_PROGETTO_DETTAGLIOType Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((GRADUATORIA_PROGETTO_DETTAGLIOType)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        public static GRADUATORIA_PROGETTO_DETTAGLIOType Deserialize(System.IO.Stream s)
        {
            return ((GRADUATORIA_PROGETTO_DETTAGLIOType)(Serializer.Deserialize(s)));
        }
        #endregion

        /// <summary>
        /// Serializes current GRADUATORIA_PROGETTO_DETTAGLIOType object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an GRADUATORIA_PROGETTO_DETTAGLIOType object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output GRADUATORIA_PROGETTO_DETTAGLIOType object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out GRADUATORIA_PROGETTO_DETTAGLIOType obj, out System.Exception exception)
        {
            exception = null;
            obj = default(GRADUATORIA_PROGETTO_DETTAGLIOType);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out GRADUATORIA_PROGETTO_DETTAGLIOType obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static GRADUATORIA_PROGETTO_DETTAGLIOType LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this GRADUATORIA_PROGETTO_DETTAGLIOType object
        /// </summary>
        public virtual GRADUATORIA_PROGETTO_DETTAGLIOType Clone()
        {
            return ((GRADUATORIA_PROGETTO_DETTAGLIOType)(this.MemberwiseClone()));
        }
        #endregion
    }
}
#pragma warning restore
