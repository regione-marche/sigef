// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.106.0. www.xsd2code.com
//    {"TargetFramework":"Net47","NameSpace":"WsSigef","Properties":{"AutomaticProperties":true},"XmlAttribute":{"Enabled":true},"ClassParams":{},"Serialization":{"ShouldSerialize":{},"AdditionalSerializers":{},"XmlSerializerEvent":{},"XmlOutput":{"OmitXmlDeclaration":true,"OmitXmlNamespaces":true},"JsonOutput":{},"Enabled":true,"SerializeMethodsOn":"RootClass","EnableEncoding":true},"Miscellaneous":{},"GenerateCloneMethod":true,"InitializeFields":"Collections"}
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace WsSigef
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Xml;
    using System.IO;
    using System.Text;
    using System.Collections.Generic;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    [XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class Progetto
    {
        private static XmlSerializer _serializerXml;

        public DatiGeneraliProgettoType DatiGenerali { get; set; }
        public ProgettoBeneficiari Beneficiari { get; set; }
        public ProgettoRelazioneTecnica RelazioneTecnica { get; set; }
        public ProgettoPianoInvestimenti PianoInvestimenti { get; set; }
        public ProgettoDatiMonitoraggio DatiMonitoraggio { get; set; }
        public ProgettoRequisitiProgetto RequisitiProgetto { get; set; }
        public ProgettoAllegatiProgetto AllegatiProgetto { get; set; }
        public ProgettoDichiarazioniProgetto DichiarazioniProgetto { get; set; }
        public ProgettoIndicatoriMonitoraggio IndicatoriMonitoraggio { get; set; }
        public ProgettoLocalizzazioni Localizzazioni { get; set; }

        private static XmlSerializer SerializerXml
        {
            get
            {
                if ((_serializerXml == null))
                {
                    _serializerXml = new XmlSerializerFactory().CreateSerializer(typeof(Progetto));
                }
                return _serializerXml;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serialize Progetto object
        /// </summary>
        /// <returns>XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            StreamReader streamReader = null;
            MemoryStream memoryStream = null;
            try
            {
                memoryStream = new MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                xmlWriterSettings.OmitXmlDeclaration = true;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                XmlSerializerNamespaces xns = new XmlSerializerNamespaces();
                xns.Add("", "");
                SerializerXml.Serialize(xmlWriter, this, xns);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new StreamReader(memoryStream, encoding);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(System.Text.Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes Progetto object
        /// </summary>
        /// <param name="input">string to deserialize</param>
        /// <param name="obj">Output Progetto object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out Progetto obj, out Exception exception)
        {
            exception = null;
            obj = default(Progetto);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string input, out Progetto obj)
        {
            Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }

        public static Progetto Deserialize(string input)
        {
            StringReader stringReader = null;
            try
            {
                stringReader = new StringReader(input);
                return ((Progetto)(SerializerXml.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        public static Progetto Deserialize(Stream s)
        {
            return ((Progetto)(SerializerXml.Deserialize(s)));
        }
        #endregion

        /// <summary>
        /// Serializes current Progetto object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out Exception exception)
        {
            return SaveToFile(fileName, System.Text.Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, System.Text.Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            StreamWriter streamWriter = null;
            try
            {
                string dataString = Serialize(encoding);
                streamWriter = new StreamWriter(fileName, false, encoding);
                streamWriter.WriteLine(dataString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an Progetto object
        /// </summary>
        /// <param name="fileName">File to load and deserialize</param>
        /// <param name="obj">Output Progetto object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out Progetto obj, out Exception exception)
        {
            exception = null;
            obj = default(Progetto);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out Progetto obj, out Exception exception)
        {
            return LoadFromFile(fileName, System.Text.Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out Progetto obj)
        {
            Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static Progetto LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, System.Text.Encoding.UTF8);
        }

        public static Progetto LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            FileStream file = null;
            StreamReader sr = null;
            try
            {
                file = new FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new StreamReader(file, encoding);
                string dataString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(dataString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this Progetto object
        /// </summary>
        public virtual Progetto Clone()
        {
            return ((Progetto)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class DatiGeneraliProgettoType
    {
        public string SistemaMittente { get; set; }
        [XmlElement(IsNullable = true)]
        public string CodiceCUP { get; set; }
        [XmlElement(DataType = "date")]
        public System.DateTime DataPresentazione { get; set; }
        public string SegnaturaProtocollo { get; set; }
        public int IdBandoSigef { get; set; }
        public string CodiceFondo { get; set; }
        [XmlElement(IsNullable = true)]
        public System.Nullable<DatiGeneraliProgettoTypeTipoAggregazione> TipoAggregazione { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this DatiGeneraliProgettoType object
        /// </summary>
        public virtual DatiGeneraliProgettoType Clone()
        {
            return ((DatiGeneraliProgettoType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [XmlTypeAttribute(AnonymousType = true)]
    public enum DatiGeneraliProgettoTypeTipoAggregazione
    {
        A,
        ATS,
        C,
        F,
        R,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class LocalizzazioneType
    {
        public string ISTAT6 { get; set; }
        public string Indirizzo { get; set; }
        public string CAP { get; set; }
        public string Numero { get; set; }
        public string DUG { get; set; }
        public string PartitaIvaImpresa { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this LocalizzazioneType object
        /// </summary>
        public virtual LocalizzazioneType Clone()
        {
            return ((LocalizzazioneType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class IndicatoreType
    {
        public string CodiceProgrammazione { get; set; }
        public string Codice { get; set; }
        public decimal Valore { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this IndicatoreType object
        /// </summary>
        public virtual IndicatoreType Clone()
        {
            return ((IndicatoreType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class AllegatoType
    {
        public string Categoria { get; set; }
        public string Descrizione { get; set; }
        public string NomeFile { get; set; }
        [XmlElement(DataType = "base64Binary")]
        public byte[] Content { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this AllegatoType object
        /// </summary>
        public virtual AllegatoType Clone()
        {
            return ((AllegatoType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class InvestimentoType
    {
        public string CodiceProgrammazione { get; set; }
        public string CodiceInvestimento { get; set; }
        public decimal CostoInvestimento { get; set; }
        public decimal ContributoRichiesto { get; set; }
        public decimal QuotaContributoRIchiesto { get; set; }
        public string CodiceDettaglioInvestimento { get; set; }
        public string CodiceSpecificaInvestimento { get; set; }
        public string CodiceSottotipologiaCUP { get; set; }
        public string PartitaIvaImpresa { get; set; }
        public string DescrizioneInvestimento { get; set; }
        public int ProgressivoInvestimento { get; set; }
        public InvestimentoTypeRequisitiInvestimento RequisitiInvestimento { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this InvestimentoType object
        /// </summary>
        public virtual InvestimentoType Clone()
        {
            return ((InvestimentoType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class InvestimentoTypeRequisitiInvestimento
    {
        [XmlElement("RequisitoInvestimento")]
        public List<RequisitoType> RequisitoInvestimento { get; set; }

        public InvestimentoTypeRequisitiInvestimento()
        {
            RequisitoInvestimento = new List<RequisitoType>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this InvestimentoTypeRequisitiInvestimento object
        /// </summary>
        public virtual InvestimentoTypeRequisitiInvestimento Clone()
        {
            return ((InvestimentoTypeRequisitiInvestimento)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class RequisitoType
    {
        public string ChiaveDescrizione { get; set; }
        public string Valore { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this RequisitoType object
        /// </summary>
        public virtual RequisitoType Clone()
        {
            return ((RequisitoType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class ParagrafoType
    {
        public string Titolo { get; set; }
        public string Descrizione { get; set; }
        public bool IsTitoloProgetto { get; set; }
        public bool IsDescrizioneProgetto { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this ParagrafoType object
        /// </summary>
        public virtual ParagrafoType Clone()
        {
            return ((ParagrafoType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class PersonaType
    {
        public string Nome { get; set; }
        public string Cognome { get; set; }
        [XmlElement(DataType = "date")]
        public System.DateTime DataNascita { get; set; }
        public string ISTAT6Nascita { get; set; }
        public string CodiceFiscale { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this PersonaType object
        /// </summary>
        public virtual PersonaType Clone()
        {
            return ((PersonaType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class IndirizzoType
    {
        public string ISTAT6 { get; set; }
        public string Indirizzo { get; set; }
        public string CAP { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this IndirizzoType object
        /// </summary>
        public virtual IndirizzoType Clone()
        {
            return ((IndirizzoType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    public partial class BeneficiarioType
    {
        public string RagioneSociale { get; set; }
        public string CodiceFiscale { get; set; }
        public string PartitaIva { get; set; }
        [XmlElement(DataType = "date")]
        public System.DateTime DataInizioAttivita { get; set; }
        public string CodiceFormaGiuridica { get; set; }
        public string CodiceATECO2007 { get; set; }
        public int DimensioneImpresa { get; set; }
        public string NumeroRegistroImprese { get; set; }
        public string NumeroREA { get; set; }
        public int AnnoIscrizioneREA { get; set; }
        public string Email { get; set; }
        public string Pec { get; set; }
        public string Telefono { get; set; }
        public bool IsSoggettoPrincipale { get; set; }
        public IndirizzoType SedeLegale { get; set; }
        public PersonaType RappresentanteLegale { get; set; }
        public string IBAN { get; set; }
        public BeneficiarioTypeRequisitiImpresa RequisitiImpresa { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this BeneficiarioType object
        /// </summary>
        public virtual BeneficiarioType Clone()
        {
            return ((BeneficiarioType)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class BeneficiarioTypeRequisitiImpresa
    {
        [XmlElement("RequisitoImpresa")]
        public List<RequisitoType> RequisitoImpresa { get; set; }

        public BeneficiarioTypeRequisitiImpresa()
        {
            RequisitoImpresa = new List<RequisitoType>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this BeneficiarioTypeRequisitiImpresa object
        /// </summary>
        public virtual BeneficiarioTypeRequisitiImpresa Clone()
        {
            return ((BeneficiarioTypeRequisitiImpresa)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoBeneficiari
    {
        [XmlElement("Beneficiario")]
        public List<BeneficiarioType> Beneficiario { get; set; }

        public ProgettoBeneficiari()
        {
            Beneficiario = new List<BeneficiarioType>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoBeneficiari object
        /// </summary>
        public virtual ProgettoBeneficiari Clone()
        {
            return ((ProgettoBeneficiari)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoRelazioneTecnica
    {
        [XmlElement("Compilazione")]
        public List<ProgettoRelazioneTecnicaCompilazione> Compilazione { get; set; }

        public ProgettoRelazioneTecnica()
        {
            Compilazione = new List<ProgettoRelazioneTecnicaCompilazione>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoRelazioneTecnica object
        /// </summary>
        public virtual ProgettoRelazioneTecnica Clone()
        {
            return ((ProgettoRelazioneTecnica)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoRelazioneTecnicaCompilazione
    {
        public ParagrafoType Paragrafo { get; set; }
        public string Contenuto { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoRelazioneTecnicaCompilazione object
        /// </summary>
        public virtual ProgettoRelazioneTecnicaCompilazione Clone()
        {
            return ((ProgettoRelazioneTecnicaCompilazione)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoPianoInvestimenti
    {
        [XmlElement("Investimento")]
        public List<InvestimentoType> Investimento { get; set; }

        public ProgettoPianoInvestimenti()
        {
            Investimento = new List<InvestimentoType>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoPianoInvestimenti object
        /// </summary>
        public virtual ProgettoPianoInvestimenti Clone()
        {
            return ((ProgettoPianoInvestimenti)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoDatiMonitoraggio
    {
        public string ClassificazioneCUP { get; set; }
        public string CategoriaSoggettoCUP { get; set; }
        public string CodiceNaturaCUP { get; set; }
        public string TemaPrioritario { get; set; }
        public string CodiceATECO2007 { get; set; }
        public string AttivitaEconomica { get; set; }
        public string SettoreCPT { get; set; }
        public string DimensioneTerritoriale { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoDatiMonitoraggio object
        /// </summary>
        public virtual ProgettoDatiMonitoraggio Clone()
        {
            return ((ProgettoDatiMonitoraggio)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoRequisitiProgetto
    {
        [XmlElement("RequisitoSoggettivo")]
        public List<RequisitoType> RequisitoSoggettivo { get; set; }

        public ProgettoRequisitiProgetto()
        {
            RequisitoSoggettivo = new List<RequisitoType>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoRequisitiProgetto object
        /// </summary>
        public virtual ProgettoRequisitiProgetto Clone()
        {
            return ((ProgettoRequisitiProgetto)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoAllegatiProgetto
    {
        [XmlElement("Allegato")]
        public List<AllegatoType> Allegato { get; set; }

        public ProgettoAllegatiProgetto()
        {
            Allegato = new List<AllegatoType>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoAllegatiProgetto object
        /// </summary>
        public virtual ProgettoAllegatiProgetto Clone()
        {
            return ((ProgettoAllegatiProgetto)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoDichiarazioniProgetto
    {
        [XmlElement("DescrizioneDichiarazione")]
        public List<string> DescrizioneDichiarazione { get; set; }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoDichiarazioniProgetto object
        /// </summary>
        public virtual ProgettoDichiarazioniProgetto Clone()
        {
            return ((ProgettoDichiarazioniProgetto)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoIndicatoriMonitoraggio
    {
        [XmlElement("Indicatore")]
        public List<IndicatoreType> Indicatore { get; set; }

        public ProgettoIndicatoriMonitoraggio()
        {
            Indicatore = new List<IndicatoreType>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoIndicatoriMonitoraggio object
        /// </summary>
        public virtual ProgettoIndicatoriMonitoraggio Clone()
        {
            return ((ProgettoIndicatoriMonitoraggio)(MemberwiseClone()));
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true)]
    public partial class ProgettoLocalizzazioni
    {
        [XmlElement("Localizzazione")]
        public List<LocalizzazioneType> Localizzazione { get; set; }

        public ProgettoLocalizzazioni()
        {
            Localizzazione = new List<LocalizzazioneType>();
        }

        #region Clone method
        /// <summary>
        /// Create a clone of this ProgettoLocalizzazioni object
        /// </summary>
        public virtual ProgettoLocalizzazioni Clone()
        {
            return ((ProgettoLocalizzazioni)(MemberwiseClone()));
        }
        #endregion
    }
}
#pragma warning restore
