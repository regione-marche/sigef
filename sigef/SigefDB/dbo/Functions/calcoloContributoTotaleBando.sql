-- =============================================
--
CREATE FUNCTION [dbo].[calcoloContributoTotaleBando] 
(
	@ID_BANDO INT, --ID DEL BANDO O DISPOSIZIONE ATTUATIVA
	@COD_STATO CHAR(1), --STATO DEI PROGETTI
	@FASE_ISTRUTTORIA BIT =0
)
RETURNS DECIMAL(18,2)
AS
BEGIN


--DECLARE @ID_BANDO INT
--DECLARE	@COD_STATO CHAR(1)
--DECLARE @FASE_ISTRUTTORIA BIT 
--SET @FASE_ISTRUTTORIA=1
--SET @ID_BANDO= 27
--SET	@COD_STATO ='A'


RETURN ( 
	SELECT SUM(CASE WHEN B.IMPORTO_MAX IS NOT NULL AND B.IMPORTO_MAX<CONTRIBUTO THEN B.IMPORTO_MAX ELSE CONTRIBUTO END)
	FROM (
		SELECT I.ID_PROGETTO,ID_BANDO,SUM(ISNULL(CONTRIBUTO_RICHIESTO,0)) AS CONTRIBUTO
		FROM PIANO_INVESTIMENTI AS I INNER JOIN PROGETTO AS P ON I.ID_PROGETTO = P.ID_PROGETTO 
		INNER JOIN (
			SELECT DISTINCT P.ID_PROGETTO FROM PROGETTO AS P INNER JOIN (
				SELECT PS.ID_PROGETTO,COD_STATO FROM PROGETTO_STORICO PS INNER JOIN (
					SELECT MAX(ID) AS MAX_ID,ID_PROGETTO,COD_FASE FROM VPROGETTO_STORICO 
					WHERE COD_STATO=@COD_STATO GROUP BY ID_PROGETTO,COD_FASE) AS Q2 ON PS.ID=Q2.MAX_ID
                ) AS Q1 ON P.ID_PROGETTO=Q1.ID_PROGETTO
			) V ON P.ID_PROGETTO = V.ID_PROGETTO
			WHERE P.ID_BANDO = @ID_BANDO AND ((@FASE_ISTRUTTORIA=0 AND I.ID_INVESTIMENTO_ORIGINALE IS NULL) 
				OR (@FASE_ISTRUTTORIA=1 AND I.ID_INVESTIMENTO_ORIGINALE IS NOT NULL)) GROUP BY I.ID_PROGETTO, ID_BANDO		
	) AS Q1 LEFT OUTER JOIN BANDO_TIPO_INVESTIMENTI AS B ON Q1.ID_BANDO = B.ID_BANDO AND B.COD_TIPO_INVESTIMENTO=7	
)
END
