CREATE FUNCTION [dbo].[calcoloPremioContoCapitaleSaldo] 
(
	@ID_DOMANDA_PAGAMENTO INT,
	@ISTRUTTORIA BIT
)
RETURNS DECIMAL(18,2)
AS
BEGIN
	--DECLARE @ID_DOMANDA_PAGAMENTO INT,@ISTRUTTORIA BIT;SET @ID_DOMANDA_PAGAMENTO=1424;SET @ISTRUTTORIA=1

	--DEFINIZIONI
	DECLARE @COD_PSR VARCHAR(20),@ID_VARIANTE INT,@ID_PROGETTO INT,@DATA_MODIFICA_PAGAMENTO DATETIME,@MAX_AIUTO DECIMAL(15,2),
		@MIN_AIUTO DECIMAL(15,2),@COD_AIUTO INT,@COEFF_RENDICONTATO DECIMAL(20,6),@COEFF_DA_INVESTIMENTI DECIMAL(20,6),
		@AMMONTARE_PREMIO_CONTO_CAPITALE DECIMAL(18,2)

	--TROVO PROGETTO E ULTIMA VARIANTE RELATIVA A QUESTA DOMANDA DI PAGAMENTO
	SELECT @DATA_MODIFICA_PAGAMENTO=DATA_MODIFICA,@ID_PROGETTO=D.ID_PROGETTO,@ID_VARIANTE=ID_VARIAZIONE_ACCERTATA 
	FROM DOMANDA_DI_PAGAMENTO D INNER JOIN PROGETTO P ON D.ID_PROGETTO=P.ID_PROGETTO WHERE ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO
	IF @ID_VARIANTE IS NULL 
		SELECT @ID_VARIANTE=MAX(ID_VARIANTE) FROM VARIANTI WHERE ID_PROGETTO=@ID_PROGETTO AND APPROVATA=1 AND ANNULLATA=0 
			AND DATA_MODIFICA<@DATA_MODIFICA_PAGAMENTO
			
	SELECT @COD_PSR=COD_PSR,@COD_AIUTO=COD_TIPO_INVESTIMENTO,@MIN_AIUTO=ISNULL(IMPORTO_MIN,0),@MAX_AIUTO=ISNULL(IMPORTO_MAX,1000000000) 
	FROM PROGETTO AS P INNER JOIN BANDO B ON P.ID_BANDO=B.ID_BANDO INNER JOIN vzPROGRAMMAZIONE Z ON B.ID_PROGRAMMAZIONE=Z.ID
	INNER JOIN BANDO_TIPO_INVESTIMENTI BI ON P.ID_BANDO=BI.ID_BANDO AND COD_TIPO_INVESTIMENTO=3 WHERE P.ID_PROGETTO=@ID_PROGETTO

	IF @COD_AIUTO IS NOT NULL BEGIN
		IF @COD_PSR='PSR20072013' BEGIN
			--CREO PIANO INVESTIMENTI VIRTUALE
			DECLARE @INVESTIMENTI_TEMP TABLE (ID_INVESTIMENTO INT,IMPORTO_TOTALE_RENDICONTATO DECIMAL(18,2),COSTO_INVESTIMENTO DECIMAL(18,2))
			INSERT INTO @INVESTIMENTI_TEMP
			SELECT I.ID_INVESTIMENTO,CASE WHEN @ISTRUTTORIA=1 
				THEN dbo.calcoloTotaleImportoRendicontatoAmmessoInvestimento(I.ID_INVESTIMENTO,@ID_DOMANDA_PAGAMENTO)
				ELSE dbo.calcoloTotaleImportoRendicontatoInvestimento(I.ID_INVESTIMENTO,@ID_DOMANDA_PAGAMENTO) END,
				-- /*NON SERVE PERCHE' NON TENGO CONTO DEGLI ALTRI INVESTIMENTI SULLA 112*/ CASE COD_TIPO_INVESTIMENTO WHEN 2 /*PER IL MUTUO SOMMO SOLO L'AMMONTARE*/ THEN ISNULL(COSTO_INVESTIMENTO,0) ELSE ISNULL(COSTO_INVESTIMENTO,0)+ISNULL(SPESE_GENERALI,0) END
				ISNULL(COSTO_INVESTIMENTO,0)+ISNULL(CASE WHEN I.QUOTA_CONTRIBUTO_RICHIESTO>0 THEN I.CONTRIBUTO_RICHIESTO*100/I.QUOTA_CONTRIBUTO_RICHIESTO-I.COSTO_INVESTIMENTO ELSE 0 END,0)
			FROM PROGETTO P INNER JOIN PIANO_INVESTIMENTI I ON P.ID_PROGETTO=I.ID_PROGETTO
			WHERE P.ID_PROG_INTEGRATO=@ID_PROGETTO AND P.ID_PROGETTO!=@ID_PROGETTO AND --SOLO GLI INVESTIMENTI DELLE MISURE CORRELATE CONCORRONO AL PREMIO
				((@ID_VARIANTE IS NULL AND ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND AMMESSO=1 AND ID_VARIANTE IS NULL) OR
				(ID_VARIANTE=@ID_VARIANTE AND ISNULL(COD_VARIAZIONE,'X')!='A')) ORDER BY COD_TIPO_INVESTIMENTO	
	--SELECT * FROM @INVESTIMENTI_TEMP
			SELECT @COEFF_RENDICONTATO=SUM(FINALE_RENDICONTATO),@COEFF_DA_INVESTIMENTI=SUM(FINALE_DA_INVESTIMENTI) FROM (
				SELECT OB.PUNTEGGIO*CASE 
					WHEN SUM(I.IMPORTO_TOTALE_RENDICONTATO)>150000 THEN 1 WHEN SUM(I.IMPORTO_TOTALE_RENDICONTATO)>100000 THEN 0.8
					WHEN SUM(I.IMPORTO_TOTALE_RENDICONTATO)>75000 THEN 0.6 WHEN SUM(I.IMPORTO_TOTALE_RENDICONTATO)>50000 THEN 0.4
					WHEN SUM(I.IMPORTO_TOTALE_RENDICONTATO)>25000 THEN 0.2 WHEN SUM(I.IMPORTO_TOTALE_RENDICONTATO)<25000 AND
					SUM(I.IMPORTO_TOTALE_RENDICONTATO)>0 AND OB.ID_OBIETTIVO IN (1,4) THEN 0.1 ELSE 0 END AS FINALE_RENDICONTATO,
					OB.PUNTEGGIO*CASE 
					WHEN SUM(I.COSTO_INVESTIMENTO)>150000 THEN 1 WHEN SUM(I.COSTO_INVESTIMENTO)>100000 THEN 0.8
					WHEN SUM(I.COSTO_INVESTIMENTO)>75000 THEN 0.6 WHEN SUM(I.COSTO_INVESTIMENTO)>50000 THEN 0.4
					WHEN SUM(I.COSTO_INVESTIMENTO)>25000 THEN 0.2 WHEN SUM(I.COSTO_INVESTIMENTO)<25000 AND
					SUM(I.COSTO_INVESTIMENTO)>0 AND OB.ID_OBIETTIVO IN (1,4) THEN 0.1 ELSE 0 END AS FINALE_DA_INVESTIMENTI
				FROM @INVESTIMENTI_TEMP AS I
				INNER JOIN PRIORITA_X_INVESTIMENTI AS PXI ON I.ID_INVESTIMENTO=PXI.ID_INVESTIMENTO 
				AND ID_PRIORITA IN (102,103,94,28) -- ID DELLE PRIORITA PER IL CALCOLO DEL PREMIO, VARIA A SECONDA DELLE DISPOSIZIONI DI MISURA
				INNER JOIN VALORI_PRIORITA VP ON PXI.ID_VALORE=VP.ID_VALORE
				INNER JOIN zOBBP_PREMIO OB ON VP.ID_VALORE=OB.ID_VALORE_PRIORITA
				GROUP BY OB.ID_VALORE_PRIORITA,OB.PUNTEGGIO,OB.ID_OBIETTIVO) Q1
			IF @COEFF_RENDICONTATO>1 SET @COEFF_RENDICONTATO=1
			IF @COEFF_DA_INVESTIMENTI>1 SET @COEFF_DA_INVESTIMENTI=1
			SET @AMMONTARE_PREMIO_CONTO_CAPITALE=@MAX_AIUTO*ISNULL(@COEFF_RENDICONTATO,0)
			IF @AMMONTARE_PREMIO_CONTO_CAPITALE>@MAX_AIUTO*ISNULL(@COEFF_DA_INVESTIMENTI,0) 
				SET @AMMONTARE_PREMIO_CONTO_CAPITALE=@MAX_AIUTO*ISNULL(@COEFF_DA_INVESTIMENTI,0)		
			IF @AMMONTARE_PREMIO_CONTO_CAPITALE<@MIN_AIUTO SET @AMMONTARE_PREMIO_CONTO_CAPITALE=0
		END
		ELSE IF @COD_PSR='PSR20142020' BEGIN
			-- IL PREMIO CC DEL PSR NOVO NON VARIA A SECONDA DELLA RENDICONTAZIONE
			SELECT @AMMONTARE_PREMIO_CONTO_CAPITALE=dbo.calcoloPremioContoCapitale(@ID_PROGETTO,1,@ID_VARIANTE)		
		END
		-- CONTROLLO CHE IL NUOVO PREMIO NON SUPERI QUELLO AMMESSO IN GRADUATORIA			
		DECLARE @PREMIO_PRECEDENTE DECIMAL(18,2)
		SELECT @PREMIO_PRECEDENTE=dbo.calcoloPremioContoCapitale(@ID_PROGETTO,1,NULL)
		IF @PREMIO_PRECEDENTE<@AMMONTARE_PREMIO_CONTO_CAPITALE SET @AMMONTARE_PREMIO_CONTO_CAPITALE=@PREMIO_PRECEDENTE
	END
	RETURN @AMMONTARE_PREMIO_CONTO_CAPITALE
END
