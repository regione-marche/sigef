CREATE PROCEDURE [dbo].[calcoloStep221_7]
(
@IdProgetto int,
@FASE_ISTRUTTORIA INT =0
)
AS
BEGIN

-- PREMIO perdita reddito <= massimale annuo da bando
-- COLLINA LITORANEA SE IAP 510 ALTRI 150
-- COLLINA INTERNA SE IAP 450 ALTRI 150
-- MONTAGNAINTERNA SE IAP 370 ALTRI 150
-- PRIORITA' 603 ---> IAP
-- PRIORITA' 604 --> ANNO di manutenzione dell`impianto
-- PRIORITA' 605 --> ETTARI
-- ID_DETAGLIO INVESTIMENTO 4502 (bando 203)X COLLINA LITORANEA -- 4942 (bando 233)
-- ID_DETAGLIO INVESTIMENTO 4503 X COLLINA INTERNA -- 4943 (bando 233)
-- ID_DETAGLIO INVESTIMENTO 4504 X MONTAGNA INTERNA -- 4944 (bando 233)
-- CODIFICA INVESTIMENTO 1173 X PERDITA REDDITO

---- MODIFICARE MODIFICARE
---- MI DICONO IL TOTALE / 10 ANNI / ETTARI

DECLARE @loopANNO int,
		@RESULT int,
		@RESULTA int,
		@RESULTB int,
		@RESULTC int,
		@COLLINALITORANEA int,
		@COLLINAINTERNA int,
		@MONTAGNAINTERNA int
			
SET @RESULT = 1 -- PONGO LO STEP IN STATO VERIFICATO


IF (SELECT COUNT(ID_PRIORITA) FROM PRIORITA_X_PROGETTO WHERE ID_PROGETTO = @IdProgetto AND ID_PRIORITA = 603) = 1
BEGIN
	SET @COLLINALITORANEA = 510
	SET @COLLINAINTERNA = 450
	SET @MONTAGNAINTERNA = 370
END
ELSE 
BEGIN
	SET @COLLINALITORANEA = 150
	SET @COLLINAINTERNA = 150
	SET @MONTAGNAINTERNA = 150
END

--- COLLINA LITORANEA)
DECLARE @A INT 

SELECT @A=  COUNT(*) 
FROM (
	SELECT SUM(DISTINCT ISNULL(COSTO_INVESTIMENTO,0)) AS COSTO , VPI.DESCRIZIONE AS dDESCRIZIONE , VPI.CODICE, PXI_HA.VALORE AS SUPERFICIE 
		FROM VPIANO_INVESTIMENTI VPI inner join 
			 PRIORITA_X_INVESTIMENTI PXI ON VPI.ID_INVESTIMENTO = PXI.ID_INVESTIMENTO 
			 INNER JOIN PRIORITA_X_INVESTIMENTI PXI_HA ON VPI.ID_INVESTIMENTO = PXI_HA.ID_INVESTIMENTO AND PXI_HA.ID_PRIORITA = 605
		 WHERE VPI.ID_PROGETTO = @IdProgetto  AND VPI.ID_DETTAGLIO_INVESTIMENTO in
-- inizio modifica per riaperture future  d1 ---  ('4502','4942') 
(SELECT ID_DETTAGLIO_INVESTIMENTO FROM CODIFICA_INVESTIMENTO CI INNER JOIN DETTAGLIO_INVESTIMENTI DI ON 
(CI.ID_CODIFICA_INVESTIMENTO = DI.ID_CODIFICA_INVESTIMENTO) WHERE CI.ID_BANDO = 
(SELECT ID_BANDO FROM PROGETTO WHERE ID_PROGETTO = @IdProgetto) AND DI.COD_DETTAGLIO = 'd1')
-- fine modifica per riaperture future 
		  AND
		 ((VPI.ID_INVESTIMENTO_ORIGINALE IS NULL AND @FASE_ISTRUTTORIA=0 AND ID_VARIANTE IS NULL)OR(VPI.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND @FASE_ISTRUTTORIA =1 AND ID_VARIANTE IS NULL))
		 GROUP BY VPI.DESCRIZIONE , PXI_HA.VALORE,VPI.CODICE ) AS DETT_INV
 GROUP BY CODICE
 HAVING (SUM(COSTO)/10) > (@COLLINALITORANEA * (SUM (SUPERFICIE)/10000)) AND COUNT(*) >0
 
 IF( @A IS NOT NULL OR @A> 0) SET @RESULTA =0  -- NON VA BENE
 ELSE SET @RESULTA =1
  
--- COLLINA INTERNA)
DECLARE @B INT 

SELECT @B=  COUNT(*) 
FROM (
	SELECT SUM(DISTINCT ISNULL(COSTO_INVESTIMENTO,0)) AS COSTO , VPI.DESCRIZIONE AS dDESCRIZIONE , VPI.CODICE, PXI_HA.VALORE AS SUPERFICIE 
		FROM VPIANO_INVESTIMENTI VPI inner join 
			 PRIORITA_X_INVESTIMENTI PXI ON VPI.ID_INVESTIMENTO = PXI.ID_INVESTIMENTO 
			 INNER JOIN PRIORITA_X_INVESTIMENTI PXI_HA ON VPI.ID_INVESTIMENTO = PXI_HA.ID_INVESTIMENTO AND PXI_HA.ID_PRIORITA = 605
		 WHERE VPI.ID_PROGETTO = @IdProgetto  AND VPI.ID_DETTAGLIO_INVESTIMENTO in 	 
-- inizio modifica per riaperture future  d2 ---  ('4503','4943')
(SELECT ID_DETTAGLIO_INVESTIMENTO FROM CODIFICA_INVESTIMENTO CI INNER JOIN DETTAGLIO_INVESTIMENTI DI ON 
(CI.ID_CODIFICA_INVESTIMENTO = DI.ID_CODIFICA_INVESTIMENTO) WHERE CI.ID_BANDO = 
(SELECT ID_BANDO FROM PROGETTO WHERE ID_PROGETTO = @IdProgetto) AND DI.COD_DETTAGLIO = 'd2')
-- fine modifica per riaperture future 
		 AND
		 ((VPI.ID_INVESTIMENTO_ORIGINALE IS NULL AND @FASE_ISTRUTTORIA=0 AND ID_VARIANTE IS NULL)OR(VPI.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND @FASE_ISTRUTTORIA =1 AND ID_VARIANTE IS NULL))
		 GROUP BY VPI.DESCRIZIONE , PXI_HA.VALORE,VPI.CODICE ) AS DETT_INV
 GROUP BY CODICE
 HAVING (SUM(COSTO)/10) > (@COLLINAINTERNA * (SUM (SUPERFICIE)/10000)) AND COUNT(*) >0
 
 IF( @B IS NOT NULL OR @B> 0) SET @RESULTB =0
ELSE SET @RESULTB =1

--- MONTAGNA INTERNA) -- FATTA DA SILVIA -- BASE DA CUI PARTIRE
DECLARE @C INT 

SELECT @C=  COUNT(*) 
FROM (
	SELECT SUM(DISTINCT ISNULL(COSTO_INVESTIMENTO,0)) AS COSTO , VPI.DESCRIZIONE AS dDESCRIZIONE , VPI.CODICE, PXI_HA.VALORE AS SUPERFICIE 
		FROM VPIANO_INVESTIMENTI VPI inner join 
			 PRIORITA_X_INVESTIMENTI PXI ON VPI.ID_INVESTIMENTO = PXI.ID_INVESTIMENTO 
			 INNER JOIN PRIORITA_X_INVESTIMENTI PXI_HA ON VPI.ID_INVESTIMENTO = PXI_HA.ID_INVESTIMENTO AND PXI_HA.ID_PRIORITA = 605 AND
			 ((VPI.ID_INVESTIMENTO_ORIGINALE IS NULL AND @FASE_ISTRUTTORIA=0 AND ID_VARIANTE IS NULL)OR(VPI.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND @FASE_ISTRUTTORIA =1 AND ID_VARIANTE IS NULL))
		 WHERE VPI.ID_PROGETTO = @IdProgetto  AND VPI.ID_DETTAGLIO_INVESTIMENTO in 
		 
		 -- inizio modifica per riaperture future  d3 ---  ('4504','4944')
(SELECT ID_DETTAGLIO_INVESTIMENTO FROM CODIFICA_INVESTIMENTO CI INNER JOIN DETTAGLIO_INVESTIMENTI DI ON 
(CI.ID_CODIFICA_INVESTIMENTO = DI.ID_CODIFICA_INVESTIMENTO) WHERE CI.ID_BANDO = 
(SELECT ID_BANDO FROM PROGETTO WHERE ID_PROGETTO = @IdProgetto) AND DI.COD_DETTAGLIO = 'd3')
-- fine modifica per riaperture future 
		 AND
		 ((VPI.ID_INVESTIMENTO_ORIGINALE IS NULL AND @FASE_ISTRUTTORIA=0 AND ID_VARIANTE IS NULL)OR(VPI.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND @FASE_ISTRUTTORIA =1 AND ID_VARIANTE IS NULL))
		 GROUP BY VPI.DESCRIZIONE , PXI_HA.VALORE,VPI.CODICE ) AS DETT_INV
 GROUP BY CODICE
 HAVING (SUM(COSTO)/10) > (@MONTAGNAINTERNA * (SUM (SUPERFICIE)/10000)) AND COUNT(*) >0
 
 IF( @C IS NOT NULL OR @C> 0) SET @RESULTC =0
 ELSE SET @RESULTC =1
 
IF(@RESULTA =0 OR @RESULTB =0 OR @RESULTC =0)
	SET @RESULT =0

SELECT @RESULT AS RESULT
END
