CREATE PROCEDURE [dbo].[calcoloStep221_8]
(
@IdProgetto int,
@FASE_ISTRUTTORIA INT =0
)
AS
BEGIN
	
-- Superficie (m2) indicata per fascia altimetrica coerenti 
-- con localizzazione impianto da piano colturale.
-- PRIORITA' 603 ---> IAP
-- PRIORITA' 604 --> ANNO di manutenzione dell`impianto
-- PRIORITA' 605 --> ETTARI
-- ID_DETAGLIO INVESTIMENTO 4502 X COLLINA LITORANEA -- d1
-- ID_DETAGLIO INVESTIMENTO 4503 X COLLINA INTERNA   -- d2
-- ID_DETAGLIO INVESTIMENTO 4504 X MONTAGNA INTERNA  -- d3
-- CODIFICA INVESTIMENTO 1173 X PERDITA REDDITO 
--FASCE ALTIMETRICHE CODIFICA - 1	montagna interna
--FASCE ALTIMETRICHE CODIFICA - 2	montagna litoranea
--FASCE ALTIMETRICHE CODIFICA - 3	collina interna
--FASCE ALTIMETRICHE CODIFICA - 4	collina litoranea
--FASCE ALTIMETRICHE CODIFICA - 5	pianura


DECLARE @RESULT int,
		@COLLINALITORANEA int,@COLLINAINTERNA int,@MONTAGNAINTERNA int, 
		@M2_COLLINA_LITORANEA DECIMAL(18,2), @M2_COLLINA_INTERNA DECIMAL(18,2),@M2_MONTAGNA_INTERNA DECIMAL(18,2),
		@M2_DETTAGLIO_COLLINA_LITORANEA DECIMAL(18,2), @M2_DETTAGLIO_COLLINA_INTERNA DECIMAL(18,2),@M2_DETTAGLIO_MONTAGNA_INTERNA DECIMAL(18,2)
SET @RESULT = 1 -- PONGO LO STEP IN STATO VERIFICATO


--- COLLINA LITORANEA VALORE 4)
--- Qui vedo quanto metri ha messo nel piano colturale
SET @M2_COLLINA_LITORANEA =(SELECT SUM(PC.SUPERFICIE_COLTURA) SUPERFICIE_COLTURA
							FROM PROGETTO PR inner join IMPRESA IM ON IM.ID_IMPRESA  = PR.ID_IMPRESA inner join
								(SELECT MAX (id_rif) ID_RIF, ID_IMPRESA FROM PIANO_COLTURALE_STORICO GROUP BY ID_IMPRESA) AS PIANO_STO ON PIANO_STO.ID_IMPRESA= IM.ID_IMPRESA INNER JOIN 
								PIANO_COLTURALE_DETTAGLIO PC ON PC.ID_RIF =PIANO_STO.ID_RIF INNER JOIN 
								CATASTO_TERRENI CA ON CA.ID_CATASTO = PC.ID_CATASTO INNER JOIN 
								COMUNI CO ON CA.ID_COMUNE = CO.ID_COMUNE INNER JOIN 
								COMUNI_X_ZONA_ALTIMETRICA CZN ON CZN.CODICE_COMUNE = CO.ISTAT_LUNGO 
							WHERE PR.ID_PROGETTO = @IdProgetto AND CZN.CODICE_ZONA_ALTIMETRICA= '4' AND PC.DATA_FINE_VALIDITA IS NULL)
---Qui vedo quanto metri ha messo nell’investimento
SET @M2_DETTAGLIO_COLLINA_LITORANEA= (SELECT MIN(VALORE) FROM PIANO_INVESTIMENTI I  INNER JOIN 
										DETTAGLIO_INVESTIMENTI D ON I.ID_DETTAGLIO_INVESTIMENTO = D.ID_DETTAGLIO_INVESTIMENTO INNER JOIN 
										PRIORITA_X_INVESTIMENTI PXI ON I.ID_INVESTIMENTO = PXI.ID_INVESTIMENTO AND ID_PRIORITA= 605
									WHERE 
									I.COD_TIPO_INVESTIMENTO = 1 AND 
									(ID_PROGETTO=@IdProgetto) AND
									((I.ID_INVESTIMENTO_ORIGINALE IS NULL AND @FASE_ISTRUTTORIA=0 AND ID_VARIANTE IS NULL)OR(I.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND @FASE_ISTRUTTORIA =1 AND ID_VARIANTE IS NULL)) AND
									D.COD_DETTAGLIO = 'd1')



--- IF(@M2_COLLINA_LITORANEA != @M2_DETTAGLIO_COLLINA_LITORANEA ) SET @RESULT=0
IF(@M2_COLLINA_LITORANEA < @M2_DETTAGLIO_COLLINA_LITORANEA ) SET @RESULT=0


ELSE 
BEGIN -- COLLINA INTERNA VALORE 3)
	SET @M2_COLLINA_INTERNA =(SELECT SUM(PC.SUPERFICIE_COLTURA) SUPERFICIE_COLTURA
								FROM PROGETTO PR inner join IMPRESA IM ON IM.ID_IMPRESA  = PR.ID_IMPRESA inner join
									(SELECT MAX (id_rif) ID_RIF, ID_IMPRESA FROM PIANO_COLTURALE_STORICO GROUP BY ID_IMPRESA) AS PIANO_STO ON PIANO_STO.ID_IMPRESA= IM.ID_IMPRESA INNER JOIN 
									PIANO_COLTURALE_DETTAGLIO PC ON PC.ID_RIF =PIANO_STO.ID_RIF INNER JOIN 
									CATASTO_TERRENI CA ON CA.ID_CATASTO = PC.ID_CATASTO INNER JOIN 
									COMUNI CO ON CA.ID_COMUNE = CO.ID_COMUNE INNER JOIN 
									COMUNI_X_ZONA_ALTIMETRICA CZN ON CZN.CODICE_COMUNE = CO.ISTAT_LUNGO 
								WHERE PR.ID_PROGETTO = @IdProgetto AND CZN.CODICE_ZONA_ALTIMETRICA= '3' AND PC.DATA_FINE_VALIDITA IS NULL)
	SET @M2_DETTAGLIO_COLLINA_INTERNA= (SELECT MIN(VALORE) FROM PIANO_INVESTIMENTI I  INNER JOIN 
											DETTAGLIO_INVESTIMENTI D ON I.ID_DETTAGLIO_INVESTIMENTO = D.ID_DETTAGLIO_INVESTIMENTO INNER JOIN 
											PRIORITA_X_INVESTIMENTI PXI ON I.ID_INVESTIMENTO = PXI.ID_INVESTIMENTO AND ID_PRIORITA= 605
										WHERE 
										I.COD_TIPO_INVESTIMENTO = 1 AND
										(ID_PROGETTO=@IdProgetto) AND 
										((I.ID_INVESTIMENTO_ORIGINALE IS NULL AND @FASE_ISTRUTTORIA=0 AND ID_VARIANTE IS NULL)OR(I.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND @FASE_ISTRUTTORIA =1 AND ID_VARIANTE IS NULL)) AND
										D.COD_DETTAGLIO = 'd2')
										
---------- IF(@M2_COLLINA_INTERNA != @M2_DETTAGLIO_COLLINA_INTERNA) SET @RESULT=0
	 IF(@M2_COLLINA_INTERNA < @M2_DETTAGLIO_COLLINA_INTERNA) SET @RESULT=0

	 ELSE 
	 BEGIN 	--- MONTAGNA INTERNA VALORE 1)
		 SET @M2_MONTAGNA_INTERNA =(SELECT SUM(PC.SUPERFICIE_COLTURA) SUPERFICIE_COLTURA
									FROM PROGETTO PR inner join IMPRESA IM ON IM.ID_IMPRESA  = PR.ID_IMPRESA inner join
										(SELECT MAX (id_rif) ID_RIF, ID_IMPRESA FROM PIANO_COLTURALE_STORICO GROUP BY ID_IMPRESA) AS PIANO_STO ON PIANO_STO.ID_IMPRESA= IM.ID_IMPRESA INNER JOIN 
										PIANO_COLTURALE_DETTAGLIO PC ON PC.ID_RIF =PIANO_STO.ID_RIF INNER JOIN 
										CATASTO_TERRENI CA ON CA.ID_CATASTO = PC.ID_CATASTO INNER JOIN 
										COMUNI CO ON CA.ID_COMUNE = CO.ID_COMUNE INNER JOIN 
										COMUNI_X_ZONA_ALTIMETRICA CZN ON CZN.CODICE_COMUNE = CO.ISTAT_LUNGO 
									WHERE PR.ID_PROGETTO = @IdProgetto AND CZN.CODICE_ZONA_ALTIMETRICA= '1' AND PC.DATA_FINE_VALIDITA IS NULL)

		SET @M2_DETTAGLIO_MONTAGNA_INTERNA= (SELECT MIN(VALORE) FROM PIANO_INVESTIMENTI I  INNER JOIN 
												DETTAGLIO_INVESTIMENTI D ON I.ID_DETTAGLIO_INVESTIMENTO = D.ID_DETTAGLIO_INVESTIMENTO INNER JOIN 
												PRIORITA_X_INVESTIMENTI PXI ON I.ID_INVESTIMENTO = PXI.ID_INVESTIMENTO AND ID_PRIORITA= 605
											WHERE
											I.COD_TIPO_INVESTIMENTO = 1 AND
											(ID_PROGETTO=@IdProgetto) AND
											((I.ID_INVESTIMENTO_ORIGINALE IS NULL AND @FASE_ISTRUTTORIA=0 AND ID_VARIANTE IS NULL)OR(I.ID_INVESTIMENTO_ORIGINALE IS NOT NULL AND @FASE_ISTRUTTORIA =1 AND ID_VARIANTE IS NULL)) AND
											D.COD_DETTAGLIO = 'd3')

---------- IF(@M2_MONTAGNA_INTERNA != @M2_DETTAGLIO_MONTAGNA_INTERNA) SET @RESULT=0
	 IF(@M2_MONTAGNA_INTERNA < @M2_DETTAGLIO_MONTAGNA_INTERNA) SET @RESULT=0

	 END
END
SELECT @RESULT
END
