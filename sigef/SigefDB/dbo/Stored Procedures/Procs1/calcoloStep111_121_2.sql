CREATE PROCEDURE [dbo].[calcoloStep111_121_2]
(
@IdProgetto int,
@FASE_ISTRUTTORIA INT =0
)
AS
BEGIN

	-- Per le aziende che impiegano fino a 3 ULA, il massimale stabilito in termini di contributo pubblico è di € 1.000.000 per beneficiario 
	-- per l’intero periodo di programmazione 2007-2013, per tutte le misure del primo asse e del terzo asse del presente Programma.
	-- Per le aziende che impiegano oltre 3 ULA tale massimale è elevato di 50.000 € per ogni ULA aggiuntiva e 
	-- fino ad un massimo di € 2.000.000.


--CONTROLLO ULA  PROGETTO

DECLARE @OreTotali decimal(10,2), @OreTotaliColture decimal(10,2),
		@OreTotaliZootecnia decimal(10,2), @OreTotaliAttivita decimal(10,2),
		@ULA DECIMAL (10,4), @ID_PROGETTO_121 INT, @ID_IMPRESA INT ,
		@result int


SET @RESULT =1 --PONGO LO STEP VERIFICATO
  SELECT @ID_IMPRESA = ID_IMPRESA FROM PROGETTO WHERE ID_PROGETTO = @IdProgetto 
-- TROVO IL PROGETTO  121 
SET @ID_PROGETTO_121 = (SELECT TOP (1) ID_PROGETTO FROM VPROGETTO 
						WHERE ID_BANDO IN (18,90) AND COD_STATO NOT IN ( 'n', 'r' ) AND ID_IMPRESA = @ID_IMPRESA )
 
SET @OreTotaliColture =(SELECT ISNULL(SUM(ISNULL((SAU/10000),0) * ISNULL(ORE_UNITARIE,0)),0) 
						FROM PLV_IMPRESA WHERE ID_PROGETTO = @ID_PROGETTO_121 AND PREVISIONALE = 1 AND COD_PRODOTTO IS NOT NULL)
SET @OreTotaliZootecnia=(SELECT ISNULL(SUM(ISNULL(SAU,0) * ISNULL(ORE_UNITARIE,0)),0) 
						   FROM PLV_IMPRESA WHERE ID_PROGETTO = @ID_PROGETTO_121 AND PREVISIONALE =1 AND ID_CLASSE_ALLEVAMENTO IS NOT NULL)
SET @OreTotaliAttivita=(SELECT ISNULL(SUM(ISNULL(SAU,0) * ISNULL(ORE_UNITARIE,0)),0) 
						 FROM PLV_IMPRESA WHERE ID_PROGETTO = @ID_PROGETTO_121 AND PREVISIONALE = 1 AND ID_ATTIVITA_CONNESSA IS NOT NULL)
SET @OreTotali = ISNULL(@OreTotaliColture,0) + ISNULL(@OreTotaliZootecnia,0) + ISNULL(@OreTotaliAttivita,0)

-- Controllo della maggiorazione del 20%
IF ((@OreTotali * 0.2) > 400) SET @OreTotali = @OreTotali + 400
ELSE SET @OreTotali = @OreTotali + (@OreTotali * 0.2)

SET  @ULA = (@OreTotali/1800)  --TOTALE ULA PLV  POST  ASSOCIATA AL PROGETTO
 -- CONTRIBUTO RICHIESTO AMMISSIBILE PER LE DOMANDE AMMISSIBILI DELL'IMPRESA (il contriburo va calcolato solo per le domande del PSR e non per i bandi PABS )

DECLARE @CONTRIBUTO_RICHIESTO DECIMAL(18,2),@CONTRIBUTO_RICHIESTO_TOT DECIMAL(18,2),
		@ID_PROG INT , @STATO CHAR(1), @ID_BANDO INT, @COD_PROGRAMMA VARCHAR(20)
		
DECLARE PROGETTI CURSOR FOR
	SELECT  ID_PROGETTO, STATO,  (CONTRIBUTO + PREMIO)  AS CONTRIBUTO 
	FROM ( SELECT V.ID_VARIANTE, ISNULL(SP.ID_PROG_INTEGRATO,SP.ID_PROGETTO) AS ID_PROGETTO,STATO, SP.ID_BANDO, 
				 dbo.calcoloContributoTotaleProgetto(ISNULL(SP.ID_PROG_INTEGRATO,SP.ID_PROGETTO), @FASE_ISTRUTTORIA , v.ID_VARIANTE) AS CONTRIBUTO ,
				 dbo.calcoloPremioContoCapitale(ISNULL(SP.ID_PROG_INTEGRATO,SP.ID_PROGETTO), @FASE_ISTRUTTORIA , v.ID_VARIANTE)  as premio
			FROM VPROGETTO SP LEFT JOIN 
				(SELECT TOP(1) ID_VARIANTE , ID_PROGETTO FROM VARIANTI WHERE APPROVATA = 1 ORDER BY ID_VARIANTE DESC) AS V ON V.ID_PROGETTO = SP.ID_PROGETTO
			WHERE SP.ID_PROGETTO IN (SELECT ID_PROGETTO FROM VPROGETTO WHERE ID_IMPRESA= @ID_IMPRESA AND FLAG_PREADESIONE =0  AND COD_STATO NOT  IN ('P','Q','B', 'R','N'))  
		GROUP BY SP.ID_PROGETTO , STATO, SP.ID_BANDO, SP.ID_PROG_INTEGRATO, V.ID_VARIANTE) AS PROG
	GROUP BY ID_PROGETTO, STATO , CONTRIBUTO, PREMIO 

set @CONTRIBUTO_RICHIESTO_TOT =0

OPEN PROGETTI
FETCH NEXT FROM PROGETTI 
INTO  @ID_PROG , @STATO , @CONTRIBUTO_RICHIESTO 
WHILE @@FETCH_STATUS = 0
BEGIN
	SET @COD_PROGRAMMA =( SELECT TOP(1) COD_PSR FROM vBANDO_PROGRAMMAZIONE  
					WHERE ID_BANDO = ( SELECT ID_BANDO FROM progetto where id_progetto = @ID_PROG ) AND MISURA_PREVALENTE = 1 )
	IF( @COD_PROGRAMMA LIKE 'PSR%' )SET @CONTRIBUTO_RICHIESTO_TOT  = ISNULL(@CONTRIBUTO_RICHIESTO_TOT,0) + ISNULL(@CONTRIBUTO_RICHIESTO,0)
	FETCH NEXT FROM PROGETTI 
	INTO  @ID_PROG , @STATO,@CONTRIBUTO_RICHIESTO 
END
CLOSE PROGETTI
DEALLOCATE PROGETTI 

IF(@ULA<=3)	BEGIN  IF(@CONTRIBUTO_RICHIESTO_TOT > 1000000 ) SET @RESULT =0 END
ELSE 
	BEGIN
	 SET @ULA = @ULA -3
		IF ((@CONTRIBUTO_RICHIESTO_TOT > (1000000 + (@ULA)*50000)) or (@CONTRIBUTO_RICHIESTO_TOT >  2000000 ))
	 	 SET @RESULT =0
	END
SELECT @RESULT  AS RESULT
END
