CREATE PROCEDURE [dbo].[SpDeterminaImportoErogabileDomandaPagamento]
(
	@ID_DOMANDA_PAGAMENTO INT,	
	@ESITO BIT,
	@OPERATORE VARCHAR(16)
)
AS
	
	-- DETERMINA L'IMPORTO EROGABILE DELLA DOMANDA DI PAGAMENTO DETRAENDO DAGLI IMPORTI DEI PAGAMENTI AMMESSI 
	-- L'AMMONTARE DELLE SANZIONI, MEMORIZZA IN DOMANDA_DI_PAGAMENTO_ESPORTAZIONE

	/*DECLARE	@ID_DOMANDA_PAGAMENTO INT, @ESITO BIT, @OPERATORE VARCHAR(16)
	SET @ID_DOMANDA_PAGAMENTO = 98
	SET @ESITO = 1
	SET @OPERATORE ='GBBSMN91A05A271J'*/
	
	DECLARE @ID_PROGETTO INT,@COD_TIPO CHAR(3),	@STRUM_FIN INT = 0

	SELECT @ID_PROGETTO = DOM.ID_PROGETTO, 
		@COD_TIPO = DOM.COD_TIPO,
		@STRUM_FIN = COUNT(BC.ID) 
	FROM DOMANDA_DI_PAGAMENTO DOM 
		JOIN PROGETTO PROG 
			ON PROG.ID_PROGETTO = DOM.ID_PROGETTO
		LEFT JOIN VBANDO_CONFIG BC 
			ON PROG.ID_BANDO = BC.ID_BANDO AND BC.COD_TIPO = 'TPAPPALTO'
				AND BC.ATTIVO = 1 AND BC.VALORE_DESCRIZIONE = 'Strumenti finanziari'
	WHERE 1 = 1
		AND DOM.ID_DOMANDA_PAGAMENTO = @ID_DOMANDA_PAGAMENTO
	GROUP BY DOM.ID_PROGETTO, DOM.COD_TIPO

	-- SIGEF: NON ESSENDOCI IL CREA_BARCODE, NON VENGONO MEMORIZZATI GLI IMPORTI IN DOMANDA_DI_PAGAMENTO_ESPORTAZIONE, CONTROLLO CHE CI SIANO
	IF (SELECT COUNT(*) FROM DOMANDA_DI_PAGAMENTO_ESPORTAZIONE WHERE ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO)=0 BEGIN
		DECLARE @ID_PROGETTO_CORRELATO INT
		DECLARE PROGETTI CURSOR FOR SELECT ID_PROGETTO FROM PROGETTO WHERE ISNULL(ID_PROG_INTEGRATO,ID_PROGETTO)=@ID_PROGETTO
		OPEN PROGETTI
		FETCH NEXT FROM PROGETTI INTO @ID_PROGETTO_CORRELATO
		WHILE @@FETCH_STATUS=0 BEGIN			
			INSERT INTO DOMANDA_DI_PAGAMENTO_ESPORTAZIONE (ID_DOMANDA_PAGAMENTO,ID_PROGETTO,BARCODE,MISURA_PREVALENTE,FLAG_LIQUIDATO) 
			VALUES (@ID_DOMANDA_PAGAMENTO,@ID_PROGETTO_CORRELATO,CAST(@ID_DOMANDA_PAGAMENTO AS VARCHAR(10))+
				CAST(@ID_PROGETTO_CORRELATO AS VARCHAR(10)),CASE WHEN @ID_PROGETTO_CORRELATO=@ID_PROGETTO THEN 1 ELSE 0 END,0)			
			FETCH NEXT FROM PROGETTI INTO @ID_PROGETTO_CORRELATO
		END
		CLOSE PROGETTI
		DEALLOCATE PROGETTI
	END
	
	IF @ESITO=1 BEGIN -- CONTROLLO CHE GLI MIPORTI RICHIESTI SIANO STATI ISTRUITI
		IF (@COD_TIPO='ANT' AND (SELECT COUNT(*) FROM ANTICIPI_RICHIESTI WHERE ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO 
				AND AMMESSO IS NULL)>0) OR
			(@COD_TIPO!='ANT' AND (SELECT COUNT(*) FROM PAGAMENTI_RICHIESTI WHERE ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO 
				AND CONTRIBUTO_RICHIESTO IS NOT NULL AND CONTRIBUTO_AMMESSO IS NULL)>0) BEGIN
			RAISERROR('Almeno uno degli importi richiesti in domanda non risulta istruito, impossibile continuare.',13,1)
			RETURN
		END
	END
	
	DECLARE @ID_PROGRAMMAZIONE INT,@MISURA_PREVALENTE BIT,@CONTRIBUTO_RICHIESTO DECIMAL(18,2),@CONTRIBUTO_AMMISSIBILE DECIMAL(18,2),
		@TOTALE_SANZIONE DECIMAL(18,2),@ANTICIPO_DA_RECUPERARE DECIMAL(18,5),
		--VARIABILI X RECUPERO ANTICIPO PARZIALE
		@AMMONTARE_ANTICIPO DECIMAL(18,5), @ANTICIPO_RECUPERATO DECIMAL(18,5), @IMPORTO_MAX DECIMAL(18,5),
		@QUOTA_MAX DECIMAL(18,5), @IMPORTO_PARZIALE DECIMAL(18,5), @ANTICIPO_MODIFICATO BIT, 
		@ANTICIPO_RECUPERATO_DOMANDA DECIMAL(18,2)
	
	--SUDDIVIDO PER MISURA
	DECLARE PROGETTI_CORRELATI CURSOR FOR		
		SELECT P.ID_PROGETTO,B.ID_PROGRAMMAZIONE,MISURA_PREVALENTE FROM DOMANDA_DI_PAGAMENTO_ESPORTAZIONE D 
		INNER JOIN PROGETTO P ON D.ID_PROGETTO=P.ID_PROGETTO INNER JOIN BANDO B ON P.ID_BANDO=B.ID_BANDO
		WHERE ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO
	
	OPEN PROGETTI_CORRELATI
	FETCH NEXT FROM PROGETTI_CORRELATI INTO @ID_PROGETTO,@ID_PROGRAMMAZIONE,@MISURA_PREVALENTE
	WHILE @@FETCH_STATUS=0 BEGIN
		SET @CONTRIBUTO_RICHIESTO=NULL
		SET @CONTRIBUTO_AMMISSIBILE=NULL
		--CALCOLO L'IMPORTO AMMESSO, SE NULLO NON ESEGUO CONTROLLI
		IF @COD_TIPO='ANT' 
			SELECT @CONTRIBUTO_RICHIESTO=CONTRIBUTO_RICHIESTO,@CONTRIBUTO_AMMISSIBILE=CONTRIBUTO_AMMESSO
			FROM ANTICIPI_RICHIESTI A INNER JOIN DOMANDA_DI_PAGAMENTO D ON A.ID_DOMANDA_PAGAMENTO=D.ID_DOMANDA_PAGAMENTO
			INNER JOIN PROGETTO P ON A.ID_BANDO=P.ID_BANDO
			WHERE A.ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO AND P.ID_PROGETTO=@ID_PROGETTO
		ELSE 
			BEGIN
				IF @STRUM_FIN = 0
					SELECT @CONTRIBUTO_RICHIESTO=SUM(PR.CONTRIBUTO_RICHIESTO),
						@CONTRIBUTO_AMMISSIBILE=SUM(PR.CONTRIBUTO_AMMESSO)
					FROM PAGAMENTI_RICHIESTI PR 
						JOIN PIANO_INVESTIMENTI I ON PR.ID_INVESTIMENTO=I.ID_INVESTIMENTO
					WHERE PR.ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO 
						AND I.ID_PROGETTO=@ID_PROGETTO	
				ELSE
					SELECT @CONTRIBUTO_RICHIESTO=SUM(PR.IMPORTO_RICHIESTO),
						@CONTRIBUTO_AMMISSIBILE=SUM(PR.IMPORTO_AMMESSO)
					FROM PAGAMENTI_RICHIESTI_FEM PR 
						JOIN PIANO_INVESTIMENTI I ON PR.ID_INVESTIMENTO=I.ID_INVESTIMENTO
					WHERE PR.ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO 
						AND I.ID_PROGETTO=@ID_PROGETTO	
			END		
		
		-- PREMIO CONTO CAPITALE (SOLO A SALDO)
		IF @COD_TIPO='SLD' AND @MISURA_PREVALENTE=1 BEGIN
			SET @CONTRIBUTO_RICHIESTO=ISNULL(@CONTRIBUTO_RICHIESTO,0)+ISNULL(dbo.calcoloPremioContoCapitaleSaldo(@ID_DOMANDA_PAGAMENTO,0),0)
			SET @CONTRIBUTO_AMMISSIBILE=ISNULL(@CONTRIBUTO_AMMISSIBILE,0)+ISNULL(dbo.calcoloPremioContoCapitaleSaldo(@ID_DOMANDA_PAGAMENTO,1),0)
		END
		
		IF @CONTRIBUTO_RICHIESTO IS NOT NULL BEGIN
			----CALCOLO LE SANZIONI SOLO SE LA DOMANDA E' IN CORSO DI APPROVAZIONE
			--IF @ESITO=1 BEGIN
				--TROVO LE SANZIONI ATTIVATE PER SINGOLA MISURA
				DECLARE @TITOLO VARCHAR(255),@QUERY_SQL NVARCHAR(100),@ESITO_QUERY INT,@LIVELLO CHAR(1)
				DECLARE SANZIONI_MISURA CURSOR FOR
					SELECT TITOLO,QUERY_SQL,LIVELLO FROM zPROGRAMMAZIONE_SANZIONI S 
					INNER JOIN TIPO_SANZIONI T ON S.COD_SANZIONE=T.COD_TIPO
					WHERE S.ID_PROGRAMMAZIONE=@ID_PROGRAMMAZIONE AND S.ATTIVA=1 AND AUTOMATICO=1
					UNION
					SELECT TITOLO,QUERY_SQL,LIVELLO FROM zPROGRAMMAZIONE P 
					INNER JOIN zPROGRAMMAZIONE_SANZIONI S ON P.ID_PADRE=S.ID_PROGRAMMAZIONE
					INNER JOIN TIPO_SANZIONI T ON S.COD_SANZIONE=T.COD_TIPO
					WHERE P.ID=@ID_PROGRAMMAZIONE AND S.ATTIVA=1 AND AUTOMATICO=1
				OPEN SANZIONI_MISURA
				FETCH NEXT FROM SANZIONI_MISURA INTO @TITOLO,@QUERY_SQL,@LIVELLO
				WHILE @@FETCH_STATUS=0 BEGIN
				    -- CALCOLO LE SANZIONI A LIVELLO DI DOMANDA, QUELLE NON AUTOMATICHE LE INTENDO GIA' CALCOLATE
					IF @LIVELLO='D' BEGIN
						IF(@QUERY_SQL IS NULL) BEGIN 
							SET @TITOLO='ERRORE NEL CALCOLO DELLA SANZIONE: '+ @TITOLO +'<BR />MESSAGGIO: QUERY NON VALIDA. IMPOSSIBILE CONTINUARE.'
							RAISERROR(@TITOLO,13,1)		
							RETURN
						END	
						
						-- PER GLI ANTICIPI PRESENTATI DAL 2015 IN POI CALCOLO SOLO LA SANZIONE ART.63
						IF @COD_TIPO='ANT' AND @TITOLO!='Sanzione amministrativa art. 63 Reg UE 809/2014' BEGIN								
							FETCH NEXT FROM SANZIONI_MISURA INTO @TITOLO,@QUERY_SQL,@LIVELLO
							CONTINUE
						END
						EXEC @ESITO_QUERY=sp_executesql @QUERY_SQL,N'@ID_DOMANDA_PAGAMENTO INT,@ID_PROGETTO INT,@OPERATORE VARCHAR(16)',
							@ID_DOMANDA_PAGAMENTO,@ID_PROGETTO,@OPERATORE
						IF @ESITO_QUERY!=0 BEGIN
							IF(@ESITO_QUERY=1)
								SET @TITOLO='ERRORE NEL CALCOLO DELLA SANZIONE: '+ @TITOLO
									+'<BR />MESSAGGIO: ALMENO UNO DEGLI IMPORTI RICHIESTI NON RISULTA AMMESSO. IMPOSSIBILE CONTINUARE.'
							ELSE IF @ESITO_QUERY>1 
								SET @TITOLO='ERRORE NEL CALCOLO DELLA SANZIONE: '+@TITOLO
									+'<BR />MESSAGGIO: ERRORE NON SPECIFICATO. IMPOSSIBILE CONTINUARE.'
							RAISERROR(@TITOLO,13,1)						
							RETURN
						END					
					END
					FETCH NEXT FROM SANZIONI_MISURA INTO @TITOLO,@QUERY_SQL,@LIVELLO
				END
				CLOSE SANZIONI_MISURA
				DEALLOCATE SANZIONI_MISURA
				--TOTALE SANZIONE DI MISURA
				SELECT @TOTALE_SANZIONE=ISNULL(SUM(AMMONTARE),0) FROM SANZIONI WHERE ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO AND 
					ID_PROGETTO=@ID_PROGETTO
			--END
			
			SET @ANTICIPO_DA_RECUPERARE=0
			IF @COD_TIPO!='ANT' BEGIN
				--CALCOLO IL RECUPERO DELL'ANTICIPO
				SELECT @AMMONTARE_ANTICIPO=SUM(CASE WHEN D.COD_TIPO='ANT' THEN IMPORTO_AMMESSO ELSE 0 END),
					@ANTICIPO_RECUPERATO=SUM(IMPORTO_RECUPERO_ANTICIPO)
				FROM DOMANDA_DI_PAGAMENTO_ESPORTAZIONE E 
				INNER JOIN DOMANDA_DI_PAGAMENTO D ON E.ID_DOMANDA_PAGAMENTO=D.ID_DOMANDA_PAGAMENTO
				WHERE E.ID_PROGETTO=@ID_PROGETTO AND E.ID_DOMANDA_PAGAMENTO<@ID_DOMANDA_PAGAMENTO AND APPROVATA=1 AND ANNULLATA=0
							
				IF @AMMONTARE_ANTICIPO>0 BEGIN
					SET @ANTICIPO_DA_RECUPERARE=@AMMONTARE_ANTICIPO-ISNULL(@ANTICIPO_RECUPERATO,0) -- SOTTRAGGO IL RECUPERATO
					IF @ANTICIPO_DA_RECUPERARE<0 SET @ANTICIPO_DA_RECUPERARE=0
					
					IF @ANTICIPO_DA_RECUPERARE>0 AND @COD_TIPO='SAL' BEGIN 
						-- SE HO GIA' USATO LA FUNZIONE DI MODIFICA DEL RECUPERO ANTICIPO NON LO SOVRASCRIVO
						SELECT @ANTICIPO_MODIFICATO = CASE 
								WHEN E.IMPORTO_RECUPERO_ANTICIPO IS NOT NULL AND E.IMPORTO_RECUPERO_ANTICIPO > 0 THEN 1
								ELSE 0
							END, 
							@ANTICIPO_RECUPERATO_DOMANDA = ISNULL(E.IMPORTO_RECUPERO_ANTICIPO, 0.0)
						FROM DOMANDA_DI_PAGAMENTO_ESPORTAZIONE E
							JOIN DOMANDA_DI_PAGAMENTO DOM ON E.ID_DOMANDA_PAGAMENTO = DOM.ID_DOMANDA_PAGAMENTO
						WHERE DOM.ID_DOMANDA_PAGAMENTO = @ID_DOMANDA_PAGAMENTO

						IF @ANTICIPO_MODIFICATO = 0 BEGIN
							-- RECUPERO A SAL SOLO SE PROFILATO, TOTALE O PARZIALE, NON CONTO IL MINIMO NON HA SENSO
							SELECT @IMPORTO_MAX=ISNULL(IMPORTO_MAX,0),@QUOTA_MAX=ISNULL(QUOTA_MAX,0) FROM PROGETTO P
							INNER JOIN BANDO_TIPO_INVESTIMENTI B ON P.ID_BANDO=B.ID_BANDO AND COD_TIPO_INVESTIMENTO=8 WHERE ID_PROGETTO=@ID_PROGETTO			
							IF @@ROWCOUNT>0 BEGIN					
								IF (@IMPORTO_MAX>0 AND @ANTICIPO_DA_RECUPERARE>@IMPORTO_MAX) SET @ANTICIPO_DA_RECUPERARE=@IMPORTO_MAX
								SET @IMPORTO_PARZIALE=@AMMONTARE_ANTICIPO*@QUOTA_MAX/100 -- TRADUCO LA % IN IMPORTO
								IF @ANTICIPO_DA_RECUPERARE>@IMPORTO_PARZIALE SET @ANTICIPO_DA_RECUPERARE=@IMPORTO_PARZIALE						
							END
							ELSE 
								SET @ANTICIPO_DA_RECUPERARE=0
						END
						ELSE 
							SET @ANTICIPO_DA_RECUPERARE=@ANTICIPO_RECUPERATO_DOMANDA
					END
				END
			END
			
			-- TOTALE AMMESSO DI MISURA
			DECLARE @CONTRIBUTO_NETTO_FINALE DECIMAL(18,2)
			DECLARE @FLESSIBILITA DECIMAL (18, 2)
			
			-- IMPORTO DA FLESSIBILITA' 10% 
			SELECT @FLESSIBILITA = ISNULL(SUM(CONTRIBUTO_DISAVANZO_COSTI_AMMESSI),0) FROM
			DOMANDA_DI_PAGAMENTO D INNER JOIN PAGAMENTI_RICHIESTI P ON D.ID_DOMANDA_PAGAMENTO = P.ID_DOMANDA_PAGAMENTO
			WHERE P.AMMESSO = 1	AND D.ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO AND D.ID_PROGETTO=@ID_PROGETTO
			GROUP BY D.ID_DOMANDA_PAGAMENTO, D.ID_PROGETTO
			
			SET @CONTRIBUTO_NETTO_FINALE=ISNULL(@CONTRIBUTO_AMMISSIBILE,0)-ISNULL(@TOTALE_SANZIONE,0)+ ISNULL(@FLESSIBILITA,0)
			IF @ESITO=1 AND @CONTRIBUTO_NETTO_FINALE>0 BEGIN
				IF(@CONTRIBUTO_NETTO_FINALE>@ANTICIPO_DA_RECUPERARE) 
					SET @CONTRIBUTO_NETTO_FINALE=@CONTRIBUTO_NETTO_FINALE-@ANTICIPO_DA_RECUPERARE
				ELSE BEGIN
					SET @ANTICIPO_DA_RECUPERARE=@CONTRIBUTO_NETTO_FINALE
					SET @CONTRIBUTO_NETTO_FINALE=0
				END
				
			END
			ELSE BEGIN
				SET @CONTRIBUTO_NETTO_FINALE=0
				SET @ANTICIPO_DA_RECUPERARE=0
			END


			DECLARE @IMPORTO_AMMESSO DECIMAL(18,2)

			SET @IMPORTO_AMMESSO = @CONTRIBUTO_NETTO_FINALE
			
			-- CONTROLLO SE IL BANDO HA CONTRIBUTO MASSIMO ASSEGNABILE
			DECLARE @CONTRIBUTO_MAX_BANDO DECIMAL = NULL
			SELECT @CONTRIBUTO_MAX_BANDO  = IMPORTO_MAX FROM BANDO_TIPO_INVESTIMENTI
				INNER JOIN PROGETTO ON BANDO_TIPO_INVESTIMENTI.ID_BANDO = PROGETTO.ID_BANDO
				WHERE PROGETTO.ID_PROGETTO = @ID_PROGETTO AND BANDO_TIPO_INVESTIMENTI.COD_TIPO_INVESTIMENTO = 7 AND BANDO_TIPO_INVESTIMENTI.IMPORTO_MAX IS NOT NULL
			IF @CONTRIBUTO_MAX_BANDO IS NOT NULL BEGIN
				
				DECLARE @CONTRIBUTO_GIA_EROGATO DECIMAL
				SELECT @CONTRIBUTO_GIA_EROGATO = ISNULL(SUM(IMPORTO_AMMESSO),0) FROM DOMANDA_DI_PAGAMENTO_ESPORTAZIONE
				INNER JOIN DOMANDA_DI_PAGAMENTO ON DOMANDA_DI_PAGAMENTO.ID_DOMANDA_PAGAMENTO = DOMANDA_DI_PAGAMENTO_ESPORTAZIONE.ID_DOMANDA_PAGAMENTO
				WHERE DOMANDA_DI_PAGAMENTO_ESPORTAZIONE.ID_PROGETTO= @ID_PROGETTO AND  DOMANDA_DI_PAGAMENTO.APPROVATA = 1 
					AND DOMANDA_DI_PAGAMENTO.SEGNATURA_APPROVAZIONE IS NOT NULL AND DOMANDA_DI_PAGAMENTO.ID_DOMANDA_PAGAMENTO<@ID_DOMANDA_PAGAMENTO  
				IF(@CONTRIBUTO_MAX_BANDO<@IMPORTO_AMMESSO+@CONTRIBUTO_GIA_EROGATO) BEGIN
					SET @IMPORTO_AMMESSO =@CONTRIBUTO_MAX_BANDO - @CONTRIBUTO_GIA_EROGATO
				END
			
			END
						
			--AGGIORNO LA TABELLA
			UPDATE DOMANDA_DI_PAGAMENTO_ESPORTAZIONE SET IMPORTO_AMMISSIBILE=@CONTRIBUTO_AMMISSIBILE,IMPORTO_SANZIONE=@TOTALE_SANZIONE,
				IMPORTO_RECUPERO_ANTICIPO=@ANTICIPO_DA_RECUPERARE,IMPORTO_AMMESSO=@IMPORTO_AMMESSO
			WHERE ID_DOMANDA_PAGAMENTO=@ID_DOMANDA_PAGAMENTO AND ID_PROGETTO=@ID_PROGETTO
			--SELECT @CONTRIBUTO_AMMISSIBILE,IMPORTO_SANZIONE=@TOTALE_SANZIONE,IMPORTO_RECUPERO_ANTICIPO=@ANTICIPO_DA_RECUPERARE,
			--	IMPORTO_AMMESSO=@CONTRIBUTO_NETTO_FINALE
		END
		FETCH NEXT FROM PROGETTI_CORRELATI INTO @ID_PROGETTO,@ID_PROGRAMMAZIONE,@MISURA_PREVALENTE
	END	
	CLOSE PROGETTI_CORRELATI
	DEALLOCATE PROGETTI_CORRELATI
GO


