CREATE PROCEDURE [dbo].[zIgrueInsertMonitFN05]
( 
 @DataDa DATETIME,
 @DataA DATETIME,
 @IdInvio INT,
 @rNumber INT
)
AS
BEGIN

WITH CLG AS 
(
SELECT 
COD_LIV_GERARCHICO,
VALORE_DATI_RILEVATI,
DESCRIZIONE_CODICE_LIVELLO_GERARCHICO,
COD_STRUTTURA_PROT
FROM 
IGRUE_MONIT.dbo.IGRUE_T_TC36 
WHERE 
DESCRIZIONE_CODICE_LIVELLO_GERARCHICO LIKE '%POR Marche FESR%' 
AND 
COD_STRUTTURA_PROT LIKE '%FN05%'
),

VPA AS (
SELECT 
VPI.ID_PROGETTO,
SUM(VPI.CONTRIBUTO_RICHIESTO) AS IMPORTO 
FROM 
vPIANO_INVESTIMENTI VPI
WHERE 
VPI.ID_INVESTIMENTO_ORIGINALE IS NOT NULL
AND
VPI.ID_VARIANTE IS NULL
--AND
--VPI.AMMESSO = 1
GROUP BY VPI.ID_PROGETTO
)

INSERT INTO IGRUE_MONIT.dbo.IGRUE_FN05
(
COD_LOCALE_PROGETTO,
COD_IMPEGNO,
TIPOLOGIA_IMPEGNO,
DATA_IMPEGNO,
COD_PROGRAMMA,
COD_LIV_GERARCHICO,
DATA_IMP_AMM,
TIPOLOGIA_IMP_AMM,
CAUSALE_DISIMPEGNO_AMM,
IMPORTO_IMP_AMM,
NOTE_IMP,
FLG_CANCELLAZIONE,
--OPERAZIONE,
ID_INVIO,
NR_RIGA_INVIO,
--NR_RIGA_CANCELLAZIONE
CODICE_FONDO
)


SELECT 
P.ID_PROGETTO AS COD_LOCALE_PROGETTO,
--NULL AS COD_IMPEGNO, --VERIFICARE PRESENZA CAMPO
CASE WHEN BC.COD_TIPO IS NOT NULL 
THEN 
ATTI_P.NUMERO
ELSE 
ATTI_B.NUMERO END AS COD_IMPEGNO,
--'I' AS TIPOLOGIA_IMPEGNO, --NULL AS TIPOLOGIA_IMPEGNO, --VERIFICARE PRESENZA CAMPO
CASE WHEN BCA.VALORE = '04' THEN 'I-TR'
ELSE 
'I' END AS TIPOLOGIA_IMPEGNO, 
--NULL AS DATA_IMPEGNO,  --VERIFICARE PRESENZA CAMPO
CASE WHEN BC.COD_TIPO IS NOT NULL 
THEN 
dbo.DateToString_Igrue(ATTI_P.DATA)
ELSE 
dbo.DateToString_Igrue(ATTI_B.DATA) 
END AS DATA_IMPEGNO,
'2014IT16RFOP013' AS COD_PROGRAMMA, --VERIFICARE CON TC4
--'2014IT16RFOP013#ERDF#M#'+ASSI.CODICE + CASE WHEN OT.CODICE IS NULL THEN '' ELSE '#0' END + ISNULL(OT.CODICE,'#N.A.') + '#' + ISNULL(PRI.COD_PI,'N.A.') + '#' + REPLACE(OS.CODICE, 'OS ','') AS CODICE_CLG,
CLG.COD_LIV_GERARCHICO AS COD_LIV_GERARCHICO,
--ASSI.CODICE CODICE_ASSE,
--OT.CODICE CODICE_OT, 
--PRI.COD_PI,
--OS.CODICE CODICE_OS, 
CASE WHEN BC.COD_TIPO IS NOT NULL 
THEN 
dbo.DateToString_Igrue(ATTI_P.DATA)
ELSE 
dbo.DateToString_Igrue(ATTI_B.DATA) END AS DATA_IMP_AMM,
--'I' AS TIPOLOGIA_IMP_AMM,
CASE WHEN BCA.VALORE = '04' THEN 'I-TR'
ELSE 
'I' END AS TIPOLOGIA_IMP_AMM,
NULL AS CAUSALE_DISIMPEGNO_AMM, --VERIFICARE TC38
--GPR.CONTRIBUTO_TOTALE AS IMPORTO_IMP_AMM,
VPA.IMPORTO AS IMPORTO_IMP_AMM,
NULL AS NOTE_IMP,
NULL AS FLG_CANCELLAZIONE,
@IdInvio AS ID_INVIO,
ISNULL(@rNumber,0) + ROW_NUMBER() OVER(ORDER BY P.ID_PROGETTO ASC) AS NR_RIGA_INVIO,
'FESR20142020' AS CODICE_FONDO   
FROM vPROGETTO P 
INNER JOIN vBANDO B ON
P.ID_BANDO = B.ID_BANDO
--INNER JOIN BANDO_PROGRAMMAZIONE BP ON
--B.ID_BANDO = BP.ID_BANDO
INNER JOIN zPROGRAMMAZIONE PRG ON
B.ID_PROGRAMMAZIONE = PRG.ID
INNER JOIN zPSR_ALBERO PA ON
PRG.COD_TIPO = PA.CODICE
INNER JOIN zPSR PSR ON
PA.COD_PSR = PSR.CODICE
INNER JOIN zOB_MISURA OS ON
B.ID_PROGRAMMAZIONE = OS.ID_PROGRAMMAZIONE
INNER JOIN zPROGRAMMAZIONE AZIONI ON
B.ID_PROGRAMMAZIONE = AZIONI.ID
INNER JOIN zPROGRAMMAZIONE ASSI ON 
AZIONI.ID_PADRE = ASSI.ID
LEFT OUTER JOIN 
(
	SELECT 
	D.CODICE AS COD_PI,
	DP.ID_PROGRAMMAZIONE,
	PPI.CODICE,
	PPI.COD_TIPO 
	FROM zDIMENSIONI D 
	INNER JOIN zDIMENSIONI_X_PROGRAMMAZIONE DP ON
	D.ID = DP.ID_DIMENSIONE 
	INNER JOIN zPROGRAMMAZIONE PPI ON
	DP.ID_PROGRAMMAZIONE = PPI.ID
	WHERE D.COD_DIM = 'PI'
) AS PRI ON
AZIONI.ID = PRI.ID_PROGRAMMAZIONE
LEFT OUTER JOIN 
(
	SELECT 
	D.CODICE AS COD_OT,
	DP.ID_PROGRAMMAZIONE,
	DP.ID_DIM_X_PROGRAMMAZIONE,
	DP.ID_DIMENSIONE,
	PPI.CODICE,
	PPI.COD_TIPO 
	FROM zDIMENSIONI D 
	INNER JOIN zDIMENSIONI_X_PROGRAMMAZIONE DP ON
	D.ID = DP.ID_DIMENSIONE 
	INNER JOIN zPROGRAMMAZIONE PPI ON
	DP.ID_PROGRAMMAZIONE = PPI.ID
	WHERE D.COD_DIM = 'OT'
) AS OT ON
ASSI.ID = OT.ID_PROGRAMMAZIONE
LEFT OUTER JOIN 
(
	SELECT 
	D.CODICE AS COD_OT,
	DP.ID_PROGRAMMAZIONE,
	DP.ID_DIM_X_PROGRAMMAZIONE,
	DP.ID_DIMENSIONE,
	--PPI.CODICE,
	SUBSTRING(D.CODICE,4,1) CODICE,
	PPI.COD_TIPO 
	FROM zDIMENSIONI D 
	INNER JOIN zDIMENSIONI_X_PROGRAMMAZIONE DP ON
	D.ID = DP.ID_DIMENSIONE 
	INNER JOIN zPROGRAMMAZIONE PPI ON
	DP.ID_PROGRAMMAZIONE = PPI.ID
	WHERE D.COD_DIM = 'OT'
) AS OT2 ON
AZIONI.ID = OT2.ID_PROGRAMMAZIONE
LEFT OUTER JOIN  CLG ON
--'2014IT16RFOP013#ERDF#M#'+ASSI.CODICE + CASE WHEN OT.CODICE IS NULL THEN '' ELSE '#0' END + ISNULL(OT.CODICE,'#N.A.') + '#' + ISNULL(PRI.COD_PI,'N.A.') + '#' + REPLACE(OS.CODICE, 'OS ','') = CLG.VALORE_DATI_RILEVATI
'2014IT16RFOP013#ERDF#M#'+ASSI.CODICE + CASE WHEN COALESCE(OT.CODICE, OT2.CODICE) IS NULL THEN '' ELSE '#0' END + ISNULL(COALESCE(OT.CODICE, OT2.CODICE),'#N.A.') + '#' + ISNULL(PRI.COD_PI,'N.A.') + '#' + REPLACE(OS.CODICE, 'OS ','') = CLG.VALORE_DATI_RILEVATI
--LEFT JOIN vPAGAMENTI_RICHIESTI VPR ON
LEFT OUTER JOIN GRADUATORIA_PROGETTI GPR ON
P.ID_PROGETTO = GPR.ID_PROGETTO
LEFT OUTER JOIN BANDO_CONFIG BC ON
B.ID_BANDO = BC.ID_BANDO 
AND 
BC.COD_TIPO = 'ATTGRADBLOCCHI'
AND
BC.ATTIVO = 1
LEFT OUTER JOIN BANDO_CONFIG BCA ON
B.ID_BANDO = BCA.ID_BANDO 
AND 
BCA.COD_TIPO = 'TPAPPALTO'
AND 
BCA.ATTIVO = 1 
AND 
BCA.VALORE = '04'
LEFT OUTER JOIN 
(
	SELECT 
	BS.ID_BANDO,
	MAX(BS.ID_ATTO) ID_ATTO
	FROM BANDO_STORICO BS 
	WHERE BS.COD_STATO = 'G'
	GROUP BY ID_BANDO
) GB ON
B.ID_BANDO = GB.ID_BANDO
LEFT OUTER JOIN ATTI ATTI_B ON 
GB.ID_ATTO = ATTI_B.ID_ATTO
LEFT OUTER JOIN 
(
	SELECT 
	PS.ID_PROGETTO,
	MAX(PS.ID_ATTO) ID_ATTO
	FROM PROGETTO_STORICO PS 
	WHERE PS.COD_STATO = 'F'
	GROUP BY ID_PROGETTO
) GP ON
P.ID_PROGETTO = GP.ID_PROGETTO
LEFT OUTER JOIN ATTI ATTI_P ON
GP.ID_ATTO = ATTI_P.ID_ATTO
--AND 
--VPR.ISTRUTTORE IS NOT NULL
--AND 
--VPR.ID_INVESTIMENTO_ORIGINALE IS NOT NULL
--AND
--VPR.AMMESSO = 1 
LEFT OUTER JOIN VPA ON
P.ID_PROGETTO = VPA.ID_PROGETTO
WHERE 
P.COD_STATO IN ('F','V','S','O','T','X','C','Y','E','R') 
AND 
PSR.CODICE = 'POR20142020'
AND 
PRG.ID NOT IN (17,18,19)
AND
P.COD_AGEA IS NOT NULL
--26/01/2018
--CLAUSOLA TEMPORANEA PER ESCLUDERE PROGETTO STRUMENTI FINANZIARI ARTIGIANCASSA
AND P.ID_PROGETTO <> 13301
--CLAUSOLA TEMPORANEA PER TEST INVIO IGRUE
AND 
(COALESCE(ATTI_B.ID_ATTO, ATTI_P.ID_ATTO) IS NOT NULL)
AND CLG.COD_LIV_GERARCHICO IS NOT NULL
--AND 
--GPR.CONTRIBUTO_TOTALE IS NOT NULL

SELECT ISNULL(MAX(NR_RIGA_INVIO),0) FROM IGRUE_MONIT.dbo.IGRUE_FN05 WHERE ID_INVIO = @IdInvio

END



--WITH CLG AS 
--(
--SELECT 
--COD_LIV_GERARCHICO,
--VALORE_DATI_RILEVATI,
--DESCRIZIONE_CODICE_LIVELLO_GERARCHICO,
--COD_STRUTTURA_PROT
--FROM 
--IGRUE_MONIT.dbo.IGRUE_T_TC36 
--WHERE 
--DESCRIZIONE_CODICE_LIVELLO_GERARCHICO LIKE '%POR Marche FESR%' 
--AND 
--COD_STRUTTURA_PROT LIKE '%FN05%'
--)


--INSERT INTO IGRUE_MONIT.dbo.IGRUE_FN05
--(
--COD_LOCALE_PROGETTO,
--COD_IMPEGNO,
--TIPOLOGIA_IMPEGNO,
--DATA_IMPEGNO,
--COD_PROGRAMMA,
--COD_LIV_GERARCHICO,
--DATA_IMP_AMM,
--TIPOLOGIA_IMP_AMM,
--CAUSALE_DISIMPEGNO_AMM,
--IMPORTO_IMP_AMM,
--NOTE_IMP,
--FLG_CANCELLAZIONE,
----OPERAZIONE,
--ID_INVIO,
--NR_RIGA_INVIO,
----NR_RIGA_CANCELLAZIONE
--CODICE_FONDO
--)


--SELECT 
--P.ID_PROGETTO AS COD_LOCALE_PROGETTO,
----NULL AS COD_IMPEGNO, --VERIFICARE PRESENZA CAMPO
--CASE WHEN BC.COD_TIPO IS NOT NULL 
--THEN 
--ATTI_P.NUMERO
--ELSE 
--ATTI_B.NUMERO END AS COD_IMPEGNO,
--'I' AS TIPOLOGIA_IMPEGNO, --NULL AS TIPOLOGIA_IMPEGNO, --VERIFICARE PRESENZA CAMPO
----NULL AS DATA_IMPEGNO,  --VERIFICARE PRESENZA CAMPO
--CASE WHEN BC.COD_TIPO IS NOT NULL 
--THEN 
--dbo.DateToString_Igrue(ATTI_P.DATA)
--ELSE 
--dbo.DateToString_Igrue(ATTI_B.DATA) 
--END AS DATA_IMPEGNO,
--'2014IT16RFOP013' AS COD_PROGRAMMA, --VERIFICARE CON TC4
--CLG.COD_LIV_GERARCHICO AS COD_LIV_GERARCHICO, 
--CASE WHEN BC.COD_TIPO IS NOT NULL 
--THEN 
--dbo.DateToString_Igrue(ATTI_P.DATA)
--ELSE 
--dbo.DateToString_Igrue(ATTI_B.DATA) END AS DATA_IMP_AMM,
--'I' AS TIPOLOGIA_IMP_AMM,
--NULL AS CAUSALE_DISIMPEGNO_AMM, --VERIFICARE TC38
--GPR.CONTRIBUTO_TOTALE AS IMPORTO_IMP_AMM,
--NULL AS NOTE_IMP,
--NULL AS FLG_CANCELLAZIONE,
--@IdInvio AS ID_INVIO,
--ISNULL(@rNumber,0) + ROW_NUMBER() OVER(ORDER BY P.ID_PROGETTO ASC) AS NR_RIGA_INVIO,
--'FESR20142020' AS CODICE_FONDO   
--FROM vPROGETTO P 
--INNER JOIN vBANDO B ON
--P.ID_BANDO = B.ID_BANDO
----INNER JOIN BANDO_PROGRAMMAZIONE BP ON
----B.ID_BANDO = BP.ID_BANDO
--INNER JOIN zPROGRAMMAZIONE PRG ON
--B.ID_PROGRAMMAZIONE = PRG.ID
--INNER JOIN zPSR_ALBERO PA ON
--PRG.COD_TIPO = PA.CODICE
--INNER JOIN zPSR PSR ON
--PA.COD_PSR = PSR.CODICE
--INNER JOIN zOB_MISURA OS ON
--B.ID_PROGRAMMAZIONE = OS.ID_PROGRAMMAZIONE
--INNER JOIN zPROGRAMMAZIONE AZIONI ON
--B.ID_PROGRAMMAZIONE = AZIONI.ID
--INNER JOIN zPROGRAMMAZIONE ASSI ON 
--AZIONI.ID_PADRE = ASSI.ID
--LEFT OUTER JOIN 
--(
--	SELECT 
--	D.CODICE AS COD_PI,
--	DP.ID_PROGRAMMAZIONE,
--	PPI.CODICE,
--	PPI.COD_TIPO 
--	FROM zDIMENSIONI D 
--	INNER JOIN zDIMENSIONI_X_PROGRAMMAZIONE DP ON
--	D.ID = DP.ID_DIMENSIONE 
--	INNER JOIN zPROGRAMMAZIONE PPI ON
--	DP.ID_PROGRAMMAZIONE = PPI.ID
--	WHERE D.COD_DIM = 'PI'
--) AS PRI ON
--AZIONI.ID = PRI.ID_PROGRAMMAZIONE
--LEFT OUTER JOIN 
--(
--	SELECT 
--	D.CODICE AS COD_OT,
--	DP.ID_PROGRAMMAZIONE,
--	DP.ID_DIM_X_PROGRAMMAZIONE,
--	DP.ID_DIMENSIONE,
--	PPI.CODICE,
--	PPI.COD_TIPO 
--	FROM zDIMENSIONI D 
--	INNER JOIN zDIMENSIONI_X_PROGRAMMAZIONE DP ON
--	D.ID = DP.ID_DIMENSIONE 
--	INNER JOIN zPROGRAMMAZIONE PPI ON
--	DP.ID_PROGRAMMAZIONE = PPI.ID
--	WHERE D.COD_DIM = 'OT'
--) AS OT ON
--ASSI.ID = OT.ID_PROGRAMMAZIONE
--LEFT OUTER JOIN  CLG ON
----'2014IT16RFOP013#ERDF#M#'+ASSI.CODICE + '#0' + ASSI.CODICE + '#' + PRI.COD_PI + '#' + REPLACE(OS.CODICE, 'OS ','') = CLG.VALORE_DATI_RILEVATI
--'2014IT16RFOP013#ERDF#M#'+ASSI.CODICE + CASE WHEN OT.CODICE IS NULL THEN '' ELSE '#0' END + ISNULL(OT.CODICE,'#N.A.') + '#' + ISNULL(PRI.COD_PI,'N.A.') + '#' + REPLACE(OS.CODICE, 'OS ','') = CLG.VALORE_DATI_RILEVATI
----LEFT JOIN vPAGAMENTI_RICHIESTI VPR ON
--LEFT OUTER JOIN GRADUATORIA_PROGETTI GPR ON
--P.ID_PROGETTO = GPR.ID_PROGETTO
--LEFT OUTER JOIN BANDO_CONFIG BC ON
--B.ID_BANDO = BC.ID_BANDO 
--AND 
--BC.COD_TIPO = 'ATTGRADBLOCCHI'
--AND
--BC.ATTIVO = 1
--LEFT OUTER JOIN 
--(
--	SELECT 
--	BS.ID_BANDO,
--	MAX(BS.ID_ATTO) ID_ATTO
--	FROM BANDO_STORICO BS 
--	WHERE BS.COD_STATO = 'G'
--	GROUP BY ID_BANDO
--) GB ON
--B.ID_BANDO = GB.ID_BANDO
--LEFT OUTER JOIN ATTI ATTI_B ON 
--GB.ID_ATTO = ATTI_B.ID_ATTO
--LEFT OUTER JOIN 
--(
--	SELECT 
--	PS.ID_PROGETTO,
--	MAX(PS.ID_ATTO) ID_ATTO
--	FROM PROGETTO_STORICO PS 
--	WHERE PS.COD_STATO = 'F'
--	GROUP BY ID_PROGETTO
--) GP ON
--P.ID_PROGETTO = GP.ID_PROGETTO
--LEFT OUTER JOIN ATTI ATTI_P ON
--GP.ID_ATTO = ATTI_P.ID_ATTO
----AND 
----VPR.ISTRUTTORE IS NOT NULL
----AND 
----VPR.ID_INVESTIMENTO_ORIGINALE IS NOT NULL
----AND
----VPR.AMMESSO = 1 
--WHERE 
--P.COD_STATO IN ('F','V','S','O','T','X','C','Y','E','R') 
--AND 
--PSR.CODICE = 'POR20142020'
--AND 
--PRG.ID NOT IN (17,18,19)
--AND
--P.COD_AGEA IS NOT NULL
----CLAUSOLA TEMPORANEA PER TEST INVIO IGRUE
--AND 
--(COALESCE(ATTI_B.ID_ATTO, ATTI_P.ID_ATTO) IS NOT NULL)
--AND 
--GPR.CONTRIBUTO_TOTALE IS NOT NULL


----AND
----BR.ATTIVO = 1 AND BR.PROVINCIA IS NULL
----AND
----B.DATA_SCADENZA BETWEEN @DataDa AND @DataA

