using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace web.Private.Istruttoria
{
    public partial class DownloadMassivo : SiarLibrary.Web.PrivatePage
    {
        protected override void OnPreInit(EventArgs e)
        {
            this.FunzioneMenu = "download_massivo";
            base.OnPreInit(e);
        }
        protected void Page_Load(object sender, EventArgs e)
        {

        }

        protected override void OnPreRender(EventArgs e)
        {
            switch (ucSiarNewTab.TabSelected)
            {
                case 3:
                    tbDomandeAiuto.Visible = true;
                    int idProgettoAiuto = 0;

                    SiarBLL.VriepilogoDomandeAiutoDownloadMassivoCollectionProvider domande_aiuto_provider = new SiarBLL.VriepilogoDomandeAiutoDownloadMassivoCollectionProvider();
                    SiarLibrary.VriepilogoDomandeAiutoDownloadMassivoCollection domande_aiuto;

                    if (int.TryParse(txtProgettoAiuto.Text, out idProgettoAiuto))
                        domande_aiuto = domande_aiuto_provider.GetRiepilogoDomandeAiutoDownloadMassivo(idProgettoAiuto, null);
                    else
                        domande_aiuto = domande_aiuto_provider.GetRiepilogoDomandeAiutoDownloadMassivo(null, Operatore.Utente.CfUtente);

                    dgGestioneLavoriAiuti.DataSource = domande_aiuto;
                    if (domande_aiuto.Count == 0)
                        dgGestioneLavoriAiuti.Titolo = "Nessuna domanda trovata.";
                    dgGestioneLavoriAiuti.ItemDataBound += new DataGridItemEventHandler(dgGestioneLavoriAiuti_ItemDataBound);

                    dgGestioneLavoriAiuti.DataBind();
                    break;
                case 2:
                    tbIntegrazioni.Visible = true;
                    int idProgettoIntegrazioni = 0;

                    SiarBLL.VriepilogoIntegrazioniDownloadMassivoCollectionProvider integrazione_provider = new SiarBLL.VriepilogoIntegrazioniDownloadMassivoCollectionProvider();
                    SiarLibrary.VriepilogoIntegrazioniDownloadMassivoCollection integrazioni;

                    if (int.TryParse(txtProgettoIntegrazioni.Text, out idProgettoIntegrazioni))
                        integrazioni = integrazione_provider.GetRiepilogoIntegrazioniDownloadMassivo(idProgettoIntegrazioni, null);
                    else
                        integrazioni = integrazione_provider.GetRiepilogoIntegrazioniDownloadMassivo(null, Operatore.Utente.CfUtente);

                    dgGestioneLavoriIntegrazioni.DataSource = integrazioni;
                    if (integrazioni.Count == 0)
                        dgGestioneLavoriIntegrazioni.Titolo = "Nessuna integrazione alle domande di pagamento prevista per il progetto o per l'operatore.";
                    dgGestioneLavoriIntegrazioni.ItemDataBound += new DataGridItemEventHandler(dgGestioneLavoriIntegrazioni_ItemDataBound);

                    dgGestioneLavoriIntegrazioni.DataBind();

                    break;
                default:
                    tbDomande.Visible = true;
                    int idProgetto = 0;
                    SiarLibrary.NotAutogeneratedClasses.RiepilogoDomandePagamentoCollectionProvider riepilogo_provider = new SiarLibrary.NotAutogeneratedClasses.RiepilogoDomandePagamentoCollectionProvider();
                    SiarLibrary.NotAutogeneratedClasses.RiepilogoDomandePagamentoCollection domande;
                    if (int.TryParse(txtProgetto.Text, out idProgetto))
                        domande = riepilogo_provider.GetRiepilogoDomandePagamentoDownloadMassivo(idProgetto, null);
                    else
                        domande = riepilogo_provider.GetRiepilogoDomandePagamentoDownloadMassivo(null, Operatore.Utente.CfUtente);

                    dgGestioneLavori.DataSource = domande;
                    if (domande.Count == 0)
                        dgGestioneLavori.Titolo = "Nessuna domanda di pagamento prevista per il progetto o per l'operatore.";
                    dgGestioneLavori.ItemDataBound += new DataGridItemEventHandler(dgGestioneLavori_ItemDataBound);

                    dgGestioneLavori.DataBind();

                    break;
            }
            base.OnPreRender(e);
        }

        #region progetti
        protected void btnCercaProgetto_Click(object sender, EventArgs e)
        {
            try
            {
                int idProgetto = 0;
                SiarLibrary.NotAutogeneratedClasses.RiepilogoDomandePagamentoCollectionProvider riepilogo_provider = new SiarLibrary.NotAutogeneratedClasses.RiepilogoDomandePagamentoCollectionProvider();
                SiarLibrary.NotAutogeneratedClasses.RiepilogoDomandePagamentoCollection domande;
                if (int.TryParse(txtProgetto.Text, out idProgetto))
                    domande = riepilogo_provider.GetRiepilogoDomandePagamentoDownloadMassivo(idProgetto, null);
                else
                    domande = riepilogo_provider.GetRiepilogoDomandePagamentoDownloadMassivo(null, Operatore.Utente.CfUtente);

                dgGestioneLavori.DataSource = domande;
                if (domande.Count == 0)
                    dgGestioneLavori.Titolo = "Nessuna domanda di pagamento prevista per il progetto o per l'operatore.";
                dgGestioneLavori.ItemDataBound += new DataGridItemEventHandler(dgGestioneLavori_ItemDataBound);

                dgGestioneLavori.DataBind();

            }
            catch (Exception ex) { ShowError(ex); }

        }

        protected void btnAvviaScaricoDomanda_Click(object sender, EventArgs e)
        {
            SiarBLL.DownloadMassivoRichiesteCollectionProvider downloadProvider = new SiarBLL.DownloadMassivoRichiesteCollectionProvider();

            try
            {
                int idDomandaPagamento = 0;
                if (int.TryParse(hdnIdDomandaScarico.Value, out idDomandaPagamento))
                {
                    SiarLibrary.DomandaDiPagamento domandaScarico = new SiarBLL.DomandaDiPagamentoCollectionProvider().GetById(idDomandaPagamento);

                    SiarLibrary.DownloadMassivoRichieste download = new SiarLibrary.DownloadMassivoRichieste();

                    download.CfOperatore = Operatore.Utente.CfUtente;
                    download.IdDomandaPagamento = domandaScarico.IdDomandaPagamento;
                    download.IdProgetto = domandaScarico.IdProgetto;
                    download.Segnatura = domandaScarico.Segnatura;
                    download.DataInserimento = DateTime.Now;
                    downloadProvider.Save(download);
                    ShowMessage("Scarico avviato correttamente");
                }
                else
                    throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  la domanda selezionata.");
            }
            catch (Exception ex)
            {
                downloadProvider.DbProviderObj.Rollback(); throw ex;
            }
        }

        protected void btnScaricaFile_Click(object sender, EventArgs e)
        {
            try
            {
                if (string.IsNullOrEmpty(hdnIdTicket.Value)) throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  la domanda selezionata.");
                String pathCartella = System.Configuration.ConfigurationManager.AppSettings["Download_Massivi"] + "/";

                //String pathCartella = @"C:\download_sigef\";

                //pathCartella += "4.zip";

                pathCartella += hdnIdTicket.Value + ".zip";

                var file = File.ReadAllBytes(pathCartella);

                if (file != null)
                {
                    Session["evita_controllo_date_sessione"] = "true";
                    /*
                    Response.Clear();
                    Response.ClearHeaders();
                    Response.ClearContent();
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + Path.GetFileName(pathCartella));
                    Response.AddHeader("Content-Length", file.Length.ToString());
                    Response.ContentType = "application/octet-stream";
                    //Response.ContentType = "application/zip";
                    Response.BinaryWrite(file);
                    Response.Flush();
                    Response.End();
                    */

                    SiarLibrary.ArchivioFileCollection docs = new SiarLibrary.ArchivioFileCollection();
                    SiarLibrary.ArchivioFile a = new SiarLibrary.ArchivioFile();
                    a.Contenuto = file;
                    a.Dimensione = file.Length;
                    a.NomeFile = Path.GetFileName(pathCartella);
                    a.NomeCompleto = Path.GetFileName(pathCartella);

                    docs.Add(a);
                    Session["siar_view_file"] = docs;
                    RegisterClientScriptBlock("window.open('../../VisualizzaDocumento.aspx');");

                    ShowMessage("File scaricato correttamente.");
                }
                else
                    throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  la domanda selezionata.");

            }
            catch (Exception ex) { ShowError(ex); }
        }

        void dgGestioneLavori_ItemDataBound(object sender, DataGridItemEventArgs e)
        {
            if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
            {
                SiarLibrary.NotAutogeneratedClasses.RiepilogoDomandePagamento c = (SiarLibrary.NotAutogeneratedClasses.RiepilogoDomandePagamento)e.Item.DataItem;

                if (string.IsNullOrEmpty(c.AdditionalAttributes["ID_TICKET"]) && c.IdDomandaPagamento != null)
                {
                    e.Item.Cells[8].Text = "<input type=button class=ButtonGrid value='Richiedi lo scarico' style='width:130px' onclick=\"richiediScarico('" + c.IdDomandaPagamento + "')\" />";
                }
                else if (c.IdDomandaPagamento != null)
                    e.Item.Cells[8].Text = "Ticket ID: " + c.AdditionalAttributes["ID_TICKET"];

                bool eseguito;
                string eseguitoTxt = "";
                if (c.AdditionalAttributes["ESEGUITO"] != null && bool.TryParse(c.AdditionalAttributes["ESEGUITO"], out eseguito))
                {
                    if (eseguito)
                    {
                        eseguitoTxt = "Si";
                        e.Item.Cells[12].Text = "<input type=button class=ButtonGrid value='Scarica' style='width:130px' onclick=\"scaricaFile('" + c.AdditionalAttributes["ID_TICKET"] + "')\" />";
                    }
                    else
                        eseguitoTxt = "No";
                }


                e.Item.Cells[9].Text = eseguitoTxt;
                e.Item.Cells[10].Text = c.AdditionalAttributes["DATA_FINE_ESTRAZIONE"];
                e.Item.Cells[11].Text = c.AdditionalAttributes["DIMENSIONE_FILE"];
            }
        }
        #endregion

        #region integrazioni
        protected void btnCercaIntegrazioni_Click(object sender, EventArgs e)
        {
            try
            {
                int idProgetto = 0;
                SiarBLL.VriepilogoIntegrazioniDownloadMassivoCollectionProvider riepilogo_provider = new SiarBLL.VriepilogoIntegrazioniDownloadMassivoCollectionProvider();
                SiarLibrary.VriepilogoIntegrazioniDownloadMassivoCollection integrazioni;
                if (int.TryParse(txtProgettoIntegrazioni.Text, out idProgetto))
                    integrazioni = riepilogo_provider.GetRiepilogoIntegrazioniDownloadMassivo(idProgetto, null);
                else
                    integrazioni = riepilogo_provider.GetRiepilogoIntegrazioniDownloadMassivo(null, Operatore.Utente.CfUtente);

                dgGestioneLavoriIntegrazioni.DataSource = integrazioni;
                if (integrazioni.Count == 0)
                    dgGestioneLavori.Titolo = "Nessuna integrazione alle domande di pagamento prevista per il progetto o per l'operatore.";
                dgGestioneLavoriIntegrazioni.ItemDataBound += new DataGridItemEventHandler(dgGestioneLavoriIntegrazioni_ItemDataBound);

                dgGestioneLavoriIntegrazioni.DataBind();

            }
            catch (Exception ex) { ShowError(ex); }

        }

        protected void btnAvviaScaricoIntegrazione_Click(object sender, EventArgs e)
        {
            SiarBLL.DownloadMassivoRichiesteCollectionProvider downloadProvider = new SiarBLL.DownloadMassivoRichiesteCollectionProvider();

            try
            {
                int idIntegrazione = 0;
                if (int.TryParse(hdnIdIntegrazioneScarico.Value, out idIntegrazione))
                {
                    SiarLibrary.IntegrazioniPerDomandaDiPagamento integrazioneScarico = new SiarBLL.IntegrazioniPerDomandaDiPagamentoCollectionProvider().GetById(idIntegrazione);

                    SiarLibrary.DownloadMassivoRichieste download = new SiarLibrary.DownloadMassivoRichieste();

                    download.CfOperatore = Operatore.Utente.CfUtente;
                    download.IdIntegrazione = integrazioneScarico.IdIntegrazioneDomandaDiPagamento;
                    download.IdProgetto = integrazioneScarico.IdProgetto;
                    download.Segnatura = integrazioneScarico.SegnaturaBeneficiario;
                    download.DataInserimento = DateTime.Now;
                    downloadProvider.Save(download);
                    ShowMessage("Scarico avviato correttamente");
                }
                else
                    throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  la domanda selezionata.");
            }
            catch (Exception ex)
            {
                downloadProvider.DbProviderObj.Rollback(); throw ex;
            }
        }

        protected void btnScaricaFileIntegrazione_Click(object sender, EventArgs e)
        {
            try
            {
                if (string.IsNullOrEmpty(hdnIdTicketIntegrazione.Value)) throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  l'integrazione selezionata.");
                String pathCartella = System.Configuration.ConfigurationManager.AppSettings["Download_Massivi"] + "/";

                //String pathCartella = @"C:\download_sigef\";

                //pathCartella += "4.zip";

                pathCartella += hdnIdTicketIntegrazione.Value + ".zip";

                var file = File.ReadAllBytes(pathCartella);

                if (file != null)
                {
                    Session["evita_controllo_date_sessione"] = "true";
                    /*
                    Response.Clear();
                    Response.ClearHeaders();
                    Response.ClearContent();
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + Path.GetFileName(pathCartella));
                    Response.AddHeader("Content-Length", file.Length.ToString());
                    Response.ContentType = "application/octet-stream";
                    //Response.ContentType = "application/zip";
                    Response.BinaryWrite(file);
                    Response.Flush();
                    Response.End();
                    */

                    SiarLibrary.ArchivioFileCollection docs = new SiarLibrary.ArchivioFileCollection();
                    SiarLibrary.ArchivioFile a = new SiarLibrary.ArchivioFile();
                    a.Contenuto = file;
                    a.Dimensione = file.Length;
                    a.NomeFile = Path.GetFileName(pathCartella);
                    a.NomeCompleto = Path.GetFileName(pathCartella);

                    docs.Add(a);
                    Session["siar_view_file"] = docs;
                    RegisterClientScriptBlock("window.open('../../VisualizzaDocumento.aspx');");

                    ShowMessage("File scaricato correttamente.");
                }
                else
                    throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  l'integrazione selezionata.");

            }
            catch (Exception ex) { ShowError(ex); }
        }

        void dgGestioneLavoriIntegrazioni_ItemDataBound(object sender, DataGridItemEventArgs e)
        {
            if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
            {
                SiarLibrary.VriepilogoIntegrazioniDownloadMassivo c = (SiarLibrary.VriepilogoIntegrazioniDownloadMassivo)e.Item.DataItem;

                if (string.IsNullOrEmpty(c.IdTicket) && c.IdIntegrazioneDomandaDiPagamento != null)
                {
                    e.Item.Cells[5].Text = "<input type=button class=ButtonGrid value='Richiedi lo scarico' style='width:130px' onclick=\"richiediScaricoIntegrazione('" + c.IdIntegrazioneDomandaDiPagamento + "')\" />";
                }
                else if (c.IdDomandaPagamento != null)
                    e.Item.Cells[5].Text = "Ticket ID: " + c.IdTicket;

                string eseguitoTxt = "";
                if (c.Eseguito != null)
                {
                    if (c.Eseguito)
                    {
                        eseguitoTxt = "Si";
                        e.Item.Cells[9].Text = "<input type=button class=ButtonGrid value='Scarica' style='width:130px' onclick=\"scaricaFileIntegrazione('" + c.IdTicket + "')\" />";
                    }
                    else
                        eseguitoTxt = "No";
                }


                e.Item.Cells[6].Text = eseguitoTxt;
                e.Item.Cells[7].Text = c.DataFineEstrazione;
                e.Item.Cells[8].Text = c.DimensioneFile;
            }
        }
        #endregion

        #region domande aiuto

        protected void btnCercaProgettoAiuto_Click(object sender, EventArgs e)
        {
            try
            {
                int idProgetto = 0;
                SiarBLL.VriepilogoDomandeAiutoDownloadMassivoCollectionProvider riepilogo_provider = new SiarBLL.VriepilogoDomandeAiutoDownloadMassivoCollectionProvider();
                SiarLibrary.VriepilogoDomandeAiutoDownloadMassivoCollection domande_aiuto;
                if (int.TryParse(txtProgettoAiuto.Text, out idProgetto))
                    domande_aiuto = riepilogo_provider.GetRiepilogoDomandeAiutoDownloadMassivo(idProgetto, null);
                else
                    domande_aiuto = riepilogo_provider.GetRiepilogoDomandeAiutoDownloadMassivo(null, Operatore.Utente.CfUtente);

                dgGestioneLavoriAiuti.DataSource = domande_aiuto;
                if (domande_aiuto.Count == 0)
                    dgGestioneLavoriAiuti.Titolo = "Nessuna integrazione alle domande di pagamento prevista per il progetto o per l'operatore.";
                dgGestioneLavoriAiuti.ItemDataBound += new DataGridItemEventHandler(dgGestioneLavoriAiuti_ItemDataBound);

                dgGestioneLavoriAiuti.DataBind();

            }
            catch (Exception ex) { ShowError(ex); }

        }

        protected void btnAvviaScaricoAiuto_Click(object sender, EventArgs e)
        {
            SiarBLL.DownloadMassivoRichiesteCollectionProvider downloadProvider = new SiarBLL.DownloadMassivoRichiesteCollectionProvider();

            try
            {
                int idAiuto = 0;
                if (int.TryParse(hdnIdDomandaAiutoScarico.Value, out idAiuto))
                {
                    SiarLibrary.Progetto progetto = new SiarBLL.ProgettoCollectionProvider().GetById(idAiuto);

                    SiarLibrary.DownloadMassivoRichieste download = new SiarLibrary.DownloadMassivoRichieste();

                    download.CfOperatore = Operatore.Utente.CfUtente;                    
                    download.IdProgetto = progetto.IdProgetto;
                    download.Segnatura = progetto.Segnatura;
                    download.DataInserimento = DateTime.Now;
                    downloadProvider.Save(download);
                    ShowMessage("Scarico avviato correttamente");
                }
                else
                    throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  la domanda selezionata.");
            }
            catch (Exception ex)
            {
                downloadProvider.DbProviderObj.Rollback(); throw ex;
            }
        }

        protected void btnScaricaFileAiuto_Click(object sender, EventArgs e)
        {
            try
            {
                if (string.IsNullOrEmpty(hdnIdTicketAiuto.Value)) throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  l'integrazione selezionata.");
                String pathCartella = System.Configuration.ConfigurationManager.AppSettings["Download_Massivi"] + "/";

                //String pathCartella = @"C:\download_sigef\";

                //pathCartella += "4.zip";

                pathCartella += hdnIdTicketAiuto.Value + ".zip";

                var file = File.ReadAllBytes(pathCartella);

                if (file != null)
                {
                    Session["evita_controllo_date_sessione"] = "true";
                    /*
                    Response.Clear();
                    Response.ClearHeaders();
                    Response.ClearContent();
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + Path.GetFileName(pathCartella));
                    Response.AddHeader("Content-Length", file.Length.ToString());
                    Response.ContentType = "application/octet-stream";
                    //Response.ContentType = "application/zip";
                    Response.BinaryWrite(file);
                    Response.Flush();
                    Response.End();
                    */

                    SiarLibrary.ArchivioFileCollection docs = new SiarLibrary.ArchivioFileCollection();
                    SiarLibrary.ArchivioFile a = new SiarLibrary.ArchivioFile();
                    a.Contenuto = file;
                    a.Dimensione = file.Length;
                    a.NomeFile = Path.GetFileName(pathCartella);
                    a.NomeCompleto = Path.GetFileName(pathCartella);

                    docs.Add(a);
                    Session["siar_view_file"] = docs;
                    RegisterClientScriptBlock("window.open('../../VisualizzaDocumento.aspx');");

                    ShowMessage("File scaricato correttamente.");
                }
                else
                    throw new SiarLibrary.SiarException("Impossibile scaricare i documenti per  l'integrazione selezionata.");

            }
            catch (Exception ex) { ShowError(ex); }
        }

        void dgGestioneLavoriAiuti_ItemDataBound(object sender, DataGridItemEventArgs e)
        {
            if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
            {
                SiarLibrary.VriepilogoDomandeAiutoDownloadMassivo c = (SiarLibrary.VriepilogoDomandeAiutoDownloadMassivo)e.Item.DataItem;

                if (string.IsNullOrEmpty(c.IdTicket) && c.IdProgetto != null)
                {
                    e.Item.Cells[4].Text = "<input type=button class=ButtonGrid value='Richiedi lo scarico' style='width:130px' onclick=\"richiediScaricoAiuto('" + c.IdProgetto + "')\" />";
                }
                else if (c.IdProgetto != null)
                    e.Item.Cells[4].Text = "Ticket ID: " + c.IdTicket;

                string eseguitoTxt = "";
                if (c.Eseguito != null)
                {
                    if (c.Eseguito)
                    {
                        eseguitoTxt = "Si";
                        e.Item.Cells[8].Text = "<input type=button class=ButtonGrid value='Scarica' style='width:130px' onclick=\"btnScaricaFileAiuto('" + c.IdTicket + "')\" />";
                    }
                    else
                        eseguitoTxt = "No";
                }


                e.Item.Cells[5].Text = eseguitoTxt;
                e.Item.Cells[6].Text = c.DataFineEstrazione;
                e.Item.Cells[7].Text = c.DimensioneFile;
            }
        }

        #endregion
    }
}